{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../../utils/index.js');\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar refs = require('../../../utils/vue/refs.js');\nvar vnode = require('../../../utils/vue/vnode.js');\nconst forwardRefProps = runtime.buildProps({\n  setRef: {\n    type: runtime.definePropType(Function),\n    required: true\n  },\n  onlyChild: Boolean\n});\nvar ForwardRef = vue.defineComponent({\n  props: forwardRefProps,\n  setup(props, {\n    slots\n  }) {\n    const fragmentRef = vue.ref();\n    const setRef = refs.composeRefs(fragmentRef, el => {\n      if (el) {\n        props.setRef(el.nextElementSibling);\n      } else {\n        props.setRef(null);\n      }\n    });\n    return () => {\n      var _a;\n      const [firstChild] = ((_a = slots.default) == null ? void 0 : _a.call(slots)) || [];\n      const child = props.onlyChild ? vnode.ensureOnlyChild(firstChild.children) : firstChild.children;\n      return vue.createVNode(vue.Fragment, {\n        \"ref\": setRef\n      }, [child]);\n    };\n  }\n});\nexports[\"default\"] = ForwardRef;\nexports.forwardRefProps = forwardRefProps;","map":{"version":3,"names":["forwardRefProps","runtime","buildProps","setRef","type","definePropType","Function","required","onlyChild","Boolean","ForwardRef","vue","defineComponent","props","setup","fragmentRef","ref","refs","composeRefs","el","nextElementSibling","_a","firstChild","slots","default","call","child","vnode","ensureOnlyChild","children","createVNode","Fragment"],"sources":["../../../../../../packages/components/tooltip-v2/src/forward-ref.tsx"],"sourcesContent":["import { Fragment, defineComponent, ref } from 'vue'\nimport {\n  buildProps,\n  composeRefs,\n  definePropType,\n  ensureOnlyChild,\n} from '@element-plus/utils'\n\nimport type { ExtractPropTypes, VNodeArrayChildren } from 'vue'\n\nexport type RefSetter = (el: HTMLElement | null) => void\n\nexport const forwardRefProps = buildProps({\n  setRef: { type: definePropType<RefSetter>(Function), required: true },\n  onlyChild: Boolean,\n} as const)\n\nexport type ForwardRefProps = ExtractPropTypes<typeof forwardRefProps>\n\n// TODO: consider make this component a reusable component without the only child feature.\nexport default defineComponent({\n  props: forwardRefProps,\n  setup(props, { slots }) {\n    const fragmentRef = ref()\n    const setRef = composeRefs(fragmentRef, (el) => {\n      // vue fragments is represented as a text element.\n      // The first element sibling should be the first element children of fragment.\n      // This is how we get the element.\n      if (el) {\n        props.setRef(\n          (el as HTMLElement).nextElementSibling as HTMLElement | null\n        )\n      } else {\n        props.setRef(null)\n      }\n    })\n    return () => {\n      const [firstChild] = slots.default?.() || []\n      const child = props.onlyChild\n        ? ensureOnlyChild(firstChild.children as VNodeArrayChildren)\n        : firstChild.children\n      // Dunno why the ref for jsx complains about the typing issue which was not\n      // in template\n      return <Fragment ref={setRef as any}>{child}</Fragment>\n    }\n  },\n})\n"],"mappings":";;;;;;;;;;AAYa,MAAAA,eAAe,GAAGC,OAAA,CAAAC,UAAU,CAAC;EACxCC,MAAM,EAAE;IAAEC,IAAI,EAAEH,OAAA,CAAAI,cAAc,CAAYC,QAAZ,CAAtB;IAA6CC,QAAQ,EAAE;GADvB;EAExCC,SAAS,EAAEC;AAF6B,CAAD;AAOzC,IAAAC,UAAA,GAAAC,GAAA,CAAAC,eAAA;EACAC,KAAA,EAAAb,eAAA;EACEc,KAAKD,MADwB;;GAExB;IAAU,MAAAE,WAAA,GAAAJ,GAAA,CAAAK,GAAA;IAAS,MAAAb,MAAA,GAAAc,IAAA,CAAAC,WAAA,CAAAH,WAAA,EAAAI,EAAA;MAChB,IAAAA,EAAA;QACNN,KAAA,CAAAV,MAAe,CAAAgB,EAAA,CAAAC,kBAAW;MACxB;QACAP,KAAA,CAAAV,MAAA;MACA;IACA;IACE,aAAM;MAGP,IAAMkB,EAAA;YACA,CAAAC,UAAL,MAAAD,EAAA,GAAAE,KAAA,CAAAC,OAAA,qBAAAH,EAAA,CAAAI,IAAA,CAAAF,KAAA;MACD,MAAAG,KAAA,GAAAb,KAAA,CAAAL,SAAA,GAAAmB,KAAA,CAAAC,eAAA,CAAAN,UAAA,CAAAO,QAAA,IAAAP,UAAA,CAAAO,QAAA;MAVH,OAAAlB,GAAA,CAAAmB,WAAA,CAAAnB,GAAA,CAAAoB,QAAA;QAYA,KAAa,EAAA5B;MACX,IAAAuB,KAAM;IACN;EAIA"},"metadata":{},"sourceType":"script","externalDependencies":[]}