{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../form/index.js');\nrequire('../../config-provider/index.js');\nrequire('../../../hooks/index.js');\nvar constants = require('./constants.js');\nvar index = require('../../../hooks/use-deprecated/index.js');\nvar useGlobalConfig = require('../../config-provider/src/hooks/use-global-config.js');\nvar useFormItem = require('../../form/src/hooks/use-form-item.js');\nvar useFormCommonProps = require('../../form/src/hooks/use-form-common-props.js');\nconst useButton = (props, emit) => {\n  index.useDeprecated({\n    from: \"type.text\",\n    replacement: \"link\",\n    version: \"3.0.0\",\n    scope: \"props\",\n    ref: \"https://element-plus.org/en-US/component/button.html#button-attributes\"\n  }, vue.computed(() => props.type === \"text\"));\n  const buttonGroupContext = vue.inject(constants.buttonGroupContextKey, void 0);\n  const globalConfig = useGlobalConfig.useGlobalConfig(\"button\");\n  const {\n    form\n  } = useFormItem.useFormItem();\n  const _size = useFormCommonProps.useFormSize(vue.computed(() => buttonGroupContext == null ? void 0 : buttonGroupContext.size));\n  const _disabled = useFormCommonProps.useFormDisabled();\n  const _ref = vue.ref();\n  const slots = vue.useSlots();\n  const _type = vue.computed(() => props.type || (buttonGroupContext == null ? void 0 : buttonGroupContext.type) || \"\");\n  const autoInsertSpace = vue.computed(() => {\n    var _a, _b, _c;\n    return (_c = (_b = props.autoInsertSpace) != null ? _b : (_a = globalConfig.value) == null ? void 0 : _a.autoInsertSpace) != null ? _c : false;\n  });\n  const _props = vue.computed(() => {\n    if (props.tag === \"button\") {\n      return {\n        ariaDisabled: _disabled.value || props.loading,\n        disabled: _disabled.value || props.loading,\n        autofocus: props.autofocus,\n        type: props.nativeType\n      };\n    }\n    return {};\n  });\n  const shouldAddSpace = vue.computed(() => {\n    var _a;\n    const defaultSlot = (_a = slots.default) == null ? void 0 : _a.call(slots);\n    if (autoInsertSpace.value && (defaultSlot == null ? void 0 : defaultSlot.length) === 1) {\n      const slot = defaultSlot[0];\n      if ((slot == null ? void 0 : slot.type) === vue.Text) {\n        const text = slot.children;\n        return /^\\p{Unified_Ideograph}{2}$/u.test(text.trim());\n      }\n    }\n    return false;\n  });\n  const handleClick = evt => {\n    if (props.nativeType === \"reset\") {\n      form == null ? void 0 : form.resetFields();\n    }\n    emit(\"click\", evt);\n  };\n  return {\n    _disabled,\n    _size,\n    _type,\n    _ref,\n    _props,\n    shouldAddSpace,\n    handleClick\n  };\n};\nexports.useButton = useButton;","map":{"version":3,"names":["useButton","props","emit","index","useDeprecated","from","replacement","version","scope","ref","vue","computed","type","buttonGroupContext","inject","constants","buttonGroupContextKey","globalConfig","useGlobalConfig","form","useFormItem","_size","useFormCommonProps","useFormSize","size","_disabled","useFormDisabled","_ref","slots","useSlots","_type","autoInsertSpace","_a","_b","_c","value","_props","tag","ariaDisabled","loading","disabled","autofocus","nativeType","shouldAddSpace","defaultSlot","default","call","length","slot","Text","text","children","test","trim","handleClick","evt","resetFields"],"sources":["../../../../../../packages/components/button/src/use-button.ts"],"sourcesContent":["import { Text, computed, inject, ref, useSlots } from 'vue'\nimport {\n  useFormDisabled,\n  useFormItem,\n  useFormSize,\n} from '@element-plus/components/form'\nimport { useGlobalConfig } from '@element-plus/components/config-provider'\nimport { useDeprecated } from '@element-plus/hooks'\nimport { buttonGroupContextKey } from './constants'\n\nimport type { SetupContext } from 'vue'\nimport type { ButtonEmits, ButtonProps } from './button'\n\nexport const useButton = (\n  props: ButtonProps,\n  emit: SetupContext<ButtonEmits>['emit']\n) => {\n  useDeprecated(\n    {\n      from: 'type.text',\n      replacement: 'link',\n      version: '3.0.0',\n      scope: 'props',\n      ref: 'https://element-plus.org/en-US/component/button.html#button-attributes',\n    },\n    computed(() => props.type === 'text')\n  )\n\n  const buttonGroupContext = inject(buttonGroupContextKey, undefined)\n  const globalConfig = useGlobalConfig('button')\n  const { form } = useFormItem()\n  const _size = useFormSize(computed(() => buttonGroupContext?.size))\n  const _disabled = useFormDisabled()\n  const _ref = ref<HTMLButtonElement>()\n  const slots = useSlots()\n\n  const _type = computed(() => props.type || buttonGroupContext?.type || '')\n  const autoInsertSpace = computed(\n    () => props.autoInsertSpace ?? globalConfig.value?.autoInsertSpace ?? false\n  )\n\n  const _props = computed(() => {\n    if (props.tag === 'button') {\n      return {\n        ariaDisabled: _disabled.value || props.loading,\n        disabled: _disabled.value || props.loading,\n        autofocus: props.autofocus,\n        type: props.nativeType,\n      }\n    }\n    return {}\n  })\n\n  // add space between two characters in Chinese\n  const shouldAddSpace = computed(() => {\n    const defaultSlot = slots.default?.()\n    if (autoInsertSpace.value && defaultSlot?.length === 1) {\n      const slot = defaultSlot[0]\n      if (slot?.type === Text) {\n        const text = slot.children as string\n        return /^\\p{Unified_Ideograph}{2}$/u.test(text.trim())\n      }\n    }\n    return false\n  })\n\n  const handleClick = (evt: MouseEvent) => {\n    if (props.nativeType === 'reset') {\n      form?.resetFields()\n    }\n    emit('click', evt)\n  }\n\n  return {\n    _disabled,\n    _size,\n    _type,\n    _ref,\n    _props,\n    shouldAddSpace,\n    handleClick,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}