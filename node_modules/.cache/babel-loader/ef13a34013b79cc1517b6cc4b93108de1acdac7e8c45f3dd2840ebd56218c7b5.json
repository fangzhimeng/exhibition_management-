{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../../../utils/index.js');\nvar headerRow = require('../header-row.js');\nvar shared = require('@vue/shared');\nconst TableV2HeaderRow = vue.defineComponent({\n  name: \"ElTableV2HeaderRow\",\n  props: headerRow.tableV2HeaderRowProps,\n  setup(props, {\n    slots\n  }) {\n    return () => {\n      const {\n        columns,\n        columnsStyles,\n        headerIndex,\n        style\n      } = props;\n      let Cells = columns.map((column, columnIndex) => {\n        return slots.cell({\n          columns,\n          column,\n          columnIndex,\n          headerIndex,\n          style: columnsStyles[column.key]\n        });\n      });\n      if (slots.header) {\n        Cells = slots.header({\n          cells: Cells.map(node => {\n            if (shared.isArray(node) && node.length === 1) {\n              return node[0];\n            }\n            return node;\n          }),\n          columns,\n          headerIndex\n        });\n      }\n      return vue.createVNode(\"div\", {\n        \"class\": props.class,\n        \"style\": style,\n        \"role\": \"row\"\n      }, [Cells]);\n    };\n  }\n});\nexports[\"default\"] = TableV2HeaderRow;","map":{"version":3,"names":["TableV2HeaderRow","vue","defineComponent","name","props","headerRow","tableV2HeaderRowProps","slots","columns","columnsStyles","headerIndex","style","Cells","map","column","columnIndex","cell","key","header","cells","node","shared","isArray","length","createVNode","class"],"sources":["../../../../../../../packages/components/table-v2/src/components/header-row.tsx"],"sourcesContent":["import { defineComponent } from 'vue'\nimport { isArray } from '@element-plus/utils'\nimport { tableV2HeaderRowProps } from '../header-row'\n\nimport type { CSSProperties } from 'vue'\nimport type { ColumnCellsType } from '../types'\nimport type { TableV2HeaderRowProps } from '../header-row'\n\nconst TableV2HeaderRow = defineComponent({\n  name: 'ElTableV2HeaderRow',\n  props: tableV2HeaderRowProps,\n  setup(props, { slots }) {\n    return () => {\n      const { columns, columnsStyles, headerIndex, style } = props\n      let Cells: ColumnCellsType = columns.map((column, columnIndex) => {\n        return slots.cell!({\n          columns,\n          column,\n          columnIndex,\n          headerIndex,\n          style: columnsStyles[column.key],\n        })\n      })\n\n      if (slots.header) {\n        Cells = slots.header({\n          cells: Cells.map((node) => {\n            if (isArray(node) && node.length === 1) {\n              return node[0]\n            }\n            return node\n          }),\n          columns,\n          headerIndex,\n        })\n      }\n\n      return (\n        <div class={props.class} style={style} role=\"row\">\n          {Cells}\n        </div>\n      )\n    }\n  },\n})\n\nexport default TableV2HeaderRow\n\nexport type TableV2HeaderRowCellRendererParams = {\n  columns: TableV2HeaderRowProps['columns']\n  column: TableV2HeaderRowProps['columns'][number]\n  columnIndex: number\n  headerIndex: number\n  style: CSSProperties\n}\n\nexport type TableV2HeaderRowRendererParams = {\n  cells: ColumnCellsType\n  columns: TableV2HeaderRowProps['columns']\n  headerIndex: number\n}\n"],"mappings":";;;;;;;;;AAQM,MAAAA,gBAAgB,GAAGC,GAAA,CAAAC,eAAe,CAAC;EACvCC,IAAI,EAAE,oBADiC;EAEvCC,KAAK,EAAEC,SAAA,CAAAC,qBAFgC;;IAGlCC;EAAU;IAAS;MACtB,MAAa;QACLC,OAAA;QAAEC,aAAF;QAAWC,WAAX;QAA0BC;MAAa,IAAAP,KAAA;MAAvC,IAAiDQ,KAAvD,GAAAJ,OAAA,CAAAK,GAAA,EAAAC,MAAA,EAAAC,WAAA;QACI,OAAsBR,KAAG,CAAAS,IAAO,CAAC;UAC5BR,OAAA;UACLM,MADiB;UAEjBC,WAFiB;UAGjBL,WAHiB;UAIjBC,KAJiB,EAAAF,aAAA,CAAAK,MAAA,CAAAG,GAAA;QAKjB;MALiB;MAOpB,IARDV,KAAA,CAAAW,MAAA;;UAUIC,KAAK,EAACP,KAAV,CAAkBC,GAAA,CAAAO,IAAA;YAChB,IAAQC,MAAA,CAAAC,OAAM,CAAAF,IAAN,CAAa,IAAAA,IAAA,CAAAG,MAAA;cACnB,OAAYH,IAAL,EAAW;;mBAEPA,IAAA;UACR;;UACDV;QACD;;MAED,OAAAT,GAAA,CAAAuB,WAAA;QARmB,OAArB,EAAApB,KAAA,CAAAqB,KAAA;QAUD,SAAAd,KAAA;;MAED,IAAAC,KAAA;;EAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}