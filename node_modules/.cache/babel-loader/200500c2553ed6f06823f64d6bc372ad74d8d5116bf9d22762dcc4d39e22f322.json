{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar lodashUnified = require('lodash-unified');\nvar node = require('./node.js');\nconst flatNodes = (nodes, leafOnly) => {\n  return nodes.reduce((res, node) => {\n    if (node.isLeaf) {\n      res.push(node);\n    } else {\n      !leafOnly && res.push(node);\n      res = res.concat(flatNodes(node.children, leafOnly));\n    }\n    return res;\n  }, []);\n};\nclass Store {\n  constructor(data, config) {\n    this.config = config;\n    const nodes = (data || []).map(nodeData => new node[\"default\"](nodeData, this.config));\n    this.nodes = nodes;\n    this.allNodes = flatNodes(nodes, false);\n    this.leafNodes = flatNodes(nodes, true);\n  }\n  getNodes() {\n    return this.nodes;\n  }\n  getFlattedNodes(leafOnly) {\n    return leafOnly ? this.leafNodes : this.allNodes;\n  }\n  appendNode(nodeData, parentNode) {\n    const node$1 = parentNode ? parentNode.appendChild(nodeData) : new node[\"default\"](nodeData, this.config);\n    if (!parentNode) this.nodes.push(node$1);\n    this.allNodes.push(node$1);\n    node$1.isLeaf && this.leafNodes.push(node$1);\n  }\n  appendNodes(nodeDataList, parentNode) {\n    nodeDataList.forEach(nodeData => this.appendNode(nodeData, parentNode));\n  }\n  getNodeByValue(value, leafOnly = false) {\n    if (!value && value !== 0) return null;\n    const node = this.getFlattedNodes(leafOnly).find(node2 => lodashUnified.isEqual(node2.value, value) || lodashUnified.isEqual(node2.pathValues, value));\n    return node || null;\n  }\n  getSameNode(node) {\n    if (!node) return null;\n    const node_ = this.getFlattedNodes(false).find(({\n      value,\n      level\n    }) => lodashUnified.isEqual(node.value, value) && node.level === level);\n    return node_ || null;\n  }\n}\nexports[\"default\"] = Store;","map":{"version":3,"names":["flatNodes","nodes","leafOnly","reduce","res","node","isLeaf","push","concat","children","Store","constructor","data","config","map","nodeData","allNodes","leafNodes","getNodes","getFlattedNodes","appendNode","parentNode","node$1","appendChild","appendNodes","nodeDataList","forEach","getNodeByValue","value","find","node2","lodashUnified","isEqual","pathValues","getSameNode","node_","level"],"sources":["../../../../../../packages/components/cascader-panel/src/store.ts"],"sourcesContent":["import { isEqual } from 'lodash-unified'\nimport Node from './node'\n\nimport type { Nullable } from '@element-plus/utils'\nimport type {\n  CascaderConfig,\n  CascaderNodePathValue,\n  CascaderNodeValue,\n  CascaderOption,\n} from './node'\n\nconst flatNodes = (nodes: Node[], leafOnly: boolean) => {\n  return nodes.reduce((res, node) => {\n    if (node.isLeaf) {\n      res.push(node)\n    } else {\n      !leafOnly && res.push(node)\n      res = res.concat(flatNodes(node.children, leafOnly))\n    }\n    return res\n  }, [] as Node[])\n}\n\nexport default class Store {\n  readonly nodes: Node[]\n  readonly allNodes: Node[]\n  readonly leafNodes: Node[]\n\n  constructor(data: CascaderOption[], readonly config: CascaderConfig) {\n    const nodes = (data || []).map(\n      (nodeData) => new Node(nodeData, this.config)\n    )\n    this.nodes = nodes\n    this.allNodes = flatNodes(nodes, false)\n    this.leafNodes = flatNodes(nodes, true)\n  }\n\n  getNodes() {\n    return this.nodes\n  }\n\n  getFlattedNodes(leafOnly: boolean) {\n    return leafOnly ? this.leafNodes : this.allNodes\n  }\n\n  appendNode(nodeData: CascaderOption, parentNode?: Node) {\n    const node = parentNode\n      ? parentNode.appendChild(nodeData)\n      : new Node(nodeData, this.config)\n\n    if (!parentNode) this.nodes.push(node)\n\n    this.allNodes.push(node)\n    node.isLeaf && this.leafNodes.push(node)\n  }\n\n  appendNodes(nodeDataList: CascaderOption[], parentNode: Node) {\n    nodeDataList.forEach((nodeData) => this.appendNode(nodeData, parentNode))\n  }\n\n  // when checkStrictly, leaf node first\n  getNodeByValue(\n    value: CascaderNodeValue | CascaderNodePathValue,\n    leafOnly = false\n  ): Nullable<Node> {\n    if (!value && value !== 0) return null\n\n    const node = this.getFlattedNodes(leafOnly).find(\n      (node) => isEqual(node.value, value) || isEqual(node.pathValues, value)\n    )\n\n    return node || null\n  }\n\n  getSameNode(node: Node): Nullable<Node> {\n    if (!node) return null\n\n    const node_ = this.getFlattedNodes(false).find(\n      ({ value, level }) => isEqual(node.value, value) && node.level === level\n    )\n\n    return node_ || null\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}