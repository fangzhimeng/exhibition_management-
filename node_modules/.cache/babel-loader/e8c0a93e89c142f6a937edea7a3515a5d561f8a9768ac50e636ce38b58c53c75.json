{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../utils/index.js');\nvar vnode = require('../../utils/vue/vnode.js');\nconst getOrderedChildren = (vm, childComponentName, children) => {\n  const nodes = vnode.flattedChildren(vm.subTree).filter(n => {\n    var _a;\n    return vue.isVNode(n) && ((_a = n.type) == null ? void 0 : _a.name) === childComponentName && !!n.component;\n  });\n  const uids = nodes.map(n => n.component.uid);\n  return uids.map(uid => children[uid]).filter(p => !!p);\n};\nconst useOrderedChildren = (vm, childComponentName) => {\n  const children = {};\n  const orderedChildren = vue.shallowRef([]);\n  const addChild = child => {\n    children[child.uid] = child;\n    orderedChildren.value = getOrderedChildren(vm, childComponentName, children);\n  };\n  const removeChild = uid => {\n    delete children[uid];\n    orderedChildren.value = orderedChildren.value.filter(children2 => children2.uid !== uid);\n  };\n  return {\n    children: orderedChildren,\n    addChild,\n    removeChild\n  };\n};\nexports.useOrderedChildren = useOrderedChildren;","map":{"version":3,"names":["getOrderedChildren","vm","childComponentName","children","nodes","vnode","flattedChildren","subTree","filter","n","_a","vue","isVNode","type","name","component","uids","map","uid","p","useOrderedChildren","orderedChildren","shallowRef","addChild","child","value","removeChild","children2"],"sources":["../../../../../packages/hooks/use-ordered-children/index.ts"],"sourcesContent":["import { shallowRef } from 'vue'\nimport { flattedChildren, isVNode } from '@element-plus/utils'\n\nimport type { ComponentInternalInstance, VNode } from 'vue'\n\nconst getOrderedChildren = <T>(\n  vm: ComponentInternalInstance,\n  childComponentName: string,\n  children: Record<number, T>\n): T[] => {\n  const nodes = flattedChildren(vm.subTree).filter(\n    (n): n is VNode =>\n      isVNode(n) &&\n      (n.type as any)?.name === childComponentName &&\n      !!n.component\n  )\n  const uids = nodes.map((n) => n.component!.uid)\n  return uids.map((uid) => children[uid]).filter((p) => !!p)\n}\n\nexport const useOrderedChildren = <T extends { uid: number }>(\n  vm: ComponentInternalInstance,\n  childComponentName: string\n) => {\n  const children: Record<number, T> = {}\n  const orderedChildren = shallowRef<T[]>([])\n\n  const addChild = (child: T) => {\n    children[child.uid] = child\n    orderedChildren.value = getOrderedChildren(vm, childComponentName, children)\n  }\n  const removeChild = (uid: number) => {\n    delete children[uid]\n    orderedChildren.value = orderedChildren.value.filter(\n      (children) => children.uid !== uid\n    )\n  }\n\n  return {\n    children: orderedChildren,\n    addChild,\n    removeChild,\n  }\n}\n"],"mappings":";;;;;;;;AAEA,MAAMA,kBAAkB,GAAGA,CAACC,EAAE,EAAEC,kBAAkB,EAAEC,QAAQ,KAAK;EAC/D,MAAMC,KAAK,GAAGC,KAAA,CAAAC,eAAe,CAACL,EAAE,CAACM,OAAO,CAAC,CAACC,MAAM,CAAEC,CAAC,IAAK;IACtD,IAAIC,EAAE;IACN,OAAOC,GAAA,CAAAC,OAAO,CAACH,CAAC,CAAC,IAAI,CAAC,CAACC,EAAE,GAAGD,CAAC,CAACI,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGH,EAAE,CAACI,IAAI,MAAMZ,kBAAkB,IAAI,CAAC,CAACO,CAAC,CAACM,SAAS;EAC3G,CAAG,CAAC;EACF,MAAMC,IAAI,GAAGZ,KAAK,CAACa,GAAG,CAAER,CAAC,IAAKA,CAAC,CAACM,SAAS,CAACG,GAAG,CAAC;EAC9C,OAAOF,IAAI,CAACC,GAAG,CAAEC,GAAG,IAAKf,QAAQ,CAACe,GAAG,CAAC,CAAC,CAACV,MAAM,CAAEW,CAAC,IAAK,CAAC,CAACA,CAAC,CAAC;AAC5D,CAAC;AACW,MAACC,kBAAkB,GAAGA,CAACnB,EAAE,EAAEC,kBAAkB,KAAK;EAC5D,MAAMC,QAAQ,GAAG,EAAE;EACnB,MAAMkB,eAAe,GAAGV,GAAA,CAAAW,UAAU,CAAC,EAAE,CAAC;EACtC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;IAC1BrB,QAAQ,CAACqB,KAAK,CAACN,GAAG,CAAC,GAAGM,KAAK;IAC3BH,eAAe,CAACI,KAAK,GAAGzB,kBAAkB,CAACC,EAAE,EAAEC,kBAAkB,EAAEC,QAAQ,CAAC;EAChF,CAAG;EACD,MAAMuB,WAAW,GAAIR,GAAG,IAAK;IAC3B,OAAOf,QAAQ,CAACe,GAAG,CAAC;IACpBG,eAAe,CAACI,KAAK,GAAGJ,eAAe,CAACI,KAAK,CAACjB,MAAM,CAAEmB,SAAS,IAAKA,SAAS,CAACT,GAAG,KAAKA,GAAG,CAAC;EAC9F,CAAG;EACD,OAAO;IACLf,QAAQ,EAAEkB,eAAe;IACzBE,QAAQ;IACRG;EACJ,CAAG;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}