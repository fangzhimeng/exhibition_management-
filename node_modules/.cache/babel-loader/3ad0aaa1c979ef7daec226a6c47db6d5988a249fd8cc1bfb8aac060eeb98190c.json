{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar core = require('@vueuse/core');\nrequire('../../../utils/index.js');\nrequire('../../../hooks/index.js');\nvar constants = require('./constants.js');\nvar util = require('./util.js');\nvar thumb = require('./thumb.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar error = require('../../../utils/error.js');\nconst COMPONENT_NAME = \"Thumb\";\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  __name: \"thumb\",\n  props: thumb.thumbProps,\n  setup(__props) {\n    const props = __props;\n    const scrollbar = vue.inject(constants.scrollbarContextKey);\n    const ns = index.useNamespace(\"scrollbar\");\n    if (!scrollbar) error.throwError(COMPONENT_NAME, \"can not inject scrollbar context\");\n    const instance = vue.ref();\n    const thumb = vue.ref();\n    const thumbState = vue.ref({});\n    const visible = vue.ref(false);\n    let cursorDown = false;\n    let cursorLeave = false;\n    let originalOnSelectStart = core.isClient ? document.onselectstart : null;\n    const bar = vue.computed(() => util.BAR_MAP[props.vertical ? \"vertical\" : \"horizontal\"]);\n    const thumbStyle = vue.computed(() => util.renderThumbStyle({\n      size: props.size,\n      move: props.move,\n      bar: bar.value\n    }));\n    const offsetRatio = vue.computed(() => instance.value[bar.value.offset] ** 2 / scrollbar.wrapElement[bar.value.scrollSize] / props.ratio / thumb.value[bar.value.offset]);\n    const clickThumbHandler = e => {\n      var _a;\n      e.stopPropagation();\n      if (e.ctrlKey || [1, 2].includes(e.button)) return;\n      (_a = window.getSelection()) == null ? void 0 : _a.removeAllRanges();\n      startDrag(e);\n      const el = e.currentTarget;\n      if (!el) return;\n      thumbState.value[bar.value.axis] = el[bar.value.offset] - (e[bar.value.client] - el.getBoundingClientRect()[bar.value.direction]);\n    };\n    const clickTrackHandler = e => {\n      if (!thumb.value || !instance.value || !scrollbar.wrapElement) return;\n      const offset = Math.abs(e.target.getBoundingClientRect()[bar.value.direction] - e[bar.value.client]);\n      const thumbHalf = thumb.value[bar.value.offset] / 2;\n      const thumbPositionPercentage = (offset - thumbHalf) * 100 * offsetRatio.value / instance.value[bar.value.offset];\n      scrollbar.wrapElement[bar.value.scroll] = thumbPositionPercentage * scrollbar.wrapElement[bar.value.scrollSize] / 100;\n    };\n    const startDrag = e => {\n      e.stopImmediatePropagation();\n      cursorDown = true;\n      document.addEventListener(\"mousemove\", mouseMoveDocumentHandler);\n      document.addEventListener(\"mouseup\", mouseUpDocumentHandler);\n      originalOnSelectStart = document.onselectstart;\n      document.onselectstart = () => false;\n    };\n    const mouseMoveDocumentHandler = e => {\n      if (!instance.value || !thumb.value) return;\n      if (cursorDown === false) return;\n      const prevPage = thumbState.value[bar.value.axis];\n      if (!prevPage) return;\n      const offset = (instance.value.getBoundingClientRect()[bar.value.direction] - e[bar.value.client]) * -1;\n      const thumbClickPosition = thumb.value[bar.value.offset] - prevPage;\n      const thumbPositionPercentage = (offset - thumbClickPosition) * 100 * offsetRatio.value / instance.value[bar.value.offset];\n      scrollbar.wrapElement[bar.value.scroll] = thumbPositionPercentage * scrollbar.wrapElement[bar.value.scrollSize] / 100;\n    };\n    const mouseUpDocumentHandler = () => {\n      cursorDown = false;\n      thumbState.value[bar.value.axis] = 0;\n      document.removeEventListener(\"mousemove\", mouseMoveDocumentHandler);\n      document.removeEventListener(\"mouseup\", mouseUpDocumentHandler);\n      restoreOnselectstart();\n      if (cursorLeave) visible.value = false;\n    };\n    const mouseMoveScrollbarHandler = () => {\n      cursorLeave = false;\n      visible.value = !!props.size;\n    };\n    const mouseLeaveScrollbarHandler = () => {\n      cursorLeave = true;\n      visible.value = cursorDown;\n    };\n    vue.onBeforeUnmount(() => {\n      restoreOnselectstart();\n      document.removeEventListener(\"mouseup\", mouseUpDocumentHandler);\n    });\n    const restoreOnselectstart = () => {\n      if (document.onselectstart !== originalOnSelectStart) document.onselectstart = originalOnSelectStart;\n    };\n    core.useEventListener(vue.toRef(scrollbar, \"scrollbarElement\"), \"mousemove\", mouseMoveScrollbarHandler);\n    core.useEventListener(vue.toRef(scrollbar, \"scrollbarElement\"), \"mouseleave\", mouseLeaveScrollbarHandler);\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createBlock(vue.Transition, {\n        name: vue.unref(ns).b(\"fade\"),\n        persisted: \"\"\n      }, {\n        default: vue.withCtx(() => [vue.withDirectives(vue.createElementVNode(\"div\", {\n          ref_key: \"instance\",\n          ref: instance,\n          class: vue.normalizeClass([vue.unref(ns).e(\"bar\"), vue.unref(ns).is(vue.unref(bar).key)]),\n          onMousedown: clickTrackHandler\n        }, [vue.createElementVNode(\"div\", {\n          ref_key: \"thumb\",\n          ref: thumb,\n          class: vue.normalizeClass(vue.unref(ns).e(\"thumb\")),\n          style: vue.normalizeStyle(vue.unref(thumbStyle)),\n          onMousedown: clickThumbHandler\n        }, null, 38)], 34), [[vue.vShow, _ctx.always || visible.value]])]),\n        _: 1\n      }, 8, [\"name\"]);\n    };\n  }\n});\nvar Thumb = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/scrollbar/src/thumb.vue\"]]);\nexports[\"default\"] = Thumb;","map":{"version":3,"names":["scrollbar","vue","inject","constants","scrollbarContextKey","ns","index","useNamespace","error","throwError","COMPONENT_NAME","instance","ref","thumb","thumbState","visible","cursorDown","cursorLeave","originalOnSelectStart","core","isClient","document","onselectstart","bar","computed","util","BAR_MAP","props","vertical","thumbStyle","renderThumbStyle","size","move","value","offsetRatio","offset","wrapElement","scrollSize","ratio","clickThumbHandler","e","_a","stopPropagation","ctrlKey","includes","button","window","getSelection","removeAllRanges","startDrag","el","currentTarget","axis","client","getBoundingClientRect","direction","clickTrackHandler","Math","abs","target","thumbHalf","thumbPositionPercentage","scroll","stopImmediatePropagation","addEventListener","mouseMoveDocumentHandler","mouseUpDocumentHandler","prevPage","thumbClickPosition","removeEventListener","restoreOnselectstart","mouseMoveScrollbarHandler","mouseLeaveScrollbarHandler","onBeforeUnmount","useEventListener","toRef"],"sources":["../../../../../../packages/components/scrollbar/src/thumb.vue"],"sourcesContent":["<template>\n  <transition :name=\"ns.b('fade')\">\n    <div\n      v-show=\"always || visible\"\n      ref=\"instance\"\n      :class=\"[ns.e('bar'), ns.is(bar.key)]\"\n      @mousedown=\"clickTrackHandler\"\n    >\n      <div\n        ref=\"thumb\"\n        :class=\"ns.e('thumb')\"\n        :style=\"thumbStyle\"\n        @mousedown=\"clickThumbHandler\"\n      />\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, inject, onBeforeUnmount, ref, toRef } from 'vue'\nimport { useEventListener } from '@vueuse/core'\nimport { isClient, throwError } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { scrollbarContextKey } from './constants'\nimport { BAR_MAP, renderThumbStyle } from './util'\nimport { thumbProps } from './thumb'\n\nconst COMPONENT_NAME = 'Thumb'\nconst props = defineProps(thumbProps)\n\nconst scrollbar = inject(scrollbarContextKey)\nconst ns = useNamespace('scrollbar')\n\nif (!scrollbar) throwError(COMPONENT_NAME, 'can not inject scrollbar context')\n\nconst instance = ref<HTMLDivElement>()\nconst thumb = ref<HTMLDivElement>()\n\nconst thumbState = ref<Partial<Record<'X' | 'Y', number>>>({})\nconst visible = ref(false)\n\nlet cursorDown = false\nlet cursorLeave = false\nlet originalOnSelectStart:\n  | ((this: GlobalEventHandlers, ev: Event) => any)\n  | null = isClient ? document.onselectstart : null\n\nconst bar = computed(() => BAR_MAP[props.vertical ? 'vertical' : 'horizontal'])\n\nconst thumbStyle = computed(() =>\n  renderThumbStyle({\n    size: props.size,\n    move: props.move,\n    bar: bar.value,\n  })\n)\n\nconst offsetRatio = computed(\n  () =>\n    // offsetRatioX = original width of thumb / current width of thumb / ratioX\n    // offsetRatioY = original height of thumb / current height of thumb / ratioY\n    // instance height = wrap height - GAP\n    instance.value![bar.value.offset] ** 2 /\n    scrollbar.wrapElement![bar.value.scrollSize] /\n    props.ratio /\n    thumb.value![bar.value.offset]\n)\n\nconst clickThumbHandler = (e: MouseEvent) => {\n  // prevent click event of middle and right button\n  e.stopPropagation()\n  if (e.ctrlKey || [1, 2].includes(e.button)) return\n\n  window.getSelection()?.removeAllRanges()\n  startDrag(e)\n\n  const el = e.currentTarget as HTMLDivElement\n  if (!el) return\n  thumbState.value[bar.value.axis] =\n    el[bar.value.offset] -\n    (e[bar.value.client] - el.getBoundingClientRect()[bar.value.direction])\n}\n\nconst clickTrackHandler = (e: MouseEvent) => {\n  if (!thumb.value || !instance.value || !scrollbar.wrapElement) return\n\n  const offset = Math.abs(\n    (e.target as HTMLElement).getBoundingClientRect()[bar.value.direction] -\n      e[bar.value.client]\n  )\n  const thumbHalf = thumb.value[bar.value.offset] / 2\n  const thumbPositionPercentage =\n    ((offset - thumbHalf) * 100 * offsetRatio.value) /\n    instance.value[bar.value.offset]\n\n  scrollbar.wrapElement[bar.value.scroll] =\n    (thumbPositionPercentage * scrollbar.wrapElement[bar.value.scrollSize]) /\n    100\n}\n\nconst startDrag = (e: MouseEvent) => {\n  e.stopImmediatePropagation()\n  cursorDown = true\n  document.addEventListener('mousemove', mouseMoveDocumentHandler)\n  document.addEventListener('mouseup', mouseUpDocumentHandler)\n  originalOnSelectStart = document.onselectstart\n  document.onselectstart = () => false\n}\n\nconst mouseMoveDocumentHandler = (e: MouseEvent) => {\n  if (!instance.value || !thumb.value) return\n  if (cursorDown === false) return\n\n  const prevPage = thumbState.value[bar.value.axis]\n  if (!prevPage) return\n\n  const offset =\n    (instance.value.getBoundingClientRect()[bar.value.direction] -\n      e[bar.value.client]) *\n    -1\n  const thumbClickPosition = thumb.value[bar.value.offset] - prevPage\n  const thumbPositionPercentage =\n    ((offset - thumbClickPosition) * 100 * offsetRatio.value) /\n    instance.value[bar.value.offset]\n  scrollbar.wrapElement[bar.value.scroll] =\n    (thumbPositionPercentage * scrollbar.wrapElement[bar.value.scrollSize]) /\n    100\n}\n\nconst mouseUpDocumentHandler = () => {\n  cursorDown = false\n  thumbState.value[bar.value.axis] = 0\n  document.removeEventListener('mousemove', mouseMoveDocumentHandler)\n  document.removeEventListener('mouseup', mouseUpDocumentHandler)\n  restoreOnselectstart()\n  if (cursorLeave) visible.value = false\n}\n\nconst mouseMoveScrollbarHandler = () => {\n  cursorLeave = false\n  visible.value = !!props.size\n}\n\nconst mouseLeaveScrollbarHandler = () => {\n  cursorLeave = true\n  visible.value = cursorDown\n}\n\nonBeforeUnmount(() => {\n  restoreOnselectstart()\n  document.removeEventListener('mouseup', mouseUpDocumentHandler)\n})\n\nconst restoreOnselectstart = () => {\n  if (document.onselectstart !== originalOnSelectStart)\n    document.onselectstart = originalOnSelectStart\n}\n\nuseEventListener(\n  toRef(scrollbar, 'scrollbarElement'),\n  'mousemove',\n  mouseMoveScrollbarHandler\n)\nuseEventListener(\n  toRef(scrollbar, 'scrollbarElement'),\n  'mouseleave',\n  mouseLeaveScrollbarHandler\n)\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}