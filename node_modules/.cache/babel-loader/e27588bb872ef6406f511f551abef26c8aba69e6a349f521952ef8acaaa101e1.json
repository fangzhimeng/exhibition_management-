{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar core = require('@vueuse/core');\nrequire('../../../utils/index.js');\nrequire('../../../hooks/index.js');\nvar constants = require('./constants.js');\nvar tabBar = require('./tab-bar.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar error = require('../../../utils/error.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar strings = require('../../../utils/strings.js');\nconst COMPONENT_NAME = \"ElTabBar\";\nconst __default__ = vue.defineComponent({\n  name: COMPONENT_NAME\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: tabBar.tabBarProps,\n  setup(__props, {\n    expose\n  }) {\n    const props = __props;\n    const instance = vue.getCurrentInstance();\n    const rootTabs = vue.inject(constants.tabsRootContextKey);\n    if (!rootTabs) error.throwError(COMPONENT_NAME, \"<el-tabs><el-tab-bar /></el-tabs>\");\n    const ns = index.useNamespace(\"tabs\");\n    const barRef = vue.ref();\n    const barStyle = vue.ref();\n    const getBarStyle = () => {\n      let offset = 0;\n      let tabSize = 0;\n      const sizeName = [\"top\", \"bottom\"].includes(rootTabs.props.tabPosition) ? \"width\" : \"height\";\n      const sizeDir = sizeName === \"width\" ? \"x\" : \"y\";\n      const position = sizeDir === \"x\" ? \"left\" : \"top\";\n      props.tabs.every(tab => {\n        var _a, _b;\n        const $el = (_b = (_a = instance.parent) == null ? void 0 : _a.refs) == null ? void 0 : _b[`tab-${tab.uid}`];\n        if (!$el) return false;\n        if (!tab.active) {\n          return true;\n        }\n        offset = $el[`offset${strings.capitalize(position)}`];\n        tabSize = $el[`client${strings.capitalize(sizeName)}`];\n        const tabStyles = window.getComputedStyle($el);\n        if (sizeName === \"width\") {\n          if (props.tabs.length > 1) {\n            tabSize -= Number.parseFloat(tabStyles.paddingLeft) + Number.parseFloat(tabStyles.paddingRight);\n          }\n          offset += Number.parseFloat(tabStyles.paddingLeft);\n        }\n        return false;\n      });\n      return {\n        [sizeName]: `${tabSize}px`,\n        transform: `translate${strings.capitalize(sizeDir)}(${offset}px)`\n      };\n    };\n    const update = () => barStyle.value = getBarStyle();\n    vue.watch(() => props.tabs, async () => {\n      await vue.nextTick();\n      update();\n    }, {\n      immediate: true\n    });\n    core.useResizeObserver(barRef, () => update());\n    expose({\n      ref: barRef,\n      update\n    });\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createElementBlock(\"div\", {\n        ref_key: \"barRef\",\n        ref: barRef,\n        class: vue.normalizeClass([vue.unref(ns).e(\"active-bar\"), vue.unref(ns).is(vue.unref(rootTabs).props.tabPosition)]),\n        style: vue.normalizeStyle(barStyle.value)\n      }, null, 6);\n    };\n  }\n});\nvar TabBar = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tabs/src/tab-bar.vue\"]]);\nexports[\"default\"] = TabBar;","map":{"version":3,"names":["name","COMPONENT_NAME","instance","vue","getCurrentInstance","rootTabs","inject","constants","tabsRootContextKey","error","throwError","ns","index","useNamespace","barRef","ref","barStyle","getBarStyle","offset","tabSize","sizeName","includes","props","tabPosition","sizeDir","position","tabs","every","tab","_a","_b","$el","parent","refs","uid","active","strings","capitalize","tabStyles","window","getComputedStyle","length","Number","parseFloat","paddingLeft","paddingRight","transform","update","value","watch","nextTick","immediate","core","useResizeObserver","expose"],"sources":["../../../../../../packages/components/tabs/src/tab-bar.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"barRef\"\n    :class=\"[ns.e('active-bar'), ns.is(rootTabs.props.tabPosition)]\"\n    :style=\"barStyle\"\n  />\n</template>\n\n<script lang=\"ts\" setup>\nimport { getCurrentInstance, inject, nextTick, ref, watch } from 'vue'\nimport { useResizeObserver } from '@vueuse/core'\nimport { capitalize, throwError } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { tabsRootContextKey } from './constants'\nimport { tabBarProps } from './tab-bar'\n\nimport type { CSSProperties } from 'vue'\n\nconst COMPONENT_NAME = 'ElTabBar'\ndefineOptions({\n  name: COMPONENT_NAME,\n})\nconst props = defineProps(tabBarProps)\n\nconst instance = getCurrentInstance()!\nconst rootTabs = inject(tabsRootContextKey)\nif (!rootTabs) throwError(COMPONENT_NAME, '<el-tabs><el-tab-bar /></el-tabs>')\n\nconst ns = useNamespace('tabs')\n\nconst barRef = ref<HTMLDivElement>()\nconst barStyle = ref<CSSProperties>()\n\nconst getBarStyle = (): CSSProperties => {\n  let offset = 0\n  let tabSize = 0\n\n  const sizeName = ['top', 'bottom'].includes(rootTabs.props.tabPosition)\n    ? 'width'\n    : 'height'\n  const sizeDir = sizeName === 'width' ? 'x' : 'y'\n  const position = sizeDir === 'x' ? 'left' : 'top'\n\n  props.tabs.every((tab) => {\n    const $el = instance.parent?.refs?.[`tab-${tab.uid}`] as HTMLElement\n    if (!$el) return false\n\n    if (!tab.active) {\n      return true\n    }\n\n    offset = $el[`offset${capitalize(position)}`]\n    tabSize = $el[`client${capitalize(sizeName)}`]\n\n    const tabStyles = window.getComputedStyle($el)\n\n    if (sizeName === 'width') {\n      if (props.tabs.length > 1) {\n        tabSize -=\n          Number.parseFloat(tabStyles.paddingLeft) +\n          Number.parseFloat(tabStyles.paddingRight)\n      }\n      offset += Number.parseFloat(tabStyles.paddingLeft)\n    }\n    return false\n  })\n\n  return {\n    [sizeName]: `${tabSize}px`,\n    transform: `translate${capitalize(sizeDir)}(${offset}px)`,\n  }\n}\n\nconst update = () => (barStyle.value = getBarStyle())\n\nwatch(\n  () => props.tabs,\n  async () => {\n    await nextTick()\n    update()\n  },\n  { immediate: true }\n)\nuseResizeObserver(barRef, () => update())\n\ndefineExpose({\n  /** @description tab root html element */\n  ref: barRef,\n  /** @description method to manually update tab bar style */\n  update,\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;uCAmBc;EACZA,IAAM,EAAAC;AACR;;;;;;;;IAGA,MAAMC,QAAA,GAAWC,GAAA,CAAAC,kBAAmB;IAC9B,MAAAC,QAAA,GAAWF,GAAA,CAAAG,MAAA,CAAOC,SAAA,CAAAC,kBAAkB;IAC1C,IAAI,CAACH,QAAA,EAAUI,KAAA,CAAAC,UAAA,CAAWT,cAAA,EAAgB,mCAAmC;IAEvE,MAAAU,EAAA,GAAKC,KAAA,CAAAC,YAAA,CAAa,MAAM;IAE9B,MAAMC,MAAA,GAASX,GAAA,CAAAY,GAAoB;IACnC,MAAMC,QAAA,GAAWb,GAAA,CAAAY,GAAmB;IAEpC,MAAME,WAAA,GAAcA,CAAA,KAAqB;MACvC,IAAIC,MAAS;MACb,IAAIC,OAAU;MAER,MAAAC,QAAA,GAAW,CAAC,OAAO,QAAQ,EAAEC,QAAA,CAAShB,QAAS,CAAAiB,KAAA,CAAMC,WAAW,IAClE,OACA;MACE,MAAAC,OAAA,GAAUJ,QAAa,eAAU,GAAM;MACvC,MAAAK,QAAA,GAAWD,OAAY,WAAM,MAAS;MAEtCF,KAAA,CAAAI,IAAA,CAAKC,KAAM,CAACC,GAAQ;QACxB,IAAAC,EAAM,EAAMC,EAAA;QACZ,MAAKC,GAAA,IAAAD,EAAA,IAAAD,EAAA,GAAA3B,QAAA,CAAA8B,MAAA,qBAAAH,EAAA,CAAAI,IAAA,qBAAAH,EAAA,QAAAF,GAAA,CAAAM,GAAA;QAAY,KAAAH,GAAA,EAEb,OAAK,KAAQ;QACR,KAAAH,GAAA,CAAAO,MAAA;UACT;QAEA;QACUjB,MAAA,GAAAa,GAAA,CAAI,SAASK,OAAA,CAAAC,UAAA,CAAAZ,QAAmB;QAEpCN,OAAA,GAAAY,GAAA,UAAmBK,OAAA,CAAAC,UAAA,CAAAjB,QAAiB,CAAG;QAE7C,MAAAkB,SAAA,GAA0BC,MAAA,CAAAC,gBAAA,CAAAT,GAAA;QACpB,IAAAX,QAAM,KAAK,SAAS;UAEpB,IAAAE,KAAA,CAAAI,IAAA,CAAAe,MAAA;YAEJtB,OAAA,IAAAuB,MAAA,CAAAC,UAAA,CAAAL,SAAA,CAAAM,WAAA,IAAAF,MAAA,CAAAC,UAAA,CAAAL,SAAA,CAAAO,YAAA;UACA;UACF3B,MAAA,IAAAwB,MAAA,CAAAC,UAAA,CAAAL,SAAA,CAAAM,WAAA;QACA;QACD;MAED,CAAO;MACL;QACA,CAAWxB,QAAA,MAAAD,OAAY,IAAW;QACpC2B,SAAA,cAAAV,OAAA,CAAAC,UAAA,CAAAb,OAAA,KAAAN,MAAA;MAAA,CACF;IAEA;IAGE,MAAA6B,MAAM,GAAMA,CAAA,KAAA/B,QACA,CAAAgC,KAAA,GAAA/B,WAAA;IACVd,GAAA,CAAA8C,KAAA,OAAe3B,KAAA,CAAAI,IAAA;MACR,MAAAvB,GAAA,CAAA+C,QAAA;MAETH,MAAa;IAEf,CAAkB;MAAAI,SAAA;IAAA;IAELC,IAAA,CAAAC,iBAAA,CAAAvC,MAAA,QAAAiC,MAAA;IAAAO,MAEN;MAELvC,GAAA,EAAAD,MAAA;MACDiC"},"metadata":{},"sourceType":"script","externalDependencies":[]}