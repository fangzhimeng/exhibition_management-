{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nrequire('../../../utils/index.js');\nrequire('../../../constants/index.js');\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar types = require('../../../utils/types.js');\nvar event = require('../../../constants/event.js');\nconst affixProps = runtime.buildProps({\n  zIndex: {\n    type: runtime.definePropType([Number, String]),\n    default: 100\n  },\n  target: {\n    type: String,\n    default: \"\"\n  },\n  offset: {\n    type: Number,\n    default: 0\n  },\n  position: {\n    type: String,\n    values: [\"top\", \"bottom\"],\n    default: \"top\"\n  }\n});\nconst affixEmits = {\n  scroll: ({\n    scrollTop,\n    fixed\n  }) => types.isNumber(scrollTop) && types.isBoolean(fixed),\n  [event.CHANGE_EVENT]: fixed => types.isBoolean(fixed)\n};\nexports.affixEmits = affixEmits;\nexports.affixProps = affixProps;","map":{"version":3,"names":["affixProps","runtime","buildProps","zIndex","type","definePropType","Number","String","default","target","offset","position","values","affixEmits","scroll","scrollTop","fixed","types","isNumber","isBoolean","event","CHANGE_EVENT"],"sources":["../../../../../../packages/components/affix/src/affix.ts"],"sourcesContent":["import {\n  buildProps,\n  definePropType,\n  isBoolean,\n  isNumber,\n} from '@element-plus/utils'\nimport { CHANGE_EVENT } from '@element-plus/constants'\nimport type { ExtractPropTypes } from 'vue'\nimport type { ZIndexProperty } from 'csstype'\nimport type Affix from './affix.vue'\n\nexport const affixProps = buildProps({\n  /**\n   * @description affix element zIndex value\n   * */\n  zIndex: {\n    type: definePropType<ZIndexProperty>([Number, String]),\n    default: 100,\n  },\n  /**\n   * @description target container. (CSS selector)\n   */\n  target: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description offset distance\n   * */\n  offset: {\n    type: Number,\n    default: 0,\n  },\n  /**\n   * @description position of affix\n   * */\n  position: {\n    type: String,\n    values: ['top', 'bottom'],\n    default: 'top',\n  },\n} as const)\nexport type AffixProps = ExtractPropTypes<typeof affixProps>\n\nexport const affixEmits = {\n  scroll: ({ scrollTop, fixed }: { scrollTop: number; fixed: boolean }) =>\n    isNumber(scrollTop) && isBoolean(fixed),\n  [CHANGE_EVENT]: (fixed: boolean) => isBoolean(fixed),\n}\nexport type AffixEmits = typeof affixEmits\n\nexport type AffixInstance = InstanceType<typeof Affix>\n"],"mappings":";;;;;;;;;;AAOY,MAACA,UAAU,GAAGC,OAAA,CAAAC,UAAU,CAAC;EACnCC,MAAM,EAAE;IACNC,IAAI,EAAEH,OAAA,CAAAI,cAAc,CAAC,CAACC,MAAM,EAAEC,MAAM,CAAC,CAAC;IACtCC,OAAO,EAAE;EACb,CAAG;EACDC,MAAM,EAAE;IACNL,IAAI,EAAEG,MAAM;IACZC,OAAO,EAAE;EACb,CAAG;EACDE,MAAM,EAAE;IACNN,IAAI,EAAEE,MAAM;IACZE,OAAO,EAAE;EACb,CAAG;EACDG,QAAQ,EAAE;IACRP,IAAI,EAAEG,MAAM;IACZK,MAAM,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC;IACzBJ,OAAO,EAAE;EACb;AACA,CAAC;AACW,MAACK,UAAU,GAAG;EACxBC,MAAM,EAAEA,CAAC;IAAEC,SAAS;IAAEC;EAAK,CAAE,KAAKC,KAAA,CAAAC,QAAQ,CAACH,SAAS,CAAC,IAAIE,KAAA,CAAAE,SAAS,CAACH,KAAK,CAAC;EACzE,CAACI,KAAA,CAAAC,YAAY,GAAIL,KAAK,IAAKC,KAAA,CAAAE,SAAS,CAACH,KAAK;AAC5C"},"metadata":{},"sourceType":"script","externalDependencies":[]}