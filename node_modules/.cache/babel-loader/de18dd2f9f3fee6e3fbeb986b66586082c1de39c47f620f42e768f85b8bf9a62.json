{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar dayjs = require('dayjs');\nvar lodashUnified = require('lodash-unified');\nrequire('../../../../hooks/index.js');\nrequire('../../../../utils/index.js');\nrequire('../../../../constants/index.js');\nvar panelTimeRange = require('../props/panel-time-range.js');\nvar useTimePanel = require('../composables/use-time-panel.js');\nvar useTimePicker = require('../composables/use-time-picker.js');\nvar basicTimeSpinner = require('./basic-time-spinner.js');\nvar pluginVue_exportHelper = require('../../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../../hooks/use-locale/index.js');\nvar index$1 = require('../../../../hooks/use-namespace/index.js');\nvar aria = require('../../../../constants/aria.js');\nvar shared = require('@vue/shared');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);\nconst _hoisted_1 = [\"disabled\"];\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  __name: \"panel-time-range\",\n  props: panelTimeRange.panelTimeRangeProps,\n  emits: [\"pick\", \"select-range\", \"set-picker-option\"],\n  setup(__props, {\n    emit\n  }) {\n    const props = __props;\n    const makeSelectRange = (start, end) => {\n      const result = [];\n      for (let i = start; i <= end; i++) {\n        result.push(i);\n      }\n      return result;\n    };\n    const {\n      t,\n      lang\n    } = index.useLocale();\n    const nsTime = index$1.useNamespace(\"time\");\n    const nsPicker = index$1.useNamespace(\"picker\");\n    const pickerBase = vue.inject(\"EP_PICKER_BASE\");\n    const {\n      arrowControl,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n      defaultValue\n    } = pickerBase.props;\n    const startContainerKls = vue.computed(() => [nsTime.be(\"range-picker\", \"body\"), nsTime.be(\"panel\", \"content\"), nsTime.is(\"arrow\", arrowControl), showSeconds.value ? \"has-seconds\" : \"\"]);\n    const endContainerKls = vue.computed(() => [nsTime.be(\"range-picker\", \"body\"), nsTime.be(\"panel\", \"content\"), nsTime.is(\"arrow\", arrowControl), showSeconds.value ? \"has-seconds\" : \"\"]);\n    const startTime = vue.computed(() => props.parsedValue[0]);\n    const endTime = vue.computed(() => props.parsedValue[1]);\n    const oldValue = useTimePicker.useOldValue(props);\n    const handleCancel = () => {\n      emit(\"pick\", oldValue.value, false);\n    };\n    const showSeconds = vue.computed(() => {\n      return props.format.includes(\"ss\");\n    });\n    const amPmMode = vue.computed(() => {\n      if (props.format.includes(\"A\")) return \"A\";\n      if (props.format.includes(\"a\")) return \"a\";\n      return \"\";\n    });\n    const handleConfirm = (visible = false) => {\n      emit(\"pick\", [startTime.value, endTime.value], visible);\n    };\n    const handleMinChange = date => {\n      handleChange(date.millisecond(0), endTime.value);\n    };\n    const handleMaxChange = date => {\n      handleChange(startTime.value, date.millisecond(0));\n    };\n    const isValidValue = _date => {\n      const parsedDate = _date.map(_ => dayjs__default[\"default\"](_).locale(lang.value));\n      const result = getRangeAvailableTime(parsedDate);\n      return parsedDate[0].isSame(result[0]) && parsedDate[1].isSame(result[1]);\n    };\n    const handleChange = (start, end) => {\n      emit(\"pick\", [start, end], true);\n    };\n    const btnConfirmDisabled = vue.computed(() => {\n      return startTime.value > endTime.value;\n    });\n    const selectionRange = vue.ref([0, 2]);\n    const setMinSelectionRange = (start, end) => {\n      emit(\"select-range\", start, end, \"min\");\n      selectionRange.value = [start, end];\n    };\n    const offset = vue.computed(() => showSeconds.value ? 11 : 8);\n    const setMaxSelectionRange = (start, end) => {\n      emit(\"select-range\", start, end, \"max\");\n      const _offset = vue.unref(offset);\n      selectionRange.value = [start + _offset, end + _offset];\n    };\n    const changeSelectionRange = step => {\n      const list = showSeconds.value ? [0, 3, 6, 11, 14, 17] : [0, 3, 8, 11];\n      const mapping = [\"hours\", \"minutes\"].concat(showSeconds.value ? [\"seconds\"] : []);\n      const index = list.indexOf(selectionRange.value[0]);\n      const next = (index + step + list.length) % list.length;\n      const half = list.length / 2;\n      if (next < half) {\n        timePickerOptions[\"start_emitSelectRange\"](mapping[next]);\n      } else {\n        timePickerOptions[\"end_emitSelectRange\"](mapping[next - half]);\n      }\n    };\n    const handleKeydown = event => {\n      const code = event.code;\n      const {\n        left,\n        right,\n        up,\n        down\n      } = aria.EVENT_CODE;\n      if ([left, right].includes(code)) {\n        const step = code === left ? -1 : 1;\n        changeSelectionRange(step);\n        event.preventDefault();\n        return;\n      }\n      if ([up, down].includes(code)) {\n        const step = code === up ? -1 : 1;\n        const role = selectionRange.value[0] < offset.value ? \"start\" : \"end\";\n        timePickerOptions[`${role}_scrollDown`](step);\n        event.preventDefault();\n        return;\n      }\n    };\n    const disabledHours_ = (role, compare) => {\n      const defaultDisable = disabledHours ? disabledHours(role) : [];\n      const isStart = role === \"start\";\n      const compareDate = compare || (isStart ? endTime.value : startTime.value);\n      const compareHour = compareDate.hour();\n      const nextDisable = isStart ? makeSelectRange(compareHour + 1, 23) : makeSelectRange(0, compareHour - 1);\n      return lodashUnified.union(defaultDisable, nextDisable);\n    };\n    const disabledMinutes_ = (hour, role, compare) => {\n      const defaultDisable = disabledMinutes ? disabledMinutes(hour, role) : [];\n      const isStart = role === \"start\";\n      const compareDate = compare || (isStart ? endTime.value : startTime.value);\n      const compareHour = compareDate.hour();\n      if (hour !== compareHour) {\n        return defaultDisable;\n      }\n      const compareMinute = compareDate.minute();\n      const nextDisable = isStart ? makeSelectRange(compareMinute + 1, 59) : makeSelectRange(0, compareMinute - 1);\n      return lodashUnified.union(defaultDisable, nextDisable);\n    };\n    const disabledSeconds_ = (hour, minute, role, compare) => {\n      const defaultDisable = disabledSeconds ? disabledSeconds(hour, minute, role) : [];\n      const isStart = role === \"start\";\n      const compareDate = compare || (isStart ? endTime.value : startTime.value);\n      const compareHour = compareDate.hour();\n      const compareMinute = compareDate.minute();\n      if (hour !== compareHour || minute !== compareMinute) {\n        return defaultDisable;\n      }\n      const compareSecond = compareDate.second();\n      const nextDisable = isStart ? makeSelectRange(compareSecond + 1, 59) : makeSelectRange(0, compareSecond - 1);\n      return lodashUnified.union(defaultDisable, nextDisable);\n    };\n    const getRangeAvailableTime = ([start, end]) => {\n      return [getAvailableTime(start, \"start\", true, end), getAvailableTime(end, \"end\", false, start)];\n    };\n    const {\n      getAvailableHours,\n      getAvailableMinutes,\n      getAvailableSeconds\n    } = useTimePicker.buildAvailableTimeSlotGetter(disabledHours_, disabledMinutes_, disabledSeconds_);\n    const {\n      timePickerOptions,\n      getAvailableTime,\n      onSetOption\n    } = useTimePanel.useTimePanel({\n      getAvailableHours,\n      getAvailableMinutes,\n      getAvailableSeconds\n    });\n    const parseUserInput = days => {\n      if (!days) return null;\n      if (shared.isArray(days)) {\n        return days.map(d => dayjs__default[\"default\"](d, props.format).locale(lang.value));\n      }\n      return dayjs__default[\"default\"](days, props.format).locale(lang.value);\n    };\n    const formatToString = days => {\n      if (!days) return null;\n      if (shared.isArray(days)) {\n        return days.map(d => d.format(props.format));\n      }\n      return days.format(props.format);\n    };\n    const getDefaultValue = () => {\n      if (shared.isArray(defaultValue)) {\n        return defaultValue.map(d => dayjs__default[\"default\"](d).locale(lang.value));\n      }\n      const defaultDay = dayjs__default[\"default\"](defaultValue).locale(lang.value);\n      return [defaultDay, defaultDay.add(60, \"m\")];\n    };\n    emit(\"set-picker-option\", [\"formatToString\", formatToString]);\n    emit(\"set-picker-option\", [\"parseUserInput\", parseUserInput]);\n    emit(\"set-picker-option\", [\"isValidValue\", isValidValue]);\n    emit(\"set-picker-option\", [\"handleKeydownInput\", handleKeydown]);\n    emit(\"set-picker-option\", [\"getDefaultValue\", getDefaultValue]);\n    emit(\"set-picker-option\", [\"getRangeAvailableTime\", getRangeAvailableTime]);\n    return (_ctx, _cache) => {\n      return _ctx.actualVisible ? (vue.openBlock(), vue.createElementBlock(\"div\", {\n        key: 0,\n        class: vue.normalizeClass([vue.unref(nsTime).b(\"range-picker\"), vue.unref(nsPicker).b(\"panel\")])\n      }, [vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(nsTime).be(\"range-picker\", \"content\"))\n      }, [vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(nsTime).be(\"range-picker\", \"cell\"))\n      }, [vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(nsTime).be(\"range-picker\", \"header\"))\n      }, vue.toDisplayString(vue.unref(t)(\"el.datepicker.startTime\")), 3), vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(startContainerKls))\n      }, [vue.createVNode(basicTimeSpinner[\"default\"], {\n        ref: \"minSpinner\",\n        role: \"start\",\n        \"show-seconds\": vue.unref(showSeconds),\n        \"am-pm-mode\": vue.unref(amPmMode),\n        \"arrow-control\": vue.unref(arrowControl),\n        \"spinner-date\": vue.unref(startTime),\n        \"disabled-hours\": disabledHours_,\n        \"disabled-minutes\": disabledMinutes_,\n        \"disabled-seconds\": disabledSeconds_,\n        onChange: handleMinChange,\n        onSetOption: vue.unref(onSetOption),\n        onSelectRange: setMinSelectionRange\n      }, null, 8, [\"show-seconds\", \"am-pm-mode\", \"arrow-control\", \"spinner-date\", \"onSetOption\"])], 2)], 2), vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(nsTime).be(\"range-picker\", \"cell\"))\n      }, [vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(nsTime).be(\"range-picker\", \"header\"))\n      }, vue.toDisplayString(vue.unref(t)(\"el.datepicker.endTime\")), 3), vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(endContainerKls))\n      }, [vue.createVNode(basicTimeSpinner[\"default\"], {\n        ref: \"maxSpinner\",\n        role: \"end\",\n        \"show-seconds\": vue.unref(showSeconds),\n        \"am-pm-mode\": vue.unref(amPmMode),\n        \"arrow-control\": vue.unref(arrowControl),\n        \"spinner-date\": vue.unref(endTime),\n        \"disabled-hours\": disabledHours_,\n        \"disabled-minutes\": disabledMinutes_,\n        \"disabled-seconds\": disabledSeconds_,\n        onChange: handleMaxChange,\n        onSetOption: vue.unref(onSetOption),\n        onSelectRange: setMaxSelectionRange\n      }, null, 8, [\"show-seconds\", \"am-pm-mode\", \"arrow-control\", \"spinner-date\", \"onSetOption\"])], 2)], 2)], 2), vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(nsTime).be(\"panel\", \"footer\"))\n      }, [vue.createElementVNode(\"button\", {\n        type: \"button\",\n        class: vue.normalizeClass([vue.unref(nsTime).be(\"panel\", \"btn\"), \"cancel\"]),\n        onClick: _cache[0] || (_cache[0] = $event => handleCancel())\n      }, vue.toDisplayString(vue.unref(t)(\"el.datepicker.cancel\")), 3), vue.createElementVNode(\"button\", {\n        type: \"button\",\n        class: vue.normalizeClass([vue.unref(nsTime).be(\"panel\", \"btn\"), \"confirm\"]),\n        disabled: vue.unref(btnConfirmDisabled),\n        onClick: _cache[1] || (_cache[1] = $event => handleConfirm())\n      }, vue.toDisplayString(vue.unref(t)(\"el.datepicker.confirm\")), 11, _hoisted_1)], 2)], 2)) : vue.createCommentVNode(\"v-if\", true);\n    };\n  }\n});\nvar TimeRangePanel = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/time-picker-com/panel-time-range.vue\"]]);\nexports[\"default\"] = TimeRangePanel;","map":{"version":3,"names":["makeSelectRange","start","end","result","i","push","t","lang","index","useLocale","nsTime","index$1","useNamespace","nsPicker","pickerBase","vue","inject","arrowControl","disabledHours","disabledMinutes","disabledSeconds","defaultValue","props","startContainerKls","computed","be","is","showSeconds","value","endContainerKls","startTime","parsedValue","endTime","oldValue","useTimePicker","useOldValue","handleCancel","emit","format","includes","amPmMode","handleConfirm","visible","handleMinChange","date","handleChange","millisecond","handleMaxChange","isValidValue","_date","parsedDate","map","_","dayjs__default","locale","getRangeAvailableTime","isSame","btnConfirmDisabled","selectionRange","ref","setMinSelectionRange","offset","setMaxSelectionRange","_offset","unref","changeSelectionRange","step","list","mapping","concat","indexOf","next","length","half","timePickerOptions","handleKeydown","event","code","left","right","up","down","aria","EVENT_CODE","preventDefault","role","disabledHours_","compare","defaultDisable","isStart","compareDate","compareHour","hour","nextDisable","lodashUnified","union","disabledMinutes_","compareMinute","minute","disabledSeconds_","compareSecond","second","getAvailableTime","getAvailableHours","getAvailableMinutes","getAvailableSeconds","buildAvailableTimeSlotGetter","onSetOption","useTimePanel","parseUserInput","days","shared","isArray","d","formatToString","getDefaultValue","defaultDay","add"],"sources":["../../../../../../../packages/components/time-picker/src/time-picker-com/panel-time-range.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"actualVisible\"\n    :class=\"[nsTime.b('range-picker'), nsPicker.b('panel')]\"\n  >\n    <div :class=\"nsTime.be('range-picker', 'content')\">\n      <div :class=\"nsTime.be('range-picker', 'cell')\">\n        <div :class=\"nsTime.be('range-picker', 'header')\">\n          {{ t('el.datepicker.startTime') }}\n        </div>\n        <div :class=\"startContainerKls\">\n          <time-spinner\n            ref=\"minSpinner\"\n            role=\"start\"\n            :show-seconds=\"showSeconds\"\n            :am-pm-mode=\"amPmMode\"\n            :arrow-control=\"arrowControl\"\n            :spinner-date=\"startTime\"\n            :disabled-hours=\"disabledHours_\"\n            :disabled-minutes=\"disabledMinutes_\"\n            :disabled-seconds=\"disabledSeconds_\"\n            @change=\"handleMinChange\"\n            @set-option=\"onSetOption\"\n            @select-range=\"setMinSelectionRange\"\n          />\n        </div>\n      </div>\n      <div :class=\"nsTime.be('range-picker', 'cell')\">\n        <div :class=\"nsTime.be('range-picker', 'header')\">\n          {{ t('el.datepicker.endTime') }}\n        </div>\n        <div :class=\"endContainerKls\">\n          <time-spinner\n            ref=\"maxSpinner\"\n            role=\"end\"\n            :show-seconds=\"showSeconds\"\n            :am-pm-mode=\"amPmMode\"\n            :arrow-control=\"arrowControl\"\n            :spinner-date=\"endTime\"\n            :disabled-hours=\"disabledHours_\"\n            :disabled-minutes=\"disabledMinutes_\"\n            :disabled-seconds=\"disabledSeconds_\"\n            @change=\"handleMaxChange\"\n            @set-option=\"onSetOption\"\n            @select-range=\"setMaxSelectionRange\"\n          />\n        </div>\n      </div>\n    </div>\n    <div :class=\"nsTime.be('panel', 'footer')\">\n      <button\n        type=\"button\"\n        :class=\"[nsTime.be('panel', 'btn'), 'cancel']\"\n        @click=\"handleCancel()\"\n      >\n        {{ t('el.datepicker.cancel') }}\n      </button>\n      <button\n        type=\"button\"\n        :class=\"[nsTime.be('panel', 'btn'), 'confirm']\"\n        :disabled=\"btnConfirmDisabled\"\n        @click=\"handleConfirm()\"\n      >\n        {{ t('el.datepicker.confirm') }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, inject, ref, unref } from 'vue'\nimport dayjs from 'dayjs'\nimport { union } from 'lodash-unified'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { isArray } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { panelTimeRangeProps } from '../props/panel-time-range'\nimport { useTimePanel } from '../composables/use-time-panel'\nimport {\n  buildAvailableTimeSlotGetter,\n  useOldValue,\n} from '../composables/use-time-picker'\nimport TimeSpinner from './basic-time-spinner.vue'\n\nimport type { Dayjs } from 'dayjs'\n\nconst props = defineProps(panelTimeRangeProps)\nconst emit = defineEmits(['pick', 'select-range', 'set-picker-option'])\n\nconst makeSelectRange = (start: number, end: number) => {\n  const result: number[] = []\n  for (let i = start; i <= end; i++) {\n    result.push(i)\n  }\n  return result\n}\n\nconst { t, lang } = useLocale()\nconst nsTime = useNamespace('time')\nconst nsPicker = useNamespace('picker')\nconst pickerBase = inject('EP_PICKER_BASE') as any\nconst {\n  arrowControl,\n  disabledHours,\n  disabledMinutes,\n  disabledSeconds,\n  defaultValue,\n} = pickerBase.props\n\nconst startContainerKls = computed(() => [\n  nsTime.be('range-picker', 'body'),\n  nsTime.be('panel', 'content'),\n  nsTime.is('arrow', arrowControl),\n  showSeconds.value ? 'has-seconds' : '',\n])\nconst endContainerKls = computed(() => [\n  nsTime.be('range-picker', 'body'),\n  nsTime.be('panel', 'content'),\n  nsTime.is('arrow', arrowControl),\n  showSeconds.value ? 'has-seconds' : '',\n])\n\nconst startTime = computed(() => props.parsedValue![0])\nconst endTime = computed(() => props.parsedValue![1])\nconst oldValue = useOldValue(props)\nconst handleCancel = () => {\n  emit('pick', oldValue.value, false)\n}\nconst showSeconds = computed(() => {\n  return props.format.includes('ss')\n})\nconst amPmMode = computed(() => {\n  if (props.format.includes('A')) return 'A'\n  if (props.format.includes('a')) return 'a'\n  return ''\n})\n\nconst handleConfirm = (visible = false) => {\n  emit('pick', [startTime.value, endTime.value], visible)\n}\n\nconst handleMinChange = (date: Dayjs) => {\n  handleChange(date.millisecond(0), endTime.value)\n}\nconst handleMaxChange = (date: Dayjs) => {\n  handleChange(startTime.value, date.millisecond(0))\n}\n\nconst isValidValue = (_date: Dayjs[]) => {\n  const parsedDate = _date.map((_) => dayjs(_).locale(lang.value))\n  const result = getRangeAvailableTime(parsedDate)\n  return parsedDate[0].isSame(result[0]) && parsedDate[1].isSame(result[1])\n}\n\nconst handleChange = (start: Dayjs, end: Dayjs) => {\n  // todo getRangeAvailableTime(_date).millisecond(0)\n  emit('pick', [start, end], true)\n}\nconst btnConfirmDisabled = computed(() => {\n  return startTime.value > endTime.value\n})\n\nconst selectionRange = ref([0, 2])\nconst setMinSelectionRange = (start: number, end: number) => {\n  emit('select-range', start, end, 'min')\n  selectionRange.value = [start, end]\n}\n\nconst offset = computed(() => (showSeconds.value ? 11 : 8))\nconst setMaxSelectionRange = (start: number, end: number) => {\n  emit('select-range', start, end, 'max')\n  const _offset = unref(offset)\n  selectionRange.value = [start + _offset, end + _offset]\n}\n\nconst changeSelectionRange = (step: number) => {\n  const list = showSeconds.value ? [0, 3, 6, 11, 14, 17] : [0, 3, 8, 11]\n  const mapping = ['hours', 'minutes'].concat(\n    showSeconds.value ? ['seconds'] : []\n  )\n  const index = list.indexOf(selectionRange.value[0])\n  const next = (index + step + list.length) % list.length\n  const half = list.length / 2\n  if (next < half) {\n    timePickerOptions['start_emitSelectRange'](mapping[next])\n  } else {\n    timePickerOptions['end_emitSelectRange'](mapping[next - half])\n  }\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  const code = event.code\n\n  const { left, right, up, down } = EVENT_CODE\n\n  if ([left, right].includes(code)) {\n    const step = code === left ? -1 : 1\n    changeSelectionRange(step)\n    event.preventDefault()\n    return\n  }\n\n  if ([up, down].includes(code)) {\n    const step = code === up ? -1 : 1\n    const role = selectionRange.value[0] < offset.value ? 'start' : 'end'\n    timePickerOptions[`${role}_scrollDown`](step)\n    event.preventDefault()\n    return\n  }\n}\n\nconst disabledHours_ = (role: string, compare?: Dayjs) => {\n  const defaultDisable = disabledHours ? disabledHours(role) : []\n  const isStart = role === 'start'\n  const compareDate = compare || (isStart ? endTime.value : startTime.value)\n  const compareHour = compareDate.hour()\n  const nextDisable = isStart\n    ? makeSelectRange(compareHour + 1, 23)\n    : makeSelectRange(0, compareHour - 1)\n  return union(defaultDisable, nextDisable)\n}\nconst disabledMinutes_ = (hour: number, role: string, compare?: Dayjs) => {\n  const defaultDisable = disabledMinutes ? disabledMinutes(hour, role) : []\n  const isStart = role === 'start'\n  const compareDate = compare || (isStart ? endTime.value : startTime.value)\n  const compareHour = compareDate.hour()\n  if (hour !== compareHour) {\n    return defaultDisable\n  }\n  const compareMinute = compareDate.minute()\n  const nextDisable = isStart\n    ? makeSelectRange(compareMinute + 1, 59)\n    : makeSelectRange(0, compareMinute - 1)\n  return union(defaultDisable, nextDisable)\n}\nconst disabledSeconds_ = (\n  hour: number,\n  minute: number,\n  role: string,\n  compare?: Dayjs\n) => {\n  const defaultDisable = disabledSeconds\n    ? disabledSeconds(hour, minute, role)\n    : []\n  const isStart = role === 'start'\n  const compareDate = compare || (isStart ? endTime.value : startTime.value)\n  const compareHour = compareDate.hour()\n  const compareMinute = compareDate.minute()\n  if (hour !== compareHour || minute !== compareMinute) {\n    return defaultDisable\n  }\n  const compareSecond = compareDate.second()\n  const nextDisable = isStart\n    ? makeSelectRange(compareSecond + 1, 59)\n    : makeSelectRange(0, compareSecond - 1)\n  return union(defaultDisable, nextDisable)\n}\n\nconst getRangeAvailableTime = ([start, end]: Array<Dayjs>) => {\n  return [\n    getAvailableTime(start, 'start', true, end),\n    getAvailableTime(end, 'end', false, start),\n  ] as const\n}\n\nconst { getAvailableHours, getAvailableMinutes, getAvailableSeconds } =\n  buildAvailableTimeSlotGetter(\n    disabledHours_,\n    disabledMinutes_,\n    disabledSeconds_\n  )\n\nconst {\n  timePickerOptions,\n\n  getAvailableTime,\n  onSetOption,\n} = useTimePanel({\n  getAvailableHours,\n  getAvailableMinutes,\n  getAvailableSeconds,\n})\n\nconst parseUserInput = (days: Dayjs[] | Dayjs) => {\n  if (!days) return null\n  if (isArray(days)) {\n    return days.map((d) => dayjs(d, props.format).locale(lang.value))\n  }\n  return dayjs(days, props.format).locale(lang.value)\n}\n\nconst formatToString = (days: Dayjs[] | Dayjs) => {\n  if (!days) return null\n  if (isArray(days)) {\n    return days.map((d) => d.format(props.format))\n  }\n  return days.format(props.format)\n}\n\nconst getDefaultValue = () => {\n  if (isArray(defaultValue)) {\n    return defaultValue.map((d: Date) => dayjs(d).locale(lang.value))\n  }\n  const defaultDay = dayjs(defaultValue).locale(lang.value)\n  return [defaultDay, defaultDay.add(60, 'm')]\n}\n\nemit('set-picker-option', ['formatToString', formatToString])\nemit('set-picker-option', ['parseUserInput', parseUserInput])\nemit('set-picker-option', ['isValidValue', isValidValue])\nemit('set-picker-option', ['handleKeydownInput', handleKeydown])\nemit('set-picker-option', ['getDefaultValue', getDefaultValue])\nemit('set-picker-option', ['getRangeAvailableTime', getRangeAvailableTime])\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAyFM,MAAAA,eAAA,GAAkBA,CAACC,KAAA,EAAeC,GAAgB;MACtD,MAAMC,MAAA,GAAmB,EAAC;MAC1B,SAASC,CAAI,GAAAH,KAAA,EAAOG,CAAK,IAAAF,GAAA,EAAKE,CAAK;QACjCD,MAAA,CAAOE,IAAA,CAAKD,CAAC;MAAA;MAER,OAAAD,MAAA;IAAA,CACT;IAEM;MAAEG,CAAG;MAAAC;IAAA,IAASC,KAAA,CAAAC,SAAU;IACxB,MAAAC,MAAA,GAASC,OAAA,CAAAC,YAAA,CAAa,MAAM;IAC5B,MAAAC,QAAA,GAAWF,OAAA,CAAAC,YAAA,CAAa,QAAQ;IAChC,MAAAE,UAAA,GAAaC,GAAA,CAAAC,MAAA,CAAO,gBAAgB;IACpC;MACJC,YAAA;MACAC,aAAA;MACAC,eAAA;MACAC,eAAA;MACAC;IAAA,IACEP,UAAW,CAAAQ,KAAA;IAET,MAAAC,iBAAA,GAAoBR,GAAA,CAAAS,QAAA,CAAS,MAAM,CACvCd,MAAA,CAAOe,EAAG,iBAAgB,MAAM,GAChCf,MAAA,CAAOe,EAAG,UAAS,SAAS,GAC5Bf,MAAA,CAAOgB,EAAG,UAAST,YAAY,GAC/BU,WAAA,CAAYC,KAAA,GAAQ,aAAgB,MACrC;IACK,MAAAC,eAAA,GAAkBd,GAAA,CAAAS,QAAA,CAAS,MAAM,CACrCd,MAAA,CAAOe,EAAG,iBAAgB,MAAM,GAChCf,MAAA,CAAOe,EAAG,UAAS,SAAS,GAC5Bf,MAAA,CAAOgB,EAAG,UAAST,YAAY,GAC/BU,WAAA,CAAYC,KAAA,GAAQ,aAAgB,MACrC;IAED,MAAME,SAAY,GAAAf,GAAA,CAAAS,QAAA,CAAS,MAAMF,KAAA,CAAMS,WAAA,CAAa,CAAE;IACtD,MAAMC,OAAU,GAAAjB,GAAA,CAAAS,QAAA,CAAS,MAAMF,KAAA,CAAMS,WAAA,CAAa,CAAE;IAC9C,MAAAE,QAAA,GAAWC,aAAA,CAAAC,WAAA,CAAYb,KAAK;IAClC,MAAMc,YAAA,GAAeA,CAAA,KAAM;MACpBC,IAAA,SAAQJ,QAAS,CAAAL,KAAA,EAAO,KAAK;IAAA,CACpC;IACM,MAAAD,WAAA,GAAcZ,GAAA,CAAAS,QAAA,CAAS,MAAM;MAC1B,OAAAF,KAAA,CAAMgB,MAAO,CAAAC,QAAA,CAAS,IAAI;IAAA,CAClC;IACK,MAAAC,QAAA,GAAWzB,GAAA,CAAAS,QAAA,CAAS,MAAM;MAC1B,IAAAF,KAAA,CAAMgB,MAAO,CAAAC,QAAA,CAAS,GAAG,GAAU;MACnC,IAAAjB,KAAA,CAAMgB,MAAO,CAAAC,QAAA,CAAS,GAAG,GAAU;MAChC;IAAA,CACR;IAEK,MAAAE,aAAA,GAAgBA,CAACC,OAAA,GAAU,KAAU;MACzCL,IAAA,CAAK,QAAQ,CAACP,SAAA,CAAUF,KAAA,EAAOI,OAAQ,CAAAJ,KAAK,GAAGc,OAAO;IAAA,CACxD;IAEM,MAAAC,eAAA,GAAmBC,IAAgB;MACvCC,YAAA,CAAaD,IAAK,CAAAE,WAAA,CAAY,CAAC,GAAGd,OAAA,CAAQJ,KAAK;IAAA,CACjD;IACM,MAAAmB,eAAA,GAAmBH,IAAgB;MACvCC,YAAA,CAAaf,SAAU,CAAAF,KAAA,EAAOgB,IAAK,CAAAE,WAAA,CAAY,CAAC,CAAC;IAAA,CACnD;IAEM,MAAAE,YAAA,GAAgBC,KAAmB;MACjC,MAAAC,UAAA,GAAaD,KAAM,CAAAE,GAAA,CAAKC,CAAA,IAAMC,cAAA,WAAM,CAAAD,CAAC,CAAE,CAAAE,MAAA,CAAO/C,IAAK,CAAAqB,KAAK,CAAC;MACzD,MAAAzB,MAAA,GAASoD,qBAAA,CAAsBL,UAAU;MACxC,OAAAA,UAAA,CAAW,CAAG,EAAAM,MAAA,CAAOrD,MAAO,GAAE,KAAK+C,UAAW,IAAGM,MAAO,CAAArD,MAAA,CAAO,CAAE;IAAA,CAC1E;IAEM,MAAA0C,YAAA,GAAeA,CAAC5C,KAAA,EAAcC,GAAe;MAEjDmC,IAAA,CAAK,MAAQ,GAACpC,KAAO,EAAAC,GAAG,GAAG,IAAI;IAAA,CACjC;IACM,MAAAuD,kBAAA,GAAqB1C,GAAA,CAAAS,QAAA,CAAS,MAAM;MACjC,OAAAM,SAAA,CAAUF,KAAA,GAAQI,OAAQ,CAAAJ,KAAA;IAAA,CAClC;IAED,MAAM8B,cAAiB,GAAA3C,GAAA,CAAA4C,GAAA,CAAI,CAAC,GAAG,CAAC,CAAC;IAC3B,MAAAC,oBAAA,GAAuBA,CAAC3D,KAAA,EAAeC,GAAgB;MACtDmC,IAAA,iBAAgBpC,KAAO,EAAAC,GAAA,EAAK,KAAK;MACvBwD,cAAA,CAAA9B,KAAA,GAAQ,CAAC3B,KAAA,EAAOC,GAAG;IAAA,CACpC;IAEA,MAAM2D,MAAA,GAAS9C,GAAA,CAAAS,QAAS,OAAOG,WAAY,CAAAC,KAAA,GAAQ,KAAK,CAAE;IACpD,MAAAkC,oBAAA,GAAuBA,CAAC7D,KAAA,EAAeC,GAAgB;MACtDmC,IAAA,iBAAgBpC,KAAO,EAAAC,GAAA,EAAK,KAAK;MAChC,MAAA6D,OAAA,GAAUhD,GAAA,CAAAiD,KAAA,CAAMH,MAAM;MAC5BH,cAAA,CAAe9B,KAAQ,IAAC3B,KAAQ,GAAA8D,OAAA,EAAS7D,GAAA,GAAM6D,OAAO;IAAA,CACxD;IAEM,MAAAE,oBAAA,GAAwBC,IAAiB;MAC7C,MAAMC,IAAO,GAAAxC,WAAA,CAAYC,KAAQ,IAAC,GAAG,CAAG,KAAG,EAAI,MAAI,EAAE,CAAI,IAAC,CAAG,KAAG,GAAG,EAAE;MACrE,MAAMwC,OAAU,IAAC,OAAS,WAAS,CAAE,CAAAC,MAAA,CACnC1C,WAAY,CAAAC,KAAA,GAAQ,CAAC,SAAS,CAAI,KACpC;MACA,MAAMpB,KAAQ,GAAA2D,IAAA,CAAKG,OAAQ,CAAAZ,cAAA,CAAe9B,KAAA,CAAM,CAAE;MAClD,MAAM2C,IAAQ,IAAA/D,KAAA,GAAQ0D,IAAO,GAAAC,IAAA,CAAKK,MAAA,IAAUL,IAAK,CAAAK,MAAA;MAC3C,MAAAC,IAAA,GAAON,IAAA,CAAKK,MAAS;MAC3B,IAAID,IAAA,GAAOE,IAAM;QACGC,iBAAA,0BAAyBN,OAAA,CAAQG,IAAK;MAAA,CACnD;QACaG,iBAAA,wBAAuBN,OAAQ,CAAAG,IAAA,GAAOE,IAAK;MAAA;IAC/D,CACF;IAEM,MAAAE,aAAA,GAAiBC,KAAyB;MAC9C,MAAMC,IAAA,GAAOD,KAAM,CAAAC,IAAA;MAEnB,MAAM;QAAEC,IAAA;QAAMC,KAAO;QAAAC,EAAA;QAAIC;MAAS,IAAAC,IAAA,CAAAC,UAAA;MAElC,IAAI,CAACL,IAAM,EAAAC,KAAK,CAAE,CAAAxC,QAAA,CAASsC,IAAI,CAAG;QAC1B,MAAAX,IAAA,GAAOW,IAAS,KAAAC,IAAA,GAAO,CAAK;QAClCb,oBAAA,CAAqBC,IAAI;QACzBU,KAAA,CAAMQ,cAAe;QACrB;MAAA;MAGF,IAAI,CAACJ,EAAI,EAAAC,IAAI,CAAE,CAAA1C,QAAA,CAASsC,IAAI,CAAG;QACvB,MAAAX,IAAA,GAAOW,IAAS,KAAAG,EAAA,GAAK,CAAK;QAChC,MAAMK,IAAA,GAAO3B,cAAe,CAAA9B,KAAA,CAAM,CAAK,IAAAiC,MAAA,CAAOjC,KAAA,GAAQ,OAAU;QAC9C8C,iBAAA,IAAGW,IAAA,eAAmBnB,IAAI;QAC5CU,KAAA,CAAMQ,cAAe;QACrB;MAAA;IACF,CACF;IAEM,MAAAE,cAAA,GAAiBA,CAACD,IAAA,EAAcE,OAAoB;MACxD,MAAMC,cAAiB,GAAAtE,aAAA,GAAgBA,aAAc,CAAAmE,IAAI,IAAI,EAAC;MAC9D,MAAMI,OAAA,GAAUJ,IAAS;MACzB,MAAMK,WAAc,GAAAH,OAAA,KAAsBE,OAAA,GAAAzD,OAAA,CAAQJ,KAAA,GAAQE,SAAU,CAAAF,KAAA;MAC9D,MAAA+D,WAAA,GAAcD,WAAA,CAAYE,IAAK;MAC/B,MAAAC,WAAA,GAAcJ,OAChB,GAAAzF,eAAA,CAAgB2F,WAAc,MAAG,EAAE,CACnC,GAAA3F,eAAA,CAAgB,CAAG,EAAA2F,WAAA,GAAc,CAAC;MAC/B,OAAAG,aAAA,CAAAC,KAAA,CAAMP,cAAA,EAAgBK,WAAW;IAAA,CAC1C;IACA,MAAMG,gBAAmB,GAAAA,CAACJ,IAAc,EAAAP,IAAA,EAAcE,OAAoB;MACxE,MAAMC,cAAA,GAAiBrE,eAAkB,GAAAA,eAAA,CAAgByE,IAAM,EAAAP,IAAI,IAAI,EAAC;MACxE,MAAMI,OAAA,GAAUJ,IAAS;MACzB,MAAMK,WAAc,GAAAH,OAAA,KAAsBE,OAAA,GAAAzD,OAAA,CAAQJ,KAAA,GAAQE,SAAU,CAAAF,KAAA;MAC9D,MAAA+D,WAAA,GAAcD,WAAA,CAAYE,IAAK;MACrC,IAAIA,IAAA,KAASD,WAAa;QACjB,OAAAH,cAAA;MAAA;MAEH,MAAAS,aAAA,GAAgBP,WAAA,CAAYQ,MAAO;MACnC,MAAAL,WAAA,GAAcJ,OAChB,GAAAzF,eAAA,CAAgBiG,aAAgB,MAAG,EAAE,CACrC,GAAAjG,eAAA,CAAgB,CAAG,EAAAiG,aAAA,GAAgB,CAAC;MACjC,OAAAH,aAAA,CAAAC,KAAA,CAAMP,cAAA,EAAgBK,WAAW;IAAA,CAC1C;IACA,MAAMM,gBAAmB,GAAAA,CACvBP,IACA,EAAAM,MAAA,EACAb,IAAA,EACAE,OACG;MACH,MAAMC,cAAA,GAAiBpE,eACnB,GAAAA,eAAA,CAAgBwE,IAAA,EAAMM,MAAQ,EAAAb,IAAI,IAClC,EAAC;MACL,MAAMI,OAAA,GAAUJ,IAAS;MACzB,MAAMK,WAAc,GAAAH,OAAA,KAAsBE,OAAA,GAAAzD,OAAA,CAAQJ,KAAA,GAAQE,SAAU,CAAAF,KAAA;MAC9D,MAAA+D,WAAA,GAAcD,WAAA,CAAYE,IAAK;MAC/B,MAAAK,aAAA,GAAgBP,WAAA,CAAYQ,MAAO;MACrC,IAAAN,IAAA,KAASD,WAAe,IAAAO,MAAA,KAAWD,aAAe;QAC7C,OAAAT,cAAA;MAAA;MAEH,MAAAY,aAAA,GAAgBV,WAAA,CAAYW,MAAO;MACnC,MAAAR,WAAA,GAAcJ,OAChB,GAAAzF,eAAA,CAAgBoG,aAAgB,MAAG,EAAE,CACrC,GAAApG,eAAA,CAAgB,CAAG,EAAAoG,aAAA,GAAgB,CAAC;MACjC,OAAAN,aAAA,CAAAC,KAAA,CAAMP,cAAA,EAAgBK,WAAW;IAAA,CAC1C;IAEA,MAAMtC,qBAAwB,GAAAA,CAAC,CAACtD,KAAA,EAAOC,GAAuB;MACrD,QACLoG,gBAAiB,CAAArG,KAAA,EAAO,OAAS,QAAMC,GAAG,GAC1CoG,gBAAiB,CAAApG,GAAA,EAAK,KAAO,SAAOD,KAAK,EAC3C;IAAA,CACF;IAEA,MAAM;MAAEsG,iBAAmB;MAAAC,mBAAA;MAAqBC;IAAA,IAC9CvE,aAAA,CAAAwE,4BACE,CAAApB,cAAA,EACAU,gBAAA,EACAG,gBACF;IAEI;MACJzB,iBAAA;MAEA4B,gBAAA;MACAK;IAAA,IACEC,YAAA,CAAAA,YAAa;MACfL,iBAAA;MACAC,mBAAA;MACAC;IAAA,CACD;IAEK,MAAAI,cAAA,GAAkBC,IAA0B;MAChD,IAAI,CAACA,IAAA,EAAa;MACd,IAAAC,MAAA,CAAAC,OAAA,CAAQF,IAAI,CAAG;QACjB,OAAOA,IAAK,CAAA3D,GAAA,CAAK8D,CAAA,IAAM5D,cAAA,WAAM,CAAA4D,CAAA,EAAG3F,KAAM,CAAAgB,MAAM,CAAE,CAAAgB,MAAA,CAAO/C,IAAK,CAAAqB,KAAK,CAAC;MAAA;MAElE,OAAOyB,cAAA,YAAMyD,IAAM,EAAAxF,KAAA,CAAMgB,MAAM,CAAE,CAAAgB,MAAA,CAAO/C,IAAA,CAAKqB,KAAK;IAAA,CACpD;IAEM,MAAAsF,cAAA,GAAkBJ,IAA0B;MAChD,IAAI,CAACA,IAAA,EAAa;MACd,IAAAC,MAAA,CAAAC,OAAA,CAAQF,IAAI,CAAG;QACV,OAAAA,IAAA,CAAK3D,GAAA,CAAK8D,CAAA,IAAMA,CAAA,CAAE3E,MAAO,CAAAhB,KAAA,CAAMgB,MAAM,CAAC;MAAA;MAExC,OAAAwE,IAAA,CAAKxE,MAAO,CAAAhB,KAAA,CAAMgB,MAAM;IAAA,CACjC;IAEA,MAAM6E,eAAA,GAAkBA,CAAA,KAAM;MACxB,IAAAJ,MAAA,CAAAC,OAAA,CAAQ3F,YAAY,CAAG;QAClB,OAAAA,YAAA,CAAa8B,GAAI,CAAC8D,CAAY,IAAA5D,cAAA,YAAM4D,CAAC,CAAE,CAAA3D,MAAA,CAAO/C,IAAK,CAAAqB,KAAK,CAAC;MAAA;MAElE,MAAMwF,UAAA,GAAa/D,cAAA,WAAM,CAAAhC,YAAY,CAAE,CAAAiC,MAAA,CAAO/C,IAAA,CAAKqB,KAAK;MACxD,OAAO,CAACwF,UAAY,EAAAA,UAAA,CAAWC,GAAI,KAAI,GAAG,CAAC;IAAA,CAC7C;IAEAhF,IAAA,CAAK,mBAAqB,GAAC,gBAAkB,EAAA6E,cAAc,CAAC;IAC5D7E,IAAA,CAAK,mBAAqB,GAAC,gBAAkB,EAAAwE,cAAc,CAAC;IAC5DxE,IAAA,CAAK,mBAAqB,GAAC,cAAgB,EAAAW,YAAY,CAAC;IACxDX,IAAA,CAAK,mBAAqB,GAAC,oBAAsB,EAAAsC,aAAa,CAAC;IAC/DtC,IAAA,CAAK,mBAAqB,GAAC,iBAAmB,EAAA8E,eAAe,CAAC;IAC9D9E,IAAA,CAAK,mBAAqB,GAAC,uBAAyB,EAAAkB,qBAAqB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}