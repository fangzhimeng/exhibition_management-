{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar index$2 = require('../../button/index.js');\nrequire('../../../hooks/index.js');\nvar dateTable = require('./date-table2.js');\nvar useCalendar = require('./use-calendar.js');\nvar calendar = require('./calendar.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar index$1 = require('../../../hooks/use-locale/index.js');\nconst COMPONENT_NAME = \"ElCalendar\";\nconst __default__ = vue.defineComponent({\n  name: COMPONENT_NAME\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: calendar.calendarProps,\n  emits: calendar.calendarEmits,\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    const props = __props;\n    const ns = index.useNamespace(\"calendar\");\n    const {\n      calculateValidatedDateRange,\n      date,\n      pickDay,\n      realSelectedDay,\n      selectDate,\n      validatedRange\n    } = useCalendar.useCalendar(props, emit, COMPONENT_NAME);\n    const {\n      t\n    } = index$1.useLocale();\n    const i18nDate = vue.computed(() => {\n      const pickedMonth = `el.datepicker.month${date.value.format(\"M\")}`;\n      return `${date.value.year()} ${t(\"el.datepicker.year\")} ${t(pickedMonth)}`;\n    });\n    expose({\n      selectedDay: realSelectedDay,\n      pickDay,\n      selectDate,\n      calculateValidatedDateRange\n    });\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createElementBlock(\"div\", {\n        class: vue.normalizeClass(vue.unref(ns).b())\n      }, [vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(ns).e(\"header\"))\n      }, [vue.renderSlot(_ctx.$slots, \"header\", {\n        date: vue.unref(i18nDate)\n      }, () => [vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(ns).e(\"title\"))\n      }, vue.toDisplayString(vue.unref(i18nDate)), 3), vue.unref(validatedRange).length === 0 ? (vue.openBlock(), vue.createElementBlock(\"div\", {\n        key: 0,\n        class: vue.normalizeClass(vue.unref(ns).e(\"button-group\"))\n      }, [vue.createVNode(vue.unref(index$2.ElButtonGroup), null, {\n        default: vue.withCtx(() => [vue.createVNode(vue.unref(index$2.ElButton), {\n          size: \"small\",\n          onClick: _cache[0] || (_cache[0] = $event => vue.unref(selectDate)(\"prev-month\"))\n        }, {\n          default: vue.withCtx(() => [vue.createTextVNode(vue.toDisplayString(vue.unref(t)(\"el.datepicker.prevMonth\")), 1)]),\n          _: 1\n        }), vue.createVNode(vue.unref(index$2.ElButton), {\n          size: \"small\",\n          onClick: _cache[1] || (_cache[1] = $event => vue.unref(selectDate)(\"today\"))\n        }, {\n          default: vue.withCtx(() => [vue.createTextVNode(vue.toDisplayString(vue.unref(t)(\"el.datepicker.today\")), 1)]),\n          _: 1\n        }), vue.createVNode(vue.unref(index$2.ElButton), {\n          size: \"small\",\n          onClick: _cache[2] || (_cache[2] = $event => vue.unref(selectDate)(\"next-month\"))\n        }, {\n          default: vue.withCtx(() => [vue.createTextVNode(vue.toDisplayString(vue.unref(t)(\"el.datepicker.nextMonth\")), 1)]),\n          _: 1\n        })]),\n        _: 1\n      })], 2)) : vue.createCommentVNode(\"v-if\", true)])], 2), vue.unref(validatedRange).length === 0 ? (vue.openBlock(), vue.createElementBlock(\"div\", {\n        key: 0,\n        class: vue.normalizeClass(vue.unref(ns).e(\"body\"))\n      }, [vue.createVNode(dateTable[\"default\"], {\n        date: vue.unref(date),\n        \"selected-day\": vue.unref(realSelectedDay),\n        onPick: vue.unref(pickDay)\n      }, vue.createSlots({\n        _: 2\n      }, [_ctx.$slots[\"date-cell\"] || _ctx.$slots.dateCell ? {\n        name: \"date-cell\",\n        fn: vue.withCtx(data => [_ctx.$slots[\"date-cell\"] ? vue.renderSlot(_ctx.$slots, \"date-cell\", vue.normalizeProps(vue.mergeProps({\n          key: 0\n        }, data))) : vue.renderSlot(_ctx.$slots, \"dateCell\", vue.normalizeProps(vue.mergeProps({\n          key: 1\n        }, data)))])\n      } : void 0]), 1032, [\"date\", \"selected-day\", \"onPick\"])], 2)) : (vue.openBlock(), vue.createElementBlock(\"div\", {\n        key: 1,\n        class: vue.normalizeClass(vue.unref(ns).e(\"body\"))\n      }, [(vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(vue.unref(validatedRange), (range_, index) => {\n        return vue.openBlock(), vue.createBlock(dateTable[\"default\"], {\n          key: index,\n          date: range_[0],\n          \"selected-day\": vue.unref(realSelectedDay),\n          range: range_,\n          \"hide-header\": index !== 0,\n          onPick: vue.unref(pickDay)\n        }, vue.createSlots({\n          _: 2\n        }, [_ctx.$slots[\"date-cell\"] || _ctx.$slots.dateCell ? {\n          name: \"date-cell\",\n          fn: vue.withCtx(data => [_ctx.$slots[\"date-cell\"] ? vue.renderSlot(_ctx.$slots, \"date-cell\", vue.normalizeProps(vue.mergeProps({\n            key: 0\n          }, data))) : vue.renderSlot(_ctx.$slots, \"dateCell\", vue.normalizeProps(vue.mergeProps({\n            key: 1\n          }, data)))])\n        } : void 0]), 1032, [\"date\", \"selected-day\", \"range\", \"hide-header\", \"onPick\"]);\n      }), 128))], 2))], 2);\n    };\n  }\n});\nvar Calendar = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/calendar/src/calendar.vue\"]]);\nexports[\"default\"] = Calendar;","map":{"version":3,"names":["name","COMPONENT_NAME","ns","index","useNamespace","calculateValidatedDateRange","date","pickDay","realSelectedDay","selectDate","validatedRange","useCalendar","props","emit","t","index$1","useLocale","i18nDate","vue","computed","pickedMonth","value","format","year","expose","selectedDay"],"sources":["../../../../../../packages/components/calendar/src/calendar.vue"],"sourcesContent":["<template>\n  <div :class=\"ns.b()\">\n    <div :class=\"ns.e('header')\">\n      <slot name=\"header\" :date=\"i18nDate\">\n        <div :class=\"ns.e('title')\">{{ i18nDate }}</div>\n        <div v-if=\"validatedRange.length === 0\" :class=\"ns.e('button-group')\">\n          <el-button-group>\n            <el-button size=\"small\" @click=\"selectDate('prev-month')\">\n              {{ t('el.datepicker.prevMonth') }}\n            </el-button>\n            <el-button size=\"small\" @click=\"selectDate('today')\">\n              {{ t('el.datepicker.today') }}\n            </el-button>\n            <el-button size=\"small\" @click=\"selectDate('next-month')\">\n              {{ t('el.datepicker.nextMonth') }}\n            </el-button>\n          </el-button-group>\n        </div>\n      </slot>\n    </div>\n    <div v-if=\"validatedRange.length === 0\" :class=\"ns.e('body')\">\n      <date-table :date=\"date\" :selected-day=\"realSelectedDay\" @pick=\"pickDay\">\n        <template\n          v-if=\"$slots['date-cell'] || $slots.dateCell\"\n          #date-cell=\"data\"\n        >\n          <slot v-if=\"$slots['date-cell']\" name=\"date-cell\" v-bind=\"data\" />\n          <slot v-else name=\"dateCell\" v-bind=\"data\" />\n        </template>\n      </date-table>\n    </div>\n    <div v-else :class=\"ns.e('body')\">\n      <date-table\n        v-for=\"(range_, index) in validatedRange\"\n        :key=\"index\"\n        :date=\"range_[0]\"\n        :selected-day=\"realSelectedDay\"\n        :range=\"range_\"\n        :hide-header=\"index !== 0\"\n        @pick=\"pickDay\"\n      >\n        <template\n          v-if=\"$slots['date-cell'] || $slots.dateCell\"\n          #date-cell=\"data\"\n        >\n          <slot v-if=\"$slots['date-cell']\" name=\"date-cell\" v-bind=\"data\" />\n          <slot v-else name=\"dateCell\" v-bind=\"data\" />\n        </template>\n      </date-table>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { ElButton, ElButtonGroup } from '@element-plus/components/button'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\n\nimport DateTable from './date-table.vue'\nimport { useCalendar } from './use-calendar'\nimport { calendarEmits, calendarProps } from './calendar'\n\nconst ns = useNamespace('calendar')\n\nconst COMPONENT_NAME = 'ElCalendar'\ndefineOptions({\n  name: COMPONENT_NAME,\n})\n\nconst props = defineProps(calendarProps)\nconst emit = defineEmits(calendarEmits)\n\nconst {\n  calculateValidatedDateRange,\n  date,\n  pickDay,\n  realSelectedDay,\n  selectDate,\n  validatedRange,\n} = useCalendar(props, emit, COMPONENT_NAME)\n\nconst { t } = useLocale()\n\nconst i18nDate = computed(() => {\n  const pickedMonth = `el.datepicker.month${date.value.format('M')}`\n  return `${date.value.year()} ${t('el.datepicker.year')} ${t(pickedMonth)}`\n})\n\ndefineExpose({\n  /** @description currently selected date */\n  selectedDay: realSelectedDay,\n  /** @description select a specific date */\n  pickDay,\n  /** @description select date */\n  selectDate,\n  /** @description Calculate the validate date range according to the start and end dates */\n  calculateValidatedDateRange,\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;;;uCAiEc;EACZA,IAAM,EAAAC;AACR;;;;;;;;;;IALM,MAAAC,EAAA,GAAKC,KAAA,CAAAC,YAAA,CAAa,UAAU;IAU5B;MACJC,2BAAA;MACAC,IAAA;MACAC,OAAA;MACAC,eAAA;MACAC,UAAA;MACAC;IAAA,CACE,GAAAC,WAAA,CAAAA,WAAA,CAAYC,KAAO,EAAAC,IAAA,EAAMZ,cAAc;IAErC;MAAEa;IAAA,IAAMC,OAAA,CAAAC,SAAU;IAElB,MAAAC,QAAA,GAAWC,GAAA,CAAAC,QAAA,CAAS,MAAM;MAC9B,MAAMC,WAAc,yBAAsBd,IAAK,CAAAe,KAAA,CAAMC,MAAA,CAAO,GAAG;MACxD,UAAGhB,IAAA,CAAKe,KAAM,CAAAE,IAAA,MAAUT,CAAE,qBAAoB,CAAK,IAAAA,CAAA,CAAEM,WAAW;IAAA,CACxE;IAEYI,MAAA;MAEXC,WAAa,EAAAjB,eAAA;MAEbD,OAAA;MAEAE,UAAA;MAEAJ;IAAA,CACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}