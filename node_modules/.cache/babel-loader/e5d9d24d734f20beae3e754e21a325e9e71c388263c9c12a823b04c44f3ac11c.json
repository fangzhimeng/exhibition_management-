{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar lodashUnified = require('lodash-unified');\nvar shared = require('@vue/shared');\nconst keysOf = arr => Object.keys(arr);\nconst entriesOf = arr => Object.entries(arr);\nconst getProp = (obj, path, defaultValue) => {\n  return {\n    get value() {\n      return lodashUnified.get(obj, path, defaultValue);\n    },\n    set value(val) {\n      lodashUnified.set(obj, path, val);\n    }\n  };\n};\nObject.defineProperty(exports, 'hasOwn', {\n  enumerable: true,\n  get: function () {\n    return shared.hasOwn;\n  }\n});\nexports.entriesOf = entriesOf;\nexports.getProp = getProp;\nexports.keysOf = keysOf;","map":{"version":3,"names":["keysOf","arr","Object","keys","entriesOf","entries","getProp","obj","path","defaultValue","value","lodashUnified","get","val","set"],"sources":["../../../../packages/utils/objects.ts"],"sourcesContent":["import { get, set } from 'lodash-unified'\nimport type { Entries } from 'type-fest'\nimport type { Arrayable } from '.'\n\nexport const keysOf = <T>(arr: T) => Object.keys(arr) as Array<keyof T>\nexport const entriesOf = <T>(arr: T) => Object.entries(arr) as Entries<T>\nexport { hasOwn } from '@vue/shared'\n\nexport const getProp = <T = any>(\n  obj: Record<string, any>,\n  path: Arrayable<string>,\n  defaultValue?: any\n): { value: T } => {\n  return {\n    get value() {\n      return get(obj, path, defaultValue)\n    },\n    set value(val: any) {\n      set(obj, path, val)\n    },\n  }\n}\n"],"mappings":";;;;;;;AACY,MAACA,MAAM,GAAIC,GAAG,IAAKC,MAAM,CAACC,IAAI,CAACF,GAAG;AAClC,MAACG,SAAS,GAAIH,GAAG,IAAKC,MAAM,CAACG,OAAO,CAACJ,GAAG;AAExC,MAACK,OAAO,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,YAAY,KAAK;EAClD,OAAO;IACL,IAAIC,KAAKA,CAAA,EAAG;MACV,OAAOC,aAAA,CAAAC,GAAG,CAACL,GAAG,EAAEC,IAAI,EAAEC,YAAY,CAAC;IACzC,CAAK;IACD,IAAIC,KAAKA,CAACG,GAAG,EAAE;MACbF,aAAA,CAAAG,GAAG,CAACP,GAAG,EAAEC,IAAI,EAAEK,GAAG,CAAC;IACzB;EACA,CAAG;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}