{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar shared = require('@vue/shared');\nvar lodashUnified = require('lodash-unified');\nrequire('../../../hooks/index.js');\nrequire('../../../utils/index.js');\nrequire('../../form/index.js');\nvar uploadDragger = require('./upload-dragger2.js');\nvar uploadContent = require('./upload-content.js');\nvar upload = require('./upload.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar useFormCommonProps = require('../../form/src/hooks/use-form-common-props.js');\nvar objects = require('../../../utils/objects.js');\nconst _hoisted_1 = [\"onKeydown\"];\nconst _hoisted_2 = [\"name\", \"multiple\", \"accept\"];\nconst __default__ = vue.defineComponent({\n  name: \"ElUploadContent\",\n  inheritAttrs: false\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: uploadContent.uploadContentProps,\n  setup(__props, {\n    expose\n  }) {\n    const props = __props;\n    const ns = index.useNamespace(\"upload\");\n    const disabled = useFormCommonProps.useFormDisabled();\n    const requests = vue.shallowRef({});\n    const inputRef = vue.shallowRef();\n    const uploadFiles = files => {\n      if (files.length === 0) return;\n      const {\n        autoUpload,\n        limit,\n        fileList,\n        multiple,\n        onStart,\n        onExceed\n      } = props;\n      if (limit && fileList.length + files.length > limit) {\n        onExceed(files, fileList);\n        return;\n      }\n      if (!multiple) {\n        files = files.slice(0, 1);\n      }\n      for (const file of files) {\n        const rawFile = file;\n        rawFile.uid = upload.genFileId();\n        onStart(rawFile);\n        if (autoUpload) upload$1(rawFile);\n      }\n    };\n    const upload$1 = async rawFile => {\n      inputRef.value.value = \"\";\n      if (!props.beforeUpload) {\n        return doUpload(rawFile);\n      }\n      let hookResult;\n      let beforeData = {};\n      try {\n        const originData = props.data;\n        const beforeUploadPromise = props.beforeUpload(rawFile);\n        beforeData = shared.isPlainObject(props.data) ? lodashUnified.cloneDeep(props.data) : props.data;\n        hookResult = await beforeUploadPromise;\n        if (shared.isPlainObject(props.data) && lodashUnified.isEqual(originData, beforeData)) {\n          beforeData = lodashUnified.cloneDeep(props.data);\n        }\n      } catch (e) {\n        hookResult = false;\n      }\n      if (hookResult === false) {\n        props.onRemove(rawFile);\n        return;\n      }\n      let file = rawFile;\n      if (hookResult instanceof Blob) {\n        if (hookResult instanceof File) {\n          file = hookResult;\n        } else {\n          file = new File([hookResult], rawFile.name, {\n            type: rawFile.type\n          });\n        }\n      }\n      doUpload(Object.assign(file, {\n        uid: rawFile.uid\n      }), beforeData);\n    };\n    const resolveData = async (data, rawFile) => {\n      if (shared.isFunction(data)) {\n        return data(rawFile);\n      }\n      return data;\n    };\n    const doUpload = async (rawFile, beforeData) => {\n      const {\n        headers,\n        data,\n        method,\n        withCredentials,\n        name: filename,\n        action,\n        onProgress,\n        onSuccess,\n        onError,\n        httpRequest\n      } = props;\n      try {\n        beforeData = await resolveData(beforeData != null ? beforeData : data, rawFile);\n      } catch (e) {\n        props.onRemove(rawFile);\n        return;\n      }\n      const {\n        uid\n      } = rawFile;\n      const options = {\n        headers: headers || {},\n        withCredentials,\n        file: rawFile,\n        data: beforeData,\n        method,\n        filename,\n        action,\n        onProgress: evt => {\n          onProgress(evt, rawFile);\n        },\n        onSuccess: res => {\n          onSuccess(res, rawFile);\n          delete requests.value[uid];\n        },\n        onError: err => {\n          onError(err, rawFile);\n          delete requests.value[uid];\n        }\n      };\n      const request = httpRequest(options);\n      requests.value[uid] = request;\n      if (request instanceof Promise) {\n        request.then(options.onSuccess, options.onError);\n      }\n    };\n    const handleChange = e => {\n      const files = e.target.files;\n      if (!files) return;\n      uploadFiles(Array.from(files));\n    };\n    const handleClick = () => {\n      if (!disabled.value) {\n        inputRef.value.value = \"\";\n        inputRef.value.click();\n      }\n    };\n    const handleKeydown = () => {\n      handleClick();\n    };\n    const abort = file => {\n      const _reqs = objects.entriesOf(requests.value).filter(file ? ([uid]) => String(file.uid) === uid : () => true);\n      _reqs.forEach(([uid, req]) => {\n        if (req instanceof XMLHttpRequest) req.abort();\n        delete requests.value[uid];\n      });\n    };\n    expose({\n      abort,\n      upload: upload$1\n    });\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createElementBlock(\"div\", {\n        class: vue.normalizeClass([vue.unref(ns).b(), vue.unref(ns).m(_ctx.listType), vue.unref(ns).is(\"drag\", _ctx.drag)]),\n        tabindex: \"0\",\n        onClick: handleClick,\n        onKeydown: vue.withKeys(vue.withModifiers(handleKeydown, [\"self\"]), [\"enter\", \"space\"])\n      }, [_ctx.drag ? (vue.openBlock(), vue.createBlock(uploadDragger[\"default\"], {\n        key: 0,\n        disabled: vue.unref(disabled),\n        onFile: uploadFiles\n      }, {\n        default: vue.withCtx(() => [vue.renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      }, 8, [\"disabled\"])) : vue.renderSlot(_ctx.$slots, \"default\", {\n        key: 1\n      }), vue.createElementVNode(\"input\", {\n        ref_key: \"inputRef\",\n        ref: inputRef,\n        class: vue.normalizeClass(vue.unref(ns).e(\"input\")),\n        name: _ctx.name,\n        multiple: _ctx.multiple,\n        accept: _ctx.accept,\n        type: \"file\",\n        onChange: handleChange,\n        onClick: _cache[0] || (_cache[0] = vue.withModifiers(() => {}, [\"stop\"]))\n      }, null, 42, _hoisted_2)], 42, _hoisted_1);\n    };\n  }\n});\nvar UploadContent = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/upload/src/upload-content.vue\"]]);\nexports[\"default\"] = UploadContent;","map":{"version":3,"names":["name","inheritAttrs","ns","index","useNamespace","disabled","useFormCommonProps","useFormDisabled","requests","vue","shallowRef","inputRef","uploadFiles","files","length","autoUpload","limit","fileList","multiple","onStart","onExceed","props","slice","file","rawFile","uid","upload","genFileId","upload$1","value","beforeUpload","doUpload","hookResult","beforeData","originData","data","beforeUploadPromise","shared","isPlainObject","lodashUnified","cloneDeep","isEqual","e","onRemove","Blob","File","type","Object","assign","resolveData","isFunction","headers","method","withCredentials","filename","action","onProgress","onSuccess","onError","httpRequest","options","evt","res","err","request","Promise","then","handleChange","target","Array","from","handleClick","click","handleKeydown","abort","_reqs","objects","entriesOf","filter","String","forEach","req","XMLHttpRequest","expose"],"sources":["../../../../../../packages/components/upload/src/upload-content.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"[ns.b(), ns.m(listType), ns.is('drag', drag)]\"\n    tabindex=\"0\"\n    @click=\"handleClick\"\n    @keydown.self.enter.space=\"handleKeydown\"\n  >\n    <template v-if=\"drag\">\n      <upload-dragger :disabled=\"disabled\" @file=\"uploadFiles\">\n        <slot />\n      </upload-dragger>\n    </template>\n    <template v-else>\n      <slot />\n    </template>\n    <input\n      ref=\"inputRef\"\n      :class=\"ns.e('input')\"\n      :name=\"name\"\n      :multiple=\"multiple\"\n      :accept=\"accept\"\n      type=\"file\"\n      @change=\"handleChange\"\n      @click.stop\n    />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { shallowRef } from 'vue'\nimport { isPlainObject } from '@vue/shared'\nimport { cloneDeep, isEqual } from 'lodash-unified'\nimport { useNamespace } from '@element-plus/hooks'\nimport { entriesOf, isFunction } from '@element-plus/utils'\nimport { useFormDisabled } from '@element-plus/components/form'\nimport UploadDragger from './upload-dragger.vue'\nimport { uploadContentProps } from './upload-content'\nimport { genFileId } from './upload'\nimport type { UploadContentProps } from './upload-content'\n\nimport type {\n  UploadFile,\n  UploadHooks,\n  UploadRawFile,\n  UploadRequestOptions,\n} from './upload'\n\ndefineOptions({\n  name: 'ElUploadContent',\n  inheritAttrs: false,\n})\n\nconst props = defineProps(uploadContentProps)\nconst ns = useNamespace('upload')\nconst disabled = useFormDisabled()\n\nconst requests = shallowRef<Record<string, XMLHttpRequest | Promise<unknown>>>(\n  {}\n)\nconst inputRef = shallowRef<HTMLInputElement>()\n\nconst uploadFiles = (files: File[]) => {\n  if (files.length === 0) return\n\n  const { autoUpload, limit, fileList, multiple, onStart, onExceed } = props\n\n  if (limit && fileList.length + files.length > limit) {\n    onExceed(files, fileList)\n    return\n  }\n\n  if (!multiple) {\n    files = files.slice(0, 1)\n  }\n\n  for (const file of files) {\n    const rawFile = file as UploadRawFile\n    rawFile.uid = genFileId()\n    onStart(rawFile)\n    if (autoUpload) upload(rawFile)\n  }\n}\n\nconst upload = async (rawFile: UploadRawFile): Promise<void> => {\n  inputRef.value!.value = ''\n\n  if (!props.beforeUpload) {\n    return doUpload(rawFile)\n  }\n\n  let hookResult: Exclude<ReturnType<UploadHooks['beforeUpload']>, Promise<any>>\n  let beforeData: UploadContentProps['data'] = {}\n\n  try {\n    // origin data: Handle data changes after synchronization tasks are executed\n    const originData = props.data\n    const beforeUploadPromise = props.beforeUpload(rawFile)\n    beforeData = isPlainObject(props.data) ? cloneDeep(props.data) : props.data\n    hookResult = await beforeUploadPromise\n    if (isPlainObject(props.data) && isEqual(originData, beforeData)) {\n      beforeData = cloneDeep(props.data)\n    }\n  } catch {\n    hookResult = false\n  }\n\n  if (hookResult === false) {\n    props.onRemove(rawFile)\n    return\n  }\n\n  let file: File = rawFile\n  if (hookResult instanceof Blob) {\n    if (hookResult instanceof File) {\n      file = hookResult\n    } else {\n      file = new File([hookResult], rawFile.name, {\n        type: rawFile.type,\n      })\n    }\n  }\n\n  doUpload(\n    Object.assign(file, {\n      uid: rawFile.uid,\n    }),\n    beforeData\n  )\n}\n\nconst resolveData = async (\n  data: UploadContentProps['data'],\n  rawFile: UploadRawFile\n): Promise<Record<string, any>> => {\n  if (isFunction(data)) {\n    return data(rawFile)\n  }\n\n  return data\n}\n\nconst doUpload = async (\n  rawFile: UploadRawFile,\n  beforeData?: UploadContentProps['data']\n) => {\n  const {\n    headers,\n    data,\n    method,\n    withCredentials,\n    name: filename,\n    action,\n    onProgress,\n    onSuccess,\n    onError,\n    httpRequest,\n  } = props\n\n  try {\n    beforeData = await resolveData(beforeData ?? data, rawFile)\n  } catch {\n    props.onRemove(rawFile)\n    return\n  }\n\n  const { uid } = rawFile\n  const options: UploadRequestOptions = {\n    headers: headers || {},\n    withCredentials,\n    file: rawFile,\n    data: beforeData,\n    method,\n    filename,\n    action,\n    onProgress: (evt) => {\n      onProgress(evt, rawFile)\n    },\n    onSuccess: (res) => {\n      onSuccess(res, rawFile)\n      delete requests.value[uid]\n    },\n    onError: (err) => {\n      onError(err, rawFile)\n      delete requests.value[uid]\n    },\n  }\n  const request = httpRequest(options)\n  requests.value[uid] = request\n  if (request instanceof Promise) {\n    request.then(options.onSuccess, options.onError)\n  }\n}\n\nconst handleChange = (e: Event) => {\n  const files = (e.target as HTMLInputElement).files\n  if (!files) return\n  uploadFiles(Array.from(files))\n}\n\nconst handleClick = () => {\n  if (!disabled.value) {\n    inputRef.value!.value = ''\n    inputRef.value!.click()\n  }\n}\n\nconst handleKeydown = () => {\n  handleClick()\n}\n\nconst abort = (file?: UploadFile) => {\n  const _reqs = entriesOf(requests.value).filter(\n    file ? ([uid]) => String(file.uid) === uid : () => true\n  )\n  _reqs.forEach(([uid, req]) => {\n    if (req instanceof XMLHttpRequest) req.abort()\n    delete requests.value[uid]\n  })\n}\n\ndefineExpose({\n  abort,\n  upload,\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}