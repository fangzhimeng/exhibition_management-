{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../utils/index.js');\nvar error = require('../../utils/error.js');\nconst useDeprecated = ({\n  from,\n  replacement,\n  scope,\n  version,\n  ref,\n  type = \"API\"\n}, condition) => {\n  vue.watch(() => vue.unref(condition), val => {\n    if (val) {\n      error.debugWarn(scope, `[${type}] ${from} is about to be deprecated in version ${version}, please use ${replacement} instead.\nFor more detail, please visit: ${ref}\n`);\n    }\n  }, {\n    immediate: true\n  });\n};\nexports.useDeprecated = useDeprecated;","map":{"version":3,"names":["useDeprecated","from","replacement","scope","version","ref","type","condition","vue","watch","unref","val","error","debugWarn","immediate"],"sources":["../../../../../packages/hooks/use-deprecated/index.ts"],"sourcesContent":["import { unref, watch } from 'vue'\nimport { debugWarn } from '@element-plus/utils'\n\nimport type { MaybeRef } from '@vueuse/core'\n\ntype DeprecationParam = {\n  from: string\n  replacement: string\n  scope: string\n  version: string\n  ref: string\n  type?: 'API' | 'Attribute' | 'Event' | 'Slot'\n}\n\nexport const useDeprecated = (\n  { from, replacement, scope, version, ref, type = 'API' }: DeprecationParam,\n  condition: MaybeRef<boolean>\n) => {\n  watch(\n    () => unref(condition),\n    (val) => {\n      if (val) {\n        debugWarn(\n          scope,\n          `[${type}] ${from} is about to be deprecated in version ${version}, please use ${replacement} instead.\nFor more detail, please visit: ${ref}\n`\n        )\n      }\n    },\n    {\n      immediate: true,\n    }\n  )\n}\n"],"mappings":";;;;;;;;AAEY,MAACA,aAAa,GAAGA,CAAC;EAAEC,IAAI;EAAEC,WAAW;EAAEC,KAAK;EAAEC,OAAO;EAAEC,GAAG;EAAEC,IAAI,GAAG;AAAK,CAAE,EAAEC,SAAS,KAAK;EACpGC,GAAA,CAAAC,KAAK,CAAC,MAAMD,GAAA,CAAAE,KAAK,CAACH,SAAS,CAAC,EAAGI,GAAG,IAAK;IACrC,IAAIA,GAAG,EAAE;MACPC,KAAA,CAAAC,SAAS,CAACV,KAAK,EAAG,IAAGG,IAAK,KAAIL,IAAK,yCAAwCG,OAAQ,gBAAeF,WAAY;AACpH,iCAAiCG,GAAI;AACrC,CAAC,CAAC;IACF;EACA,CAAG,EAAE;IACDS,SAAS,EAAE;EACf,CAAG,CAAC;AACJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}