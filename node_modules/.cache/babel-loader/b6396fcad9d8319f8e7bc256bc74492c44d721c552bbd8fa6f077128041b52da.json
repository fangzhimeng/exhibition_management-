{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../../hooks/index.js');\nrequire('../../../utils/index.js');\nrequire('../../../constants/index.js');\nvar rovingFocusGroup = require('./roving-focus-group.js');\nvar tokens = require('./tokens.js');\nvar utils = require('./utils.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-id/index.js');\nvar event = require('../../../utils/dom/event.js');\nvar aria = require('../../../constants/aria.js');\nconst _sfc_main = vue.defineComponent({\n  components: {\n    ElRovingFocusCollectionItem: rovingFocusGroup.ElCollectionItem\n  },\n  props: {\n    focusable: {\n      type: Boolean,\n      default: true\n    },\n    active: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\"mousedown\", \"focus\", \"keydown\"],\n  setup(props, {\n    emit\n  }) {\n    const {\n      currentTabbedId,\n      loop,\n      onItemFocus,\n      onItemShiftTab\n    } = vue.inject(tokens.ROVING_FOCUS_GROUP_INJECTION_KEY, void 0);\n    const {\n      getItems\n    } = vue.inject(rovingFocusGroup.ROVING_FOCUS_COLLECTION_INJECTION_KEY, void 0);\n    const id = index.useId();\n    const rovingFocusGroupItemRef = vue.ref(null);\n    const handleMousedown = event.composeEventHandlers(e => {\n      emit(\"mousedown\", e);\n    }, e => {\n      if (!props.focusable) {\n        e.preventDefault();\n      } else {\n        onItemFocus(vue.unref(id));\n      }\n    });\n    const handleFocus = event.composeEventHandlers(e => {\n      emit(\"focus\", e);\n    }, () => {\n      onItemFocus(vue.unref(id));\n    });\n    const handleKeydown = event.composeEventHandlers(e => {\n      emit(\"keydown\", e);\n    }, e => {\n      const {\n        key,\n        shiftKey,\n        target,\n        currentTarget\n      } = e;\n      if (key === aria.EVENT_CODE.tab && shiftKey) {\n        onItemShiftTab();\n        return;\n      }\n      if (target !== currentTarget) return;\n      const focusIntent = utils.getFocusIntent(e);\n      if (focusIntent) {\n        e.preventDefault();\n        const items = getItems().filter(item => item.focusable);\n        let elements = items.map(item => item.ref);\n        switch (focusIntent) {\n          case \"last\":\n            {\n              elements.reverse();\n              break;\n            }\n          case \"prev\":\n          case \"next\":\n            {\n              if (focusIntent === \"prev\") {\n                elements.reverse();\n              }\n              const currentIdx = elements.indexOf(currentTarget);\n              elements = loop.value ? utils.reorderArray(elements, currentIdx + 1) : elements.slice(currentIdx + 1);\n              break;\n            }\n          default:\n            {\n              break;\n            }\n        }\n        vue.nextTick(() => {\n          utils.focusFirst(elements);\n        });\n      }\n    });\n    const isCurrentTab = vue.computed(() => currentTabbedId.value === vue.unref(id));\n    vue.provide(tokens.ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY, {\n      rovingFocusGroupItemRef,\n      tabIndex: vue.computed(() => vue.unref(isCurrentTab) ? 0 : -1),\n      handleMousedown,\n      handleFocus,\n      handleKeydown\n    });\n    return {\n      id,\n      handleKeydown,\n      handleFocus,\n      handleMousedown\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_roving_focus_collection_item = vue.resolveComponent(\"el-roving-focus-collection-item\");\n  return vue.openBlock(), vue.createBlock(_component_el_roving_focus_collection_item, {\n    id: _ctx.id,\n    focusable: _ctx.focusable,\n    active: _ctx.active\n  }, {\n    default: vue.withCtx(() => [vue.renderSlot(_ctx.$slots, \"default\")]),\n    _: 3\n  }, 8, [\"id\", \"focusable\", \"active\"]);\n}\nvar ElRovingFocusItem = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/roving-focus-group/src/roving-focus-item.vue\"]]);\nexports[\"default\"] = ElRovingFocusItem;","map":{"version":3,"names":["_sfc_main","vue","defineComponent","components","ElRovingFocusCollectionItem","rovingFocusGroup","ElCollectionItem","props","focusable","type","Boolean","default","active","emits","setup","emit","currentTabbedId","loop","onItemFocus","onItemShiftTab","inject","tokens","ROVING_FOCUS_GROUP_INJECTION_KEY","getItems","ROVING_FOCUS_COLLECTION_INJECTION_KEY","id","index","useId","rovingFocusGroupItemRef","ref","handleMousedown","event","composeEventHandlers","e","preventDefault","unref","handleFocus","handleKeydown","key","shiftKey","target","currentTarget","aria","EVENT_CODE","tab","focusIntent","utils","getFocusIntent","items","filter","item","elements","map","reverse","currentIdx","indexOf","value","reorderArray","slice","nextTick","focusFirst","isCurrentTab","computed","provide","ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY","tabIndex","createBlock","_component_el_roving_focus_collection_item","_ctx","renderSlot","$slots"],"sources":["../../../../../../packages/components/roving-focus-group/src/roving-focus-item.vue"],"sourcesContent":["<template>\n  <el-roving-focus-collection-item\n    :id=\"id\"\n    :focusable=\"focusable\"\n    :active=\"active\"\n  >\n    <slot />\n  </el-roving-focus-collection-item>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  inject,\n  nextTick,\n  provide,\n  ref,\n  unref,\n} from 'vue'\nimport { useId } from '@element-plus/hooks'\nimport { composeEventHandlers } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport {\n  ElCollectionItem as ElRovingFocusCollectionItem,\n  ROVING_FOCUS_COLLECTION_INJECTION_KEY,\n} from './roving-focus-group'\nimport {\n  ROVING_FOCUS_GROUP_INJECTION_KEY,\n  ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY,\n} from './tokens'\nimport { focusFirst, getFocusIntent, reorderArray } from './utils'\n\nexport default defineComponent({\n  components: {\n    ElRovingFocusCollectionItem,\n  },\n  props: {\n    focusable: {\n      type: Boolean,\n      default: true,\n    },\n    active: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: ['mousedown', 'focus', 'keydown'],\n  setup(props, { emit }) {\n    const { currentTabbedId, loop, onItemFocus, onItemShiftTab } = inject(\n      ROVING_FOCUS_GROUP_INJECTION_KEY,\n      undefined\n    )!\n\n    const { getItems } = inject(\n      ROVING_FOCUS_COLLECTION_INJECTION_KEY,\n      undefined\n    )!\n\n    const id = useId()\n    const rovingFocusGroupItemRef = ref<HTMLElement | null>(null)\n\n    const handleMousedown = composeEventHandlers(\n      (e: Event) => {\n        emit('mousedown', e)\n      },\n      (e) => {\n        if (!props.focusable) {\n          e.preventDefault()\n        } else {\n          onItemFocus(unref(id))\n        }\n      }\n    )\n\n    const handleFocus = composeEventHandlers(\n      (e: Event) => {\n        emit('focus', e)\n      },\n      () => {\n        onItemFocus(unref(id))\n      }\n    )\n\n    const handleKeydown = composeEventHandlers(\n      (e: Event) => {\n        emit('keydown', e)\n      },\n      (e) => {\n        const { key, shiftKey, target, currentTarget } = e as KeyboardEvent\n        if (key === EVENT_CODE.tab && shiftKey) {\n          onItemShiftTab()\n          return\n        }\n        if (target !== currentTarget) return\n        const focusIntent = getFocusIntent(e as KeyboardEvent)\n\n        if (focusIntent) {\n          e.preventDefault()\n          const items = getItems<typeof props>().filter(\n            (item) => item.focusable\n          )\n\n          let elements = items.map((item) => item.ref!)\n\n          switch (focusIntent) {\n            case 'last': {\n              elements.reverse()\n              break\n            }\n            case 'prev':\n            case 'next': {\n              if (focusIntent === 'prev') {\n                elements.reverse()\n              }\n              const currentIdx = elements.indexOf(currentTarget as HTMLElement)\n              elements = loop.value\n                ? reorderArray(elements, currentIdx + 1)\n                : elements.slice(currentIdx + 1)\n              break\n            }\n            default: {\n              break\n            }\n          }\n\n          nextTick(() => {\n            focusFirst(elements)\n          })\n        }\n      }\n    )\n\n    const isCurrentTab = computed(() => currentTabbedId.value === unref(id))\n\n    provide(ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY, {\n      rovingFocusGroupItemRef,\n      tabIndex: computed(() => (unref(isCurrentTab) ? 0 : -1)),\n      handleMousedown,\n      handleFocus,\n      handleKeydown,\n    })\n\n    return {\n      id,\n      handleKeydown,\n      handleFocus,\n      handleMousedown,\n    }\n  },\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}