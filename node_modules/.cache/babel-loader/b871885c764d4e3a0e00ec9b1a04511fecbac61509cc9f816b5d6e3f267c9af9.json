{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar constants = require('./constants.js');\nvar popper = require('./popper.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nconst __default__ = vue.defineComponent({\n  name: \"ElPopper\",\n  inheritAttrs: false\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: popper.popperProps,\n  setup(__props, {\n    expose\n  }) {\n    const props = __props;\n    const triggerRef = vue.ref();\n    const popperInstanceRef = vue.ref();\n    const contentRef = vue.ref();\n    const referenceRef = vue.ref();\n    const role = vue.computed(() => props.role);\n    const popperProvides = {\n      triggerRef,\n      popperInstanceRef,\n      contentRef,\n      referenceRef,\n      role\n    };\n    expose(popperProvides);\n    vue.provide(constants.POPPER_INJECTION_KEY, popperProvides);\n    return (_ctx, _cache) => {\n      return vue.renderSlot(_ctx.$slots, \"default\");\n    };\n  }\n});\nvar Popper = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/popper/src/popper.vue\"]]);\nexports[\"default\"] = Popper;","map":{"version":3,"names":["name","inheritAttrs","triggerRef","vue","ref","popperInstanceRef","contentRef","referenceRef","role","computed","props","popperProvides","expose","provide","constants","POPPER_INJECTION_KEY"],"sources":["../../../../../../packages/components/popper/src/popper.vue"],"sourcesContent":["<template>\n  <slot />\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, provide, ref } from 'vue'\nimport { POPPER_INJECTION_KEY } from './constants'\nimport { popperProps } from './popper'\n\nimport type { Instance as PopperInstance } from '@popperjs/core'\nimport type { ElPopperInjectionContext } from './constants'\n\ndefineOptions({\n  name: 'ElPopper',\n  inheritAttrs: false,\n})\nconst props = defineProps(popperProps)\n\nconst triggerRef = ref<HTMLElement>()\nconst popperInstanceRef = ref<PopperInstance>()\nconst contentRef = ref<HTMLElement>()\nconst referenceRef = ref<HTMLElement>()\nconst role = computed(() => props.role)\n\nconst popperProvides = {\n  /**\n   * @description trigger element\n   */\n  triggerRef,\n  /**\n   * @description popperjs instance\n   */\n  popperInstanceRef,\n  /**\n   * @description popper content element\n   */\n  contentRef,\n  /**\n   * @description popper reference element\n   */\n  referenceRef,\n  /**\n   * @description role determines how aria attributes are distributed\n   */\n  role,\n} as ElPopperInjectionContext\n\ndefineExpose(popperProvides)\n\nprovide(POPPER_INJECTION_KEY, popperProvides)\n</script>\n"],"mappings":";;;;;;;;;uCAYc;EACZA,IAAM;EACNC,YAAc;AAChB;;;;;;;;IAGA,MAAMC,UAAA,GAAaC,GAAA,CAAAC,GAAiB;IACpC,MAAMC,iBAAA,GAAoBF,GAAA,CAAAC,GAAoB;IAC9C,MAAME,UAAA,GAAaH,GAAA,CAAAC,GAAiB;IACpC,MAAMG,YAAA,GAAeJ,GAAA,CAAAC,GAAiB;IACtC,MAAMI,IAAO,GAAAL,GAAA,CAAAM,QAAA,CAAS,MAAMC,KAAA,CAAMF,IAAI;IAEtC,MAAMG,cAAiB;MAIrBT,UAAA;MAIAG,iBAAA;MAIAC,UAAA;MAIAC,YAAA;MAIAC;IAAA,CACF;IAEAI,MAAA,CAAaD,cAAc;IAE3BR,GAAA,CAAAU,OAAA,CAAQC,SAAA,CAAAC,oBAAA,EAAsBJ,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}