{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/web.url-search-params.delete.js\");\nrequire(\"core-js/modules/web.url-search-params.has.js\");\nrequire(\"core-js/modules/web.url-search-params.size.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar lodashUnified = require('lodash-unified');\nvar core = require('@vueuse/core');\nrequire('../../../utils/index.js');\nvar upload = require('./upload.js');\nvar error = require('../../../utils/error.js');\nconst SCOPE = \"ElUpload\";\nconst revokeFileObjectURL = file => {\n  var _a;\n  if ((_a = file.url) == null ? void 0 : _a.startsWith(\"blob:\")) {\n    URL.revokeObjectURL(file.url);\n  }\n};\nconst useHandlers = (props, uploadRef) => {\n  const uploadFiles = core.useVModel(props, \"fileList\", void 0, {\n    passive: true\n  });\n  const getFile = rawFile => uploadFiles.value.find(file => file.uid === rawFile.uid);\n  function abort(file) {\n    var _a;\n    (_a = uploadRef.value) == null ? void 0 : _a.abort(file);\n  }\n  function clearFiles(states = [\"ready\", \"uploading\", \"success\", \"fail\"]) {\n    uploadFiles.value = uploadFiles.value.filter(row => !states.includes(row.status));\n  }\n  const handleError = (err, rawFile) => {\n    const file = getFile(rawFile);\n    if (!file) return;\n    console.error(err);\n    file.status = \"fail\";\n    uploadFiles.value.splice(uploadFiles.value.indexOf(file), 1);\n    props.onError(err, file, uploadFiles.value);\n    props.onChange(file, uploadFiles.value);\n  };\n  const handleProgress = (evt, rawFile) => {\n    const file = getFile(rawFile);\n    if (!file) return;\n    props.onProgress(evt, file, uploadFiles.value);\n    file.status = \"uploading\";\n    file.percentage = Math.round(evt.percent);\n  };\n  const handleSuccess = (response, rawFile) => {\n    const file = getFile(rawFile);\n    if (!file) return;\n    file.status = \"success\";\n    file.response = response;\n    props.onSuccess(response, file, uploadFiles.value);\n    props.onChange(file, uploadFiles.value);\n  };\n  const handleStart = file => {\n    if (lodashUnified.isNil(file.uid)) file.uid = upload.genFileId();\n    const uploadFile = {\n      name: file.name,\n      percentage: 0,\n      status: \"ready\",\n      size: file.size,\n      raw: file,\n      uid: file.uid\n    };\n    if (props.listType === \"picture-card\" || props.listType === \"picture\") {\n      try {\n        uploadFile.url = URL.createObjectURL(file);\n      } catch (err) {\n        error.debugWarn(SCOPE, err.message);\n        props.onError(err, uploadFile, uploadFiles.value);\n      }\n    }\n    uploadFiles.value = [...uploadFiles.value, uploadFile];\n    props.onChange(uploadFile, uploadFiles.value);\n  };\n  const handleRemove = async file => {\n    const uploadFile = file instanceof File ? getFile(file) : file;\n    if (!uploadFile) error.throwError(SCOPE, \"file to be removed not found\");\n    const doRemove = file2 => {\n      abort(file2);\n      const fileList = uploadFiles.value;\n      fileList.splice(fileList.indexOf(file2), 1);\n      props.onRemove(file2, fileList);\n      revokeFileObjectURL(file2);\n    };\n    if (props.beforeRemove) {\n      const before = await props.beforeRemove(uploadFile, uploadFiles.value);\n      if (before !== false) doRemove(uploadFile);\n    } else {\n      doRemove(uploadFile);\n    }\n  };\n  function submit() {\n    uploadFiles.value.filter(({\n      status\n    }) => status === \"ready\").forEach(({\n      raw\n    }) => {\n      var _a;\n      return raw && ((_a = uploadRef.value) == null ? void 0 : _a.upload(raw));\n    });\n  }\n  vue.watch(() => props.listType, val => {\n    if (val !== \"picture-card\" && val !== \"picture\") {\n      return;\n    }\n    uploadFiles.value = uploadFiles.value.map(file => {\n      const {\n        raw,\n        url\n      } = file;\n      if (!url && raw) {\n        try {\n          file.url = URL.createObjectURL(raw);\n        } catch (err) {\n          props.onError(err, file, uploadFiles.value);\n        }\n      }\n      return file;\n    });\n  });\n  vue.watch(uploadFiles, files => {\n    for (const file of files) {\n      file.uid || (file.uid = upload.genFileId());\n      file.status || (file.status = \"success\");\n    }\n  }, {\n    immediate: true,\n    deep: true\n  });\n  return {\n    uploadFiles,\n    abort,\n    clearFiles,\n    handleError,\n    handleProgress,\n    handleStart,\n    handleSuccess,\n    handleRemove,\n    submit,\n    revokeFileObjectURL\n  };\n};\nexports.useHandlers = useHandlers;","map":{"version":3,"names":["SCOPE","revokeFileObjectURL","file","_a","url","startsWith","URL","revokeObjectURL","useHandlers","props","uploadRef","uploadFiles","core","useVModel","passive","getFile","rawFile","value","find","uid","abort","clearFiles","states","filter","row","includes","status","handleError","err","console","error","splice","indexOf","onError","onChange","handleProgress","evt","onProgress","percentage","Math","round","percent","handleSuccess","response","onSuccess","handleStart","lodashUnified","isNil","upload","genFileId","uploadFile","name","size","raw","listType","createObjectURL","debugWarn","message","handleRemove","File","throwError","doRemove","file2","fileList","onRemove","beforeRemove","before","submit","forEach","vue","watch","val","map","files","immediate","deep"],"sources":["../../../../../../packages/components/upload/src/use-handlers.ts"],"sourcesContent":["import { watch } from 'vue'\nimport { isNil } from 'lodash-unified'\nimport { useVModel } from '@vueuse/core'\nimport { debugWarn, throwError } from '@element-plus/utils'\nimport { genFileId } from './upload'\nimport type { ShallowRef } from 'vue'\nimport type {\n  UploadContentInstance,\n  UploadContentProps,\n} from './upload-content'\nimport type {\n  UploadFile,\n  UploadFiles,\n  UploadProps,\n  UploadRawFile,\n  UploadStatus,\n} from './upload'\n\nconst SCOPE = 'ElUpload'\n\nconst revokeFileObjectURL = (file: UploadFile) => {\n  if (file.url?.startsWith('blob:')) {\n    URL.revokeObjectURL(file.url)\n  }\n}\n\nexport const useHandlers = (\n  props: UploadProps,\n  uploadRef: ShallowRef<UploadContentInstance | undefined>\n) => {\n  const uploadFiles = useVModel(\n    props as Omit<UploadProps, 'fileList'> & { fileList: UploadFiles },\n    'fileList',\n    undefined,\n    { passive: true }\n  )\n\n  const getFile = (rawFile: UploadRawFile) =>\n    uploadFiles.value.find((file) => file.uid === rawFile.uid)\n\n  function abort(file: UploadFile) {\n    uploadRef.value?.abort(file)\n  }\n\n  function clearFiles(\n    /** @default ['ready', 'uploading', 'success', 'fail'] */\n    states: UploadStatus[] = ['ready', 'uploading', 'success', 'fail']\n  ) {\n    uploadFiles.value = uploadFiles.value.filter(\n      (row) => !states.includes(row.status)\n    )\n  }\n\n  const handleError: UploadContentProps['onError'] = (err, rawFile) => {\n    const file = getFile(rawFile)\n    if (!file) return\n\n    console.error(err)\n    file.status = 'fail'\n    uploadFiles.value.splice(uploadFiles.value.indexOf(file), 1)\n    props.onError(err, file, uploadFiles.value)\n    props.onChange(file, uploadFiles.value)\n  }\n\n  const handleProgress: UploadContentProps['onProgress'] = (evt, rawFile) => {\n    const file = getFile(rawFile)\n    if (!file) return\n\n    props.onProgress(evt, file, uploadFiles.value)\n    file.status = 'uploading'\n    file.percentage = Math.round(evt.percent)\n  }\n\n  const handleSuccess: UploadContentProps['onSuccess'] = (\n    response,\n    rawFile\n  ) => {\n    const file = getFile(rawFile)\n    if (!file) return\n\n    file.status = 'success'\n    file.response = response\n    props.onSuccess(response, file, uploadFiles.value)\n    props.onChange(file, uploadFiles.value)\n  }\n\n  const handleStart: UploadContentProps['onStart'] = (file) => {\n    if (isNil(file.uid)) file.uid = genFileId()\n    const uploadFile: UploadFile = {\n      name: file.name,\n      percentage: 0,\n      status: 'ready',\n      size: file.size,\n      raw: file,\n      uid: file.uid,\n    }\n    if (props.listType === 'picture-card' || props.listType === 'picture') {\n      try {\n        uploadFile.url = URL.createObjectURL(file)\n      } catch (err: unknown) {\n        debugWarn(SCOPE, (err as Error).message)\n        props.onError(err as Error, uploadFile, uploadFiles.value)\n      }\n    }\n    uploadFiles.value = [...uploadFiles.value, uploadFile]\n    props.onChange(uploadFile, uploadFiles.value)\n  }\n\n  const handleRemove: UploadContentProps['onRemove'] = async (\n    file\n  ): Promise<void> => {\n    const uploadFile = file instanceof File ? getFile(file) : file\n    if (!uploadFile) throwError(SCOPE, 'file to be removed not found')\n\n    const doRemove = (file: UploadFile) => {\n      abort(file)\n      const fileList = uploadFiles.value\n      fileList.splice(fileList.indexOf(file), 1)\n      props.onRemove(file, fileList)\n      revokeFileObjectURL(file)\n    }\n\n    if (props.beforeRemove) {\n      const before = await props.beforeRemove(uploadFile, uploadFiles.value)\n      if (before !== false) doRemove(uploadFile)\n    } else {\n      doRemove(uploadFile)\n    }\n  }\n\n  function submit() {\n    uploadFiles.value\n      .filter(({ status }) => status === 'ready')\n      .forEach(({ raw }) => raw && uploadRef.value?.upload(raw))\n  }\n\n  watch(\n    () => props.listType,\n    (val) => {\n      if (val !== 'picture-card' && val !== 'picture') {\n        return\n      }\n\n      uploadFiles.value = uploadFiles.value.map((file) => {\n        const { raw, url } = file\n        if (!url && raw) {\n          try {\n            file.url = URL.createObjectURL(raw)\n          } catch (err: unknown) {\n            props.onError(err as Error, file, uploadFiles.value)\n          }\n        }\n        return file\n      })\n    }\n  )\n\n  watch(\n    uploadFiles,\n    (files) => {\n      for (const file of files) {\n        file.uid ||= genFileId()\n        file.status ||= 'success'\n      }\n    },\n    { immediate: true, deep: true }\n  )\n\n  return {\n    /** @description two-way binding ref from props `fileList` */\n    uploadFiles,\n    abort,\n    clearFiles,\n    handleError,\n    handleProgress,\n    handleStart,\n    handleSuccess,\n    handleRemove,\n    submit,\n    revokeFileObjectURL,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}