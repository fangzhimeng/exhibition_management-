{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../../utils/index.js');\nvar shared = require('@vue/shared');\nvar style = require('../../../utils/dom/style.js');\nconst sumReducer = (sum2, num) => sum2 + num;\nconst sum = listLike => {\n  return shared.isArray(listLike) ? listLike.reduce(sumReducer, 0) : listLike;\n};\nconst tryCall = (fLike, params, defaultRet = {}) => {\n  return shared.isFunction(fLike) ? fLike(params) : fLike != null ? fLike : defaultRet;\n};\nconst enforceUnit = style$1 => {\n  ;\n  [\"width\", \"maxWidth\", \"minWidth\", \"height\"].forEach(key => {\n    style$1[key] = style.addUnit(style$1[key]);\n  });\n  return style$1;\n};\nconst componentToSlot = ComponentLike => vue.isVNode(ComponentLike) ? props => vue.h(ComponentLike, props) : ComponentLike;\nexports.componentToSlot = componentToSlot;\nexports.enforceUnit = enforceUnit;\nexports.sum = sum;\nexports.tryCall = tryCall;","map":{"version":3,"names":["sumReducer","sum2","num","sum","listLike","shared","isArray","reduce","tryCall","fLike","params","defaultRet","isFunction","enforceUnit","style$1","forEach","key","style","addUnit","componentToSlot","ComponentLike","vue","isVNode","props","h"],"sources":["../../../../../../packages/components/table-v2/src/utils.ts"],"sourcesContent":["import { h, isVNode } from 'vue'\nimport { addUnit, isArray, isFunction } from '@element-plus/utils'\n\nimport type { CSSProperties, Component, Slot } from 'vue'\n\nconst sumReducer = (sum: number, num: number) => sum + num\n\nexport const sum = (listLike: number | number[]) => {\n  return isArray(listLike) ? listLike.reduce(sumReducer, 0) : listLike\n}\n\nexport const tryCall = <T>(\n  fLike: T,\n  params: T extends (...args: infer K) => unknown ? K : any,\n  defaultRet = {}\n) => {\n  return isFunction(fLike) ? fLike(params) : fLike ?? defaultRet\n}\n\nexport const enforceUnit = (style: CSSProperties) => {\n  ;(['width', 'maxWidth', 'minWidth', 'height'] as const).forEach((key) => {\n    style[key] = addUnit(style[key])\n  })\n\n  return style\n}\n\nexport const componentToSlot = <T>(\n  ComponentLike: JSX.Element | ((props: T) => Component<T>) | undefined\n) =>\n  isVNode(ComponentLike)\n    ? (props: T) => h(ComponentLike, props)\n    : (ComponentLike as Slot)\n"],"mappings":";;;;;;;;;AAEA,MAAMA,UAAU,GAAGA,CAACC,IAAI,EAAEC,GAAG,KAAKD,IAAI,GAAGC,GAAG;AAChC,MAACC,GAAG,GAAIC,QAAQ,IAAK;EAC/B,OAAOC,MAAA,CAAAC,OAAO,CAACF,QAAQ,CAAC,GAAGA,QAAQ,CAACG,MAAM,CAACP,UAAU,EAAE,CAAC,CAAC,GAAGI,QAAQ;AACtE;AACY,MAACI,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,EAAEC,UAAU,GAAG,EAAE,KAAK;EACzD,OAAON,MAAA,CAAAO,UAAU,CAACH,KAAK,CAAC,GAAGA,KAAK,CAACC,MAAM,CAAC,GAAGD,KAAK,IAAI,IAAI,GAAGA,KAAK,GAAGE,UAAU;AAC/E;AACY,MAACE,WAAW,GAAIC,OAAK,IAAK;EACpC;EACA,CAAC,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,CAAC,CAACC,OAAO,CAAEC,GAAG,IAAK;IAC3DF,OAAK,CAACE,GAAG,CAAC,GAAGC,KAAA,CAAAC,OAAO,CAACJ,OAAK,CAACE,GAAG,CAAC,CAAC;EACpC,CAAG,CAAC;EACF,OAAOF,OAAK;AACd;AACY,MAACK,eAAe,GAAIC,aAAa,IAAKC,GAAA,CAAAC,OAAO,CAACF,aAAa,CAAC,GAAIG,KAAK,IAAKF,GAAA,CAAAG,CAAC,CAACJ,aAAa,EAAEG,KAAK,CAAC,GAAGH,aAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}