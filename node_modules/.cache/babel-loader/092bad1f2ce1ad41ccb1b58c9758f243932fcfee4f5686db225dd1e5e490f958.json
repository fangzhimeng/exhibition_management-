{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar lodashUnified = require('lodash-unified');\nvar en = require('../../locale/lang/en.js');\nconst buildTranslator = locale => (path, option) => translate(path, option, vue.unref(locale));\nconst translate = (path, option, locale) => lodashUnified.get(locale, path, path).replace(/\\{(\\w+)\\}/g, (_, key) => {\n  var _a;\n  return `${(_a = option == null ? void 0 : option[key]) != null ? _a : `{${key}}`}`;\n});\nconst buildLocaleContext = locale => {\n  const lang = vue.computed(() => vue.unref(locale).name);\n  const localeRef = vue.isRef(locale) ? locale : vue.ref(locale);\n  return {\n    lang,\n    locale: localeRef,\n    t: buildTranslator(locale)\n  };\n};\nconst localeContextKey = Symbol(\"localeContextKey\");\nconst useLocale = localeOverrides => {\n  const locale = localeOverrides || vue.inject(localeContextKey, vue.ref());\n  return buildLocaleContext(vue.computed(() => locale.value || en[\"default\"]));\n};\nexports.buildLocaleContext = buildLocaleContext;\nexports.buildTranslator = buildTranslator;\nexports.localeContextKey = localeContextKey;\nexports.translate = translate;\nexports.useLocale = useLocale;","map":{"version":3,"names":["buildTranslator","locale","path","option","translate","vue","unref","lodashUnified","get","replace","_","key","_a","buildLocaleContext","lang","computed","name","localeRef","isRef","ref","t","localeContextKey","Symbol","useLocale","localeOverrides","inject","value","en"],"sources":["../../../../../packages/hooks/use-locale/index.ts"],"sourcesContent":["import { computed, inject, isRef, ref, unref } from 'vue'\nimport { get } from 'lodash-unified'\nimport English from '@element-plus/locale/lang/en'\n\nimport type { MaybeRef } from '@vueuse/core'\nimport type { InjectionKey, Ref } from 'vue'\nimport type { Language } from '@element-plus/locale'\n\nexport type TranslatorOption = Record<string, string | number>\nexport type Translator = (path: string, option?: TranslatorOption) => string\nexport type LocaleContext = {\n  locale: Ref<Language>\n  lang: Ref<string>\n  t: Translator\n}\n\nexport const buildTranslator =\n  (locale: MaybeRef<Language>): Translator =>\n  (path, option) =>\n    translate(path, option, unref(locale))\n\nexport const translate = (\n  path: string,\n  option: undefined | TranslatorOption,\n  locale: Language\n): string =>\n  (get(locale, path, path) as string).replace(\n    /\\{(\\w+)\\}/g,\n    (_, key) => `${option?.[key] ?? `{${key}}`}`\n  )\n\nexport const buildLocaleContext = (\n  locale: MaybeRef<Language>\n): LocaleContext => {\n  const lang = computed(() => unref(locale).name)\n  const localeRef = isRef(locale) ? locale : ref(locale)\n  return {\n    lang,\n    locale: localeRef,\n    t: buildTranslator(locale),\n  }\n}\n\nexport const localeContextKey: InjectionKey<Ref<Language | undefined>> =\n  Symbol('localeContextKey')\n\nexport const useLocale = (localeOverrides?: Ref<Language | undefined>) => {\n  const locale = localeOverrides || inject(localeContextKey, ref())!\n  return buildLocaleContext(computed(() => locale.value || English))\n}\n"],"mappings":";;;;;;;;AAGY,MAACA,eAAe,GAAIC,MAAM,IAAK,CAACC,IAAI,EAAEC,MAAM,KAAKC,SAAS,CAACF,IAAI,EAAEC,MAAM,EAAEE,GAAA,CAAAC,KAAK,CAACL,MAAM,CAAC;AACtF,MAACG,SAAS,GAAGA,CAACF,IAAI,EAAEC,MAAM,EAAEF,MAAM,KAAKM,aAAA,CAAAC,GAAG,CAACP,MAAM,EAAEC,IAAI,EAAEA,IAAI,CAAC,CAACO,OAAO,CAAC,YAAY,EAAE,CAACC,CAAC,EAAEC,GAAG,KAAK;EAC3G,IAAIC,EAAE;EACN,OAAQ,GAAE,CAACA,EAAE,GAAGT,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACQ,GAAG,CAAC,KAAK,IAAI,GAAGC,EAAE,GAAI,IAAGD,GAAI,GAAG,EAAC;AACpF,CAAC;AACW,MAACE,kBAAkB,GAAIZ,MAAM,IAAK;EAC5C,MAAMa,IAAI,GAAGT,GAAA,CAAAU,QAAQ,CAAC,MAAMV,GAAA,CAAAC,KAAK,CAACL,MAAM,CAAC,CAACe,IAAI,CAAC;EAC/C,MAAMC,SAAS,GAAGZ,GAAA,CAAAa,KAAK,CAACjB,MAAM,CAAC,GAAGA,MAAM,GAAGI,GAAA,CAAAc,GAAG,CAAClB,MAAM,CAAC;EACtD,OAAO;IACLa,IAAI;IACJb,MAAM,EAAEgB,SAAS;IACjBG,CAAC,EAAEpB,eAAe,CAACC,MAAM;EAC7B,CAAG;AACH;AACY,MAACoB,gBAAgB,GAAGC,MAAM,CAAC,kBAAkB;AAC7C,MAACC,SAAS,GAAIC,eAAe,IAAK;EAC5C,MAAMvB,MAAM,GAAGuB,eAAe,IAAInB,GAAA,CAAAoB,MAAM,CAACJ,gBAAgB,EAAEhB,GAAA,CAAAc,GAAG,EAAE,CAAC;EACjE,OAAON,kBAAkB,CAACR,GAAA,CAAAU,QAAQ,CAAC,MAAMd,MAAM,CAACyB,KAAK,IAAIC,EAAA,WAAO,CAAC,CAAC;AACpE"},"metadata":{},"sourceType":"script","externalDependencies":[]}