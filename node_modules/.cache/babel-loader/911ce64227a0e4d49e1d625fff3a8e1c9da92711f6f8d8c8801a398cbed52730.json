{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar shared = require('@vue/shared');\nrequire('../../../utils/index.js');\nvar index$2 = require('../../icon/index.js');\nrequire('../../form/index.js');\nvar iconsVue = require('@element-plus/icons-vue');\nrequire('../../../constants/index.js');\nrequire('../../../hooks/index.js');\nvar _switch = require('./switch.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar useFormItem = require('../../form/src/hooks/use-form-item.js');\nvar useFormCommonProps = require('../../form/src/hooks/use-form-common-props.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar index$1 = require('../../../hooks/use-deprecated/index.js');\nvar style = require('../../../utils/dom/style.js');\nvar event = require('../../../constants/event.js');\nvar error = require('../../../utils/error.js');\nvar types = require('../../../utils/types.js');\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = [\"id\", \"aria-checked\", \"aria-disabled\", \"aria-label\", \"name\", \"true-value\", \"false-value\", \"disabled\", \"tabindex\", \"onKeydown\"];\nconst _hoisted_3 = [\"aria-hidden\"];\nconst _hoisted_4 = [\"aria-hidden\"];\nconst _hoisted_5 = [\"aria-hidden\"];\nconst COMPONENT_NAME = \"ElSwitch\";\nconst __default__ = vue.defineComponent({\n  name: COMPONENT_NAME\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: _switch.switchProps,\n  emits: _switch.switchEmits,\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    const props = __props;\n    const vm = vue.getCurrentInstance();\n    const {\n      formItem\n    } = useFormItem.useFormItem();\n    const switchSize = useFormCommonProps.useFormSize();\n    const ns = index.useNamespace(\"switch\");\n    const useBatchDeprecated = list => {\n      list.forEach(param => {\n        index$1.useDeprecated({\n          from: param[0],\n          replacement: param[1],\n          scope: COMPONENT_NAME,\n          version: \"2.3.0\",\n          ref: \"https://element-plus.org/en-US/component/switch.html#attributes\",\n          type: \"Attribute\"\n        }, vue.computed(() => {\n          var _a;\n          return !!((_a = vm.vnode.props) == null ? void 0 : _a[param[2]]);\n        }));\n      });\n    };\n    useBatchDeprecated([['\"value\"', '\"model-value\" or \"v-model\"', \"value\"], ['\"active-color\"', \"CSS var `--el-switch-on-color`\", \"activeColor\"], ['\"inactive-color\"', \"CSS var `--el-switch-off-color`\", \"inactiveColor\"], ['\"border-color\"', \"CSS var `--el-switch-border-color`\", \"borderColor\"]]);\n    const {\n      inputId\n    } = useFormItem.useFormItemInputId(props, {\n      formItemContext: formItem\n    });\n    const switchDisabled = useFormCommonProps.useFormDisabled(vue.computed(() => props.loading));\n    const isControlled = vue.ref(props.modelValue !== false);\n    const input = vue.ref();\n    const core = vue.ref();\n    const switchKls = vue.computed(() => [ns.b(), ns.m(switchSize.value), ns.is(\"disabled\", switchDisabled.value), ns.is(\"checked\", checked.value)]);\n    const labelLeftKls = vue.computed(() => [ns.e(\"label\"), ns.em(\"label\", \"left\"), ns.is(\"active\", !checked.value)]);\n    const labelRightKls = vue.computed(() => [ns.e(\"label\"), ns.em(\"label\", \"right\"), ns.is(\"active\", checked.value)]);\n    const coreStyle = vue.computed(() => ({\n      width: style.addUnit(props.width)\n    }));\n    vue.watch(() => props.modelValue, () => {\n      isControlled.value = true;\n    });\n    vue.watch(() => props.value, () => {\n      isControlled.value = false;\n    });\n    const actualValue = vue.computed(() => {\n      return isControlled.value ? props.modelValue : props.value;\n    });\n    const checked = vue.computed(() => actualValue.value === props.activeValue);\n    if (![props.activeValue, props.inactiveValue].includes(actualValue.value)) {\n      emit(event.UPDATE_MODEL_EVENT, props.inactiveValue);\n      emit(event.CHANGE_EVENT, props.inactiveValue);\n      emit(event.INPUT_EVENT, props.inactiveValue);\n    }\n    vue.watch(checked, val => {\n      var _a;\n      input.value.checked = val;\n      if (props.validateEvent) {\n        (_a = formItem == null ? void 0 : formItem.validate) == null ? void 0 : _a.call(formItem, \"change\").catch(err => error.debugWarn(err));\n      }\n    });\n    const handleChange = () => {\n      const val = checked.value ? props.inactiveValue : props.activeValue;\n      emit(event.UPDATE_MODEL_EVENT, val);\n      emit(event.CHANGE_EVENT, val);\n      emit(event.INPUT_EVENT, val);\n      vue.nextTick(() => {\n        input.value.checked = checked.value;\n      });\n    };\n    const switchValue = () => {\n      if (switchDisabled.value) return;\n      const {\n        beforeChange\n      } = props;\n      if (!beforeChange) {\n        handleChange();\n        return;\n      }\n      const shouldChange = beforeChange();\n      const isPromiseOrBool = [shared.isPromise(shouldChange), types.isBoolean(shouldChange)].includes(true);\n      if (!isPromiseOrBool) {\n        error.throwError(COMPONENT_NAME, \"beforeChange must return type `Promise<boolean>` or `boolean`\");\n      }\n      if (shared.isPromise(shouldChange)) {\n        shouldChange.then(result => {\n          if (result) {\n            handleChange();\n          }\n        }).catch(e => {\n          error.debugWarn(COMPONENT_NAME, `some error occurred: ${e}`);\n        });\n      } else if (shouldChange) {\n        handleChange();\n      }\n    };\n    const styles = vue.computed(() => {\n      return ns.cssVarBlock({\n        ...(props.activeColor ? {\n          \"on-color\": props.activeColor\n        } : null),\n        ...(props.inactiveColor ? {\n          \"off-color\": props.inactiveColor\n        } : null),\n        ...(props.borderColor ? {\n          \"border-color\": props.borderColor\n        } : null)\n      });\n    });\n    const focus = () => {\n      var _a, _b;\n      (_b = (_a = input.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);\n    };\n    vue.onMounted(() => {\n      input.value.checked = checked.value;\n    });\n    expose({\n      focus,\n      checked\n    });\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createElementBlock(\"div\", {\n        class: vue.normalizeClass(vue.unref(switchKls)),\n        style: vue.normalizeStyle(vue.unref(styles)),\n        onClick: vue.withModifiers(switchValue, [\"prevent\"])\n      }, [vue.createElementVNode(\"input\", {\n        id: vue.unref(inputId),\n        ref_key: \"input\",\n        ref: input,\n        class: vue.normalizeClass(vue.unref(ns).e(\"input\")),\n        type: \"checkbox\",\n        role: \"switch\",\n        \"aria-checked\": vue.unref(checked),\n        \"aria-disabled\": vue.unref(switchDisabled),\n        \"aria-label\": _ctx.label,\n        name: _ctx.name,\n        \"true-value\": _ctx.activeValue,\n        \"false-value\": _ctx.inactiveValue,\n        disabled: vue.unref(switchDisabled),\n        tabindex: _ctx.tabindex,\n        onChange: handleChange,\n        onKeydown: vue.withKeys(switchValue, [\"enter\"])\n      }, null, 42, _hoisted_2), !_ctx.inlinePrompt && (_ctx.inactiveIcon || _ctx.inactiveText) ? (vue.openBlock(), vue.createElementBlock(\"span\", {\n        key: 0,\n        class: vue.normalizeClass(vue.unref(labelLeftKls))\n      }, [_ctx.inactiveIcon ? (vue.openBlock(), vue.createBlock(vue.unref(index$2.ElIcon), {\n        key: 0\n      }, {\n        default: vue.withCtx(() => [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.inactiveIcon)))]),\n        _: 1\n      })) : vue.createCommentVNode(\"v-if\", true), !_ctx.inactiveIcon && _ctx.inactiveText ? (vue.openBlock(), vue.createElementBlock(\"span\", {\n        key: 1,\n        \"aria-hidden\": vue.unref(checked)\n      }, vue.toDisplayString(_ctx.inactiveText), 9, _hoisted_3)) : vue.createCommentVNode(\"v-if\", true)], 2)) : vue.createCommentVNode(\"v-if\", true), vue.createElementVNode(\"span\", {\n        ref_key: \"core\",\n        ref: core,\n        class: vue.normalizeClass(vue.unref(ns).e(\"core\")),\n        style: vue.normalizeStyle(vue.unref(coreStyle))\n      }, [_ctx.inlinePrompt ? (vue.openBlock(), vue.createElementBlock(\"div\", {\n        key: 0,\n        class: vue.normalizeClass(vue.unref(ns).e(\"inner\"))\n      }, [_ctx.activeIcon || _ctx.inactiveIcon ? (vue.openBlock(), vue.createBlock(vue.unref(index$2.ElIcon), {\n        key: 0,\n        class: vue.normalizeClass(vue.unref(ns).is(\"icon\"))\n      }, {\n        default: vue.withCtx(() => [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(vue.unref(checked) ? _ctx.activeIcon : _ctx.inactiveIcon)))]),\n        _: 1\n      }, 8, [\"class\"])) : _ctx.activeText || _ctx.inactiveText ? (vue.openBlock(), vue.createElementBlock(\"span\", {\n        key: 1,\n        class: vue.normalizeClass(vue.unref(ns).is(\"text\")),\n        \"aria-hidden\": !vue.unref(checked)\n      }, vue.toDisplayString(vue.unref(checked) ? _ctx.activeText : _ctx.inactiveText), 11, _hoisted_4)) : vue.createCommentVNode(\"v-if\", true)], 2)) : vue.createCommentVNode(\"v-if\", true), vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(ns).e(\"action\"))\n      }, [_ctx.loading ? (vue.openBlock(), vue.createBlock(vue.unref(index$2.ElIcon), {\n        key: 0,\n        class: vue.normalizeClass(vue.unref(ns).is(\"loading\"))\n      }, {\n        default: vue.withCtx(() => [vue.createVNode(vue.unref(iconsVue.Loading))]),\n        _: 1\n      }, 8, [\"class\"])) : _ctx.activeActionIcon && vue.unref(checked) ? (vue.openBlock(), vue.createBlock(vue.unref(index$2.ElIcon), {\n        key: 1\n      }, {\n        default: vue.withCtx(() => [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.activeActionIcon)))]),\n        _: 1\n      })) : _ctx.inactiveActionIcon && !vue.unref(checked) ? (vue.openBlock(), vue.createBlock(vue.unref(index$2.ElIcon), {\n        key: 2\n      }, {\n        default: vue.withCtx(() => [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.inactiveActionIcon)))]),\n        _: 1\n      })) : vue.createCommentVNode(\"v-if\", true)], 2)], 6), !_ctx.inlinePrompt && (_ctx.activeIcon || _ctx.activeText) ? (vue.openBlock(), vue.createElementBlock(\"span\", {\n        key: 1,\n        class: vue.normalizeClass(vue.unref(labelRightKls))\n      }, [_ctx.activeIcon ? (vue.openBlock(), vue.createBlock(vue.unref(index$2.ElIcon), {\n        key: 0\n      }, {\n        default: vue.withCtx(() => [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.activeIcon)))]),\n        _: 1\n      })) : vue.createCommentVNode(\"v-if\", true), !_ctx.activeIcon && _ctx.activeText ? (vue.openBlock(), vue.createElementBlock(\"span\", {\n        key: 1,\n        \"aria-hidden\": !vue.unref(checked)\n      }, vue.toDisplayString(_ctx.activeText), 9, _hoisted_5)) : vue.createCommentVNode(\"v-if\", true)], 2)) : vue.createCommentVNode(\"v-if\", true)], 14, _hoisted_1);\n    };\n  }\n});\nvar Switch = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/switch/src/switch.vue\"]]);\nexports[\"default\"] = Switch;","map":{"version":3,"names":["name","COMPONENT_NAME","vm","vue","getCurrentInstance","formItem","useFormItem","switchSize","useFormCommonProps","useFormSize","ns","index","useNamespace","useBatchDeprecated","list","forEach","param","index$1","useDeprecated","from","replacement","scope","version","ref","type","computed","_a","vnode","props","inputId","useFormItemInputId","formItemContext","switchDisabled","useFormDisabled","loading","isControlled","modelValue","input","core","switchKls","b","m","value","is","checked","labelLeftKls","e","em","labelRightKls","coreStyle","width","style","addUnit","watch","actualValue","activeValue","inactiveValue","includes","emit","event","UPDATE_MODEL_EVENT","CHANGE_EVENT","INPUT_EVENT","val","validateEvent","validate","call","catch","err","error","debugWarn","handleChange","nextTick","switchValue","beforeChange","shouldChange","isPromiseOrBool","shared","isPromise","types","isBoolean","throwError","then","result","styles","cssVarBlock","activeColor","inactiveColor","borderColor","focus","_b","onMounted"],"sources":["../../../../../../packages/components/switch/src/switch.vue"],"sourcesContent":["<template>\n  <div :class=\"switchKls\" :style=\"styles\" @click.prevent=\"switchValue\">\n    <input\n      :id=\"inputId\"\n      ref=\"input\"\n      :class=\"ns.e('input')\"\n      type=\"checkbox\"\n      role=\"switch\"\n      :aria-checked=\"checked\"\n      :aria-disabled=\"switchDisabled\"\n      :aria-label=\"label\"\n      :name=\"name\"\n      :true-value=\"activeValue\"\n      :false-value=\"inactiveValue\"\n      :disabled=\"switchDisabled\"\n      :tabindex=\"tabindex\"\n      @change=\"handleChange\"\n      @keydown.enter=\"switchValue\"\n    />\n    <span\n      v-if=\"!inlinePrompt && (inactiveIcon || inactiveText)\"\n      :class=\"labelLeftKls\"\n    >\n      <el-icon v-if=\"inactiveIcon\">\n        <component :is=\"inactiveIcon\" />\n      </el-icon>\n      <span v-if=\"!inactiveIcon && inactiveText\" :aria-hidden=\"checked\">{{\n        inactiveText\n      }}</span>\n    </span>\n    <span ref=\"core\" :class=\"ns.e('core')\" :style=\"coreStyle\">\n      <div v-if=\"inlinePrompt\" :class=\"ns.e('inner')\">\n        <template v-if=\"activeIcon || inactiveIcon\">\n          <el-icon :class=\"ns.is('icon')\">\n            <component :is=\"checked ? activeIcon : inactiveIcon\" />\n          </el-icon>\n        </template>\n        <template v-else-if=\"activeText || inactiveText\">\n          <span :class=\"ns.is('text')\" :aria-hidden=\"!checked\">\n            {{ checked ? activeText : inactiveText }}\n          </span>\n        </template>\n      </div>\n      <div :class=\"ns.e('action')\">\n        <el-icon v-if=\"loading\" :class=\"ns.is('loading')\">\n          <loading />\n        </el-icon>\n        <el-icon v-else-if=\"activeActionIcon && checked\">\n          <component :is=\"activeActionIcon\" />\n        </el-icon>\n        <el-icon v-else-if=\"inactiveActionIcon && !checked\">\n          <component :is=\"inactiveActionIcon\" />\n        </el-icon>\n      </div>\n    </span>\n    <span\n      v-if=\"!inlinePrompt && (activeIcon || activeText)\"\n      :class=\"labelRightKls\"\n    >\n      <el-icon v-if=\"activeIcon\">\n        <component :is=\"activeIcon\" />\n      </el-icon>\n      <span v-if=\"!activeIcon && activeText\" :aria-hidden=\"!checked\">{{\n        activeText\n      }}</span>\n    </span>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  getCurrentInstance,\n  nextTick,\n  onMounted,\n  ref,\n  watch,\n} from 'vue'\nimport { isPromise } from '@vue/shared'\nimport { addUnit, debugWarn, isBoolean, throwError } from '@element-plus/utils'\nimport ElIcon from '@element-plus/components/icon'\nimport {\n  useFormDisabled,\n  useFormItem,\n  useFormItemInputId,\n  useFormSize,\n} from '@element-plus/components/form'\nimport { Loading } from '@element-plus/icons-vue'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { useDeprecated, useNamespace } from '@element-plus/hooks'\nimport { switchEmits, switchProps } from './switch'\nimport type { CSSProperties } from 'vue'\n\nconst COMPONENT_NAME = 'ElSwitch'\ndefineOptions({\n  name: COMPONENT_NAME,\n})\n\nconst props = defineProps(switchProps)\nconst emit = defineEmits(switchEmits)\n\nconst vm = getCurrentInstance()!\nconst { formItem } = useFormItem()\nconst switchSize = useFormSize()\nconst ns = useNamespace('switch')\n\nconst useBatchDeprecated = (list: string[][]) => {\n  list.forEach((param) => {\n    useDeprecated(\n      {\n        from: param[0],\n        replacement: param[1],\n        scope: COMPONENT_NAME,\n        version: '2.3.0',\n        ref: 'https://element-plus.org/en-US/component/switch.html#attributes',\n        type: 'Attribute',\n      },\n      computed(() => !!vm.vnode.props?.[param[2]])\n    )\n  })\n}\nuseBatchDeprecated([\n  ['\"value\"', '\"model-value\" or \"v-model\"', 'value'],\n  ['\"active-color\"', 'CSS var `--el-switch-on-color`', 'activeColor'],\n  ['\"inactive-color\"', 'CSS var `--el-switch-off-color`', 'inactiveColor'],\n  ['\"border-color\"', 'CSS var `--el-switch-border-color`', 'borderColor'],\n])\n\nconst { inputId } = useFormItemInputId(props, {\n  formItemContext: formItem,\n})\n\nconst switchDisabled = useFormDisabled(computed(() => props.loading))\nconst isControlled = ref(props.modelValue !== false)\nconst input = ref<HTMLInputElement>()\nconst core = ref<HTMLSpanElement>()\n\nconst switchKls = computed(() => [\n  ns.b(),\n  ns.m(switchSize.value),\n  ns.is('disabled', switchDisabled.value),\n  ns.is('checked', checked.value),\n])\n\nconst labelLeftKls = computed(() => [\n  ns.e('label'),\n  ns.em('label', 'left'),\n  ns.is('active', !checked.value),\n])\n\nconst labelRightKls = computed(() => [\n  ns.e('label'),\n  ns.em('label', 'right'),\n  ns.is('active', checked.value),\n])\n\nconst coreStyle = computed<CSSProperties>(() => ({\n  width: addUnit(props.width),\n}))\n\nwatch(\n  () => props.modelValue,\n  () => {\n    isControlled.value = true\n  }\n)\n\nwatch(\n  () => props.value,\n  () => {\n    isControlled.value = false\n  }\n)\n\nconst actualValue = computed(() => {\n  return isControlled.value ? props.modelValue : props.value\n})\n\nconst checked = computed(() => actualValue.value === props.activeValue)\n\nif (![props.activeValue, props.inactiveValue].includes(actualValue.value)) {\n  emit(UPDATE_MODEL_EVENT, props.inactiveValue)\n  emit(CHANGE_EVENT, props.inactiveValue)\n  emit(INPUT_EVENT, props.inactiveValue)\n}\n\nwatch(checked, (val) => {\n  input.value!.checked = val\n\n  if (props.validateEvent) {\n    formItem?.validate?.('change').catch((err) => debugWarn(err))\n  }\n})\n\nconst handleChange = () => {\n  const val = checked.value ? props.inactiveValue : props.activeValue\n  emit(UPDATE_MODEL_EVENT, val)\n  emit(CHANGE_EVENT, val)\n  emit(INPUT_EVENT, val)\n  nextTick(() => {\n    input.value!.checked = checked.value\n  })\n}\n\nconst switchValue = () => {\n  if (switchDisabled.value) return\n\n  const { beforeChange } = props\n  if (!beforeChange) {\n    handleChange()\n    return\n  }\n\n  const shouldChange = beforeChange()\n\n  const isPromiseOrBool = [\n    isPromise(shouldChange),\n    isBoolean(shouldChange),\n  ].includes(true)\n  if (!isPromiseOrBool) {\n    throwError(\n      COMPONENT_NAME,\n      'beforeChange must return type `Promise<boolean>` or `boolean`'\n    )\n  }\n\n  if (isPromise(shouldChange)) {\n    shouldChange\n      .then((result) => {\n        if (result) {\n          handleChange()\n        }\n      })\n      .catch((e) => {\n        debugWarn(COMPONENT_NAME, `some error occurred: ${e}`)\n      })\n  } else if (shouldChange) {\n    handleChange()\n  }\n}\n\nconst styles = computed(() => {\n  return ns.cssVarBlock({\n    ...(props.activeColor ? { 'on-color': props.activeColor } : null),\n    ...(props.inactiveColor ? { 'off-color': props.inactiveColor } : null),\n    ...(props.borderColor ? { 'border-color': props.borderColor } : null),\n  })\n})\n\nconst focus = (): void => {\n  input.value?.focus?.()\n}\n\nonMounted(() => {\n  input.value!.checked = checked.value\n})\n\ndefineExpose({\n  /**\n   *  @description manual focus to the switch component\n   **/\n  focus,\n  /**\n   * @description whether Switch is checked\n   */\n  checked,\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}