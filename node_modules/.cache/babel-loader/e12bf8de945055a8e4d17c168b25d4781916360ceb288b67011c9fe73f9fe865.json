{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar core = require('@vueuse/core');\nvar lodashUnified = require('lodash-unified');\nrequire('../../../hooks/index.js');\nrequire('../../../constants/index.js');\nrequire('../../../utils/index.js');\nvar index$3 = require('../../icon/index.js');\nvar iconsVue = require('@element-plus/icons-vue');\nvar imageViewer = require('./image-viewer.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-locale/index.js');\nvar index$1 = require('../../../hooks/use-namespace/index.js');\nvar index$2 = require('../../../hooks/use-z-index/index.js');\nvar types = require('../../../utils/types.js');\nvar aria = require('../../../constants/aria.js');\nvar objects = require('../../../utils/objects.js');\nconst _hoisted_1 = [\"src\"];\nconst __default__ = vue.defineComponent({\n  name: \"ElImageViewer\"\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: imageViewer.imageViewerProps,\n  emits: imageViewer.imageViewerEmits,\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    const props = __props;\n    const modes = {\n      CONTAIN: {\n        name: \"contain\",\n        icon: vue.markRaw(iconsVue.FullScreen)\n      },\n      ORIGINAL: {\n        name: \"original\",\n        icon: vue.markRaw(iconsVue.ScaleToOriginal)\n      }\n    };\n    const {\n      t\n    } = index.useLocale();\n    const ns = index$1.useNamespace(\"image-viewer\");\n    const {\n      nextZIndex\n    } = index$2.useZIndex();\n    const wrapper = vue.ref();\n    const imgRefs = vue.ref([]);\n    const scopeEventListener = vue.effectScope();\n    const loading = vue.ref(true);\n    const activeIndex = vue.ref(props.initialIndex);\n    const mode = vue.shallowRef(modes.CONTAIN);\n    const transform = vue.ref({\n      scale: 1,\n      deg: 0,\n      offsetX: 0,\n      offsetY: 0,\n      enableTransition: false\n    });\n    const isSingle = vue.computed(() => {\n      const {\n        urlList\n      } = props;\n      return urlList.length <= 1;\n    });\n    const isFirst = vue.computed(() => {\n      return activeIndex.value === 0;\n    });\n    const isLast = vue.computed(() => {\n      return activeIndex.value === props.urlList.length - 1;\n    });\n    const currentImg = vue.computed(() => {\n      return props.urlList[activeIndex.value];\n    });\n    const arrowPrevKls = vue.computed(() => [ns.e(\"btn\"), ns.e(\"prev\"), ns.is(\"disabled\", !props.infinite && isFirst.value)]);\n    const arrowNextKls = vue.computed(() => [ns.e(\"btn\"), ns.e(\"next\"), ns.is(\"disabled\", !props.infinite && isLast.value)]);\n    const imgStyle = vue.computed(() => {\n      const {\n        scale,\n        deg,\n        offsetX,\n        offsetY,\n        enableTransition\n      } = transform.value;\n      let translateX = offsetX / scale;\n      let translateY = offsetY / scale;\n      switch (deg % 360) {\n        case 90:\n        case -270:\n          ;\n          [translateX, translateY] = [translateY, -translateX];\n          break;\n        case 180:\n        case -180:\n          ;\n          [translateX, translateY] = [-translateX, -translateY];\n          break;\n        case 270:\n        case -90:\n          ;\n          [translateX, translateY] = [-translateY, translateX];\n          break;\n      }\n      const style = {\n        transform: `scale(${scale}) rotate(${deg}deg) translate(${translateX}px, ${translateY}px)`,\n        transition: enableTransition ? \"transform .3s\" : \"\"\n      };\n      if (mode.value.name === modes.CONTAIN.name) {\n        style.maxWidth = style.maxHeight = \"100%\";\n      }\n      return style;\n    });\n    const computedZIndex = vue.computed(() => {\n      return types.isNumber(props.zIndex) ? props.zIndex : nextZIndex();\n    });\n    function hide() {\n      unregisterEventListener();\n      emit(\"close\");\n    }\n    function registerEventListener() {\n      const keydownHandler = lodashUnified.throttle(e => {\n        switch (e.code) {\n          case aria.EVENT_CODE.esc:\n            props.closeOnPressEscape && hide();\n            break;\n          case aria.EVENT_CODE.space:\n            toggleMode();\n            break;\n          case aria.EVENT_CODE.left:\n            prev();\n            break;\n          case aria.EVENT_CODE.up:\n            handleActions(\"zoomIn\");\n            break;\n          case aria.EVENT_CODE.right:\n            next();\n            break;\n          case aria.EVENT_CODE.down:\n            handleActions(\"zoomOut\");\n            break;\n        }\n      });\n      const mousewheelHandler = lodashUnified.throttle(e => {\n        const delta = e.deltaY || e.deltaX;\n        handleActions(delta < 0 ? \"zoomIn\" : \"zoomOut\", {\n          zoomRate: props.zoomRate,\n          enableTransition: false\n        });\n      });\n      scopeEventListener.run(() => {\n        core.useEventListener(document, \"keydown\", keydownHandler);\n        core.useEventListener(document, \"wheel\", mousewheelHandler);\n      });\n    }\n    function unregisterEventListener() {\n      scopeEventListener.stop();\n    }\n    function handleImgLoad() {\n      loading.value = false;\n    }\n    function handleImgError(e) {\n      loading.value = false;\n      e.target.alt = t(\"el.image.error\");\n    }\n    function handleMouseDown(e) {\n      if (loading.value || e.button !== 0 || !wrapper.value) return;\n      transform.value.enableTransition = false;\n      const {\n        offsetX,\n        offsetY\n      } = transform.value;\n      const startX = e.pageX;\n      const startY = e.pageY;\n      const dragHandler = lodashUnified.throttle(ev => {\n        transform.value = {\n          ...transform.value,\n          offsetX: offsetX + ev.pageX - startX,\n          offsetY: offsetY + ev.pageY - startY\n        };\n      });\n      const removeMousemove = core.useEventListener(document, \"mousemove\", dragHandler);\n      core.useEventListener(document, \"mouseup\", () => {\n        removeMousemove();\n      });\n      e.preventDefault();\n    }\n    function reset() {\n      transform.value = {\n        scale: 1,\n        deg: 0,\n        offsetX: 0,\n        offsetY: 0,\n        enableTransition: false\n      };\n    }\n    function toggleMode() {\n      if (loading.value) return;\n      const modeNames = objects.keysOf(modes);\n      const modeValues = Object.values(modes);\n      const currentMode = mode.value.name;\n      const index = modeValues.findIndex(i => i.name === currentMode);\n      const nextIndex = (index + 1) % modeNames.length;\n      mode.value = modes[modeNames[nextIndex]];\n      reset();\n    }\n    function setActiveItem(index) {\n      const len = props.urlList.length;\n      activeIndex.value = (index + len) % len;\n    }\n    function prev() {\n      if (isFirst.value && !props.infinite) return;\n      setActiveItem(activeIndex.value - 1);\n    }\n    function next() {\n      if (isLast.value && !props.infinite) return;\n      setActiveItem(activeIndex.value + 1);\n    }\n    function handleActions(action, options = {}) {\n      if (loading.value) return;\n      const {\n        minScale,\n        maxScale\n      } = props;\n      const {\n        zoomRate,\n        rotateDeg,\n        enableTransition\n      } = {\n        zoomRate: props.zoomRate,\n        rotateDeg: 90,\n        enableTransition: true,\n        ...options\n      };\n      switch (action) {\n        case \"zoomOut\":\n          if (transform.value.scale > minScale) {\n            transform.value.scale = Number.parseFloat((transform.value.scale / zoomRate).toFixed(3));\n          }\n          break;\n        case \"zoomIn\":\n          if (transform.value.scale < maxScale) {\n            transform.value.scale = Number.parseFloat((transform.value.scale * zoomRate).toFixed(3));\n          }\n          break;\n        case \"clockwise\":\n          transform.value.deg += rotateDeg;\n          emit(\"rotate\", transform.value.deg);\n          break;\n        case \"anticlockwise\":\n          transform.value.deg -= rotateDeg;\n          emit(\"rotate\", transform.value.deg);\n          break;\n      }\n      transform.value.enableTransition = enableTransition;\n    }\n    vue.watch(currentImg, () => {\n      vue.nextTick(() => {\n        const $img = imgRefs.value[0];\n        if (!($img == null ? void 0 : $img.complete)) {\n          loading.value = true;\n        }\n      });\n    });\n    vue.watch(activeIndex, val => {\n      reset();\n      emit(\"switch\", val);\n    });\n    vue.onMounted(() => {\n      var _a, _b;\n      registerEventListener();\n      (_b = (_a = wrapper.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);\n    });\n    expose({\n      setActiveItem\n    });\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createBlock(vue.Teleport, {\n        to: \"body\",\n        disabled: !_ctx.teleported\n      }, [vue.createVNode(vue.Transition, {\n        name: \"viewer-fade\",\n        appear: \"\"\n      }, {\n        default: vue.withCtx(() => [vue.createElementVNode(\"div\", {\n          ref_key: \"wrapper\",\n          ref: wrapper,\n          tabindex: -1,\n          class: vue.normalizeClass(vue.unref(ns).e(\"wrapper\")),\n          style: vue.normalizeStyle({\n            zIndex: vue.unref(computedZIndex)\n          })\n        }, [vue.createElementVNode(\"div\", {\n          class: vue.normalizeClass(vue.unref(ns).e(\"mask\")),\n          onClick: _cache[0] || (_cache[0] = vue.withModifiers($event => _ctx.hideOnClickModal && hide(), [\"self\"]))\n        }, null, 2), vue.createCommentVNode(\" CLOSE \"), vue.createElementVNode(\"span\", {\n          class: vue.normalizeClass([vue.unref(ns).e(\"btn\"), vue.unref(ns).e(\"close\")]),\n          onClick: hide\n        }, [vue.createVNode(vue.unref(index$3.ElIcon), null, {\n          default: vue.withCtx(() => [vue.createVNode(vue.unref(iconsVue.Close))]),\n          _: 1\n        })], 2), vue.createCommentVNode(\" ARROW \"), !vue.unref(isSingle) ? (vue.openBlock(), vue.createElementBlock(vue.Fragment, {\n          key: 0\n        }, [vue.createElementVNode(\"span\", {\n          class: vue.normalizeClass(vue.unref(arrowPrevKls)),\n          onClick: prev\n        }, [vue.createVNode(vue.unref(index$3.ElIcon), null, {\n          default: vue.withCtx(() => [vue.createVNode(vue.unref(iconsVue.ArrowLeft))]),\n          _: 1\n        })], 2), vue.createElementVNode(\"span\", {\n          class: vue.normalizeClass(vue.unref(arrowNextKls)),\n          onClick: next\n        }, [vue.createVNode(vue.unref(index$3.ElIcon), null, {\n          default: vue.withCtx(() => [vue.createVNode(vue.unref(iconsVue.ArrowRight))]),\n          _: 1\n        })], 2)], 64)) : vue.createCommentVNode(\"v-if\", true), vue.createCommentVNode(\" ACTIONS \"), vue.createElementVNode(\"div\", {\n          class: vue.normalizeClass([vue.unref(ns).e(\"btn\"), vue.unref(ns).e(\"actions\")])\n        }, [vue.createElementVNode(\"div\", {\n          class: vue.normalizeClass(vue.unref(ns).e(\"actions__inner\"))\n        }, [vue.createVNode(vue.unref(index$3.ElIcon), {\n          onClick: _cache[1] || (_cache[1] = $event => handleActions(\"zoomOut\"))\n        }, {\n          default: vue.withCtx(() => [vue.createVNode(vue.unref(iconsVue.ZoomOut))]),\n          _: 1\n        }), vue.createVNode(vue.unref(index$3.ElIcon), {\n          onClick: _cache[2] || (_cache[2] = $event => handleActions(\"zoomIn\"))\n        }, {\n          default: vue.withCtx(() => [vue.createVNode(vue.unref(iconsVue.ZoomIn))]),\n          _: 1\n        }), vue.createElementVNode(\"i\", {\n          class: vue.normalizeClass(vue.unref(ns).e(\"actions__divider\"))\n        }, null, 2), vue.createVNode(vue.unref(index$3.ElIcon), {\n          onClick: toggleMode\n        }, {\n          default: vue.withCtx(() => [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(vue.unref(mode).icon)))]),\n          _: 1\n        }), vue.createElementVNode(\"i\", {\n          class: vue.normalizeClass(vue.unref(ns).e(\"actions__divider\"))\n        }, null, 2), vue.createVNode(vue.unref(index$3.ElIcon), {\n          onClick: _cache[3] || (_cache[3] = $event => handleActions(\"anticlockwise\"))\n        }, {\n          default: vue.withCtx(() => [vue.createVNode(vue.unref(iconsVue.RefreshLeft))]),\n          _: 1\n        }), vue.createVNode(vue.unref(index$3.ElIcon), {\n          onClick: _cache[4] || (_cache[4] = $event => handleActions(\"clockwise\"))\n        }, {\n          default: vue.withCtx(() => [vue.createVNode(vue.unref(iconsVue.RefreshRight))]),\n          _: 1\n        })], 2)], 2), vue.createCommentVNode(\" CANVAS \"), vue.createElementVNode(\"div\", {\n          class: vue.normalizeClass(vue.unref(ns).e(\"canvas\"))\n        }, [(vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(_ctx.urlList, (url, i) => {\n          return vue.withDirectives((vue.openBlock(), vue.createElementBlock(\"img\", {\n            ref_for: true,\n            ref: el => imgRefs.value[i] = el,\n            key: url,\n            src: url,\n            style: vue.normalizeStyle(vue.unref(imgStyle)),\n            class: vue.normalizeClass(vue.unref(ns).e(\"img\")),\n            onLoad: handleImgLoad,\n            onError: handleImgError,\n            onMousedown: handleMouseDown\n          }, null, 46, _hoisted_1)), [[vue.vShow, i === activeIndex.value]]);\n        }), 128))], 2), vue.renderSlot(_ctx.$slots, \"default\")], 6)]),\n        _: 3\n      })], 8, [\"disabled\"]);\n    };\n  }\n});\nvar ImageViewer = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/image-viewer/src/image-viewer.vue\"]]);\nexports[\"default\"] = ImageViewer;","map":{"version":3,"names":["name","modes","CONTAIN","icon","vue","markRaw","iconsVue","FullScreen","ORIGINAL","ScaleToOriginal","t","index","useLocale","ns","index$1","useNamespace","nextZIndex","index$2","useZIndex","wrapper","ref","imgRefs","scopeEventListener","effectScope","loading","activeIndex","props","initialIndex","mode","shallowRef","transform","scale","deg","offsetX","offsetY","enableTransition","isSingle","computed","urlList","length","isFirst","value","isLast","currentImg","arrowPrevKls","e","is","infinite","arrowNextKls","imgStyle","translateX","translateY","style","transition","maxWidth","maxHeight","computedZIndex","types","isNumber","zIndex","hide","unregisterEventListener","emit","registerEventListener","keydownHandler","lodashUnified","throttle","code","aria","EVENT_CODE","esc","closeOnPressEscape","space","toggleMode","left","prev","up","handleActions","right","next","down","mousewheelHandler","delta","deltaY","deltaX","zoomRate","run","core","useEventListener","document","stop","handleImgLoad","handleImgError","target","alt","handleMouseDown","button","startX","pageX","startY","pageY","dragHandler","ev","removeMousemove","preventDefault","reset","modeNames","objects","keysOf","modeValues","Object","values","currentMode","findIndex","i","nextIndex","setActiveItem","len","action","options","minScale","maxScale","rotateDeg","Number","parseFloat","toFixed","watch","nextTick","$img","complete","val","onMounted","_a","_b","focus","call","expose"],"sources":["../../../../../../packages/components/image-viewer/src/image-viewer.vue"],"sourcesContent":["<template>\n  <teleport to=\"body\" :disabled=\"!teleported\">\n    <transition name=\"viewer-fade\" appear>\n      <div\n        ref=\"wrapper\"\n        :tabindex=\"-1\"\n        :class=\"ns.e('wrapper')\"\n        :style=\"{ zIndex: computedZIndex }\"\n      >\n        <div :class=\"ns.e('mask')\" @click.self=\"hideOnClickModal && hide()\" />\n\n        <!-- CLOSE -->\n        <span :class=\"[ns.e('btn'), ns.e('close')]\" @click=\"hide\">\n          <el-icon><Close /></el-icon>\n        </span>\n\n        <!-- ARROW -->\n        <template v-if=\"!isSingle\">\n          <span :class=\"arrowPrevKls\" @click=\"prev\">\n            <el-icon><ArrowLeft /></el-icon>\n          </span>\n          <span :class=\"arrowNextKls\" @click=\"next\">\n            <el-icon><ArrowRight /></el-icon>\n          </span>\n        </template>\n        <!-- ACTIONS -->\n        <div :class=\"[ns.e('btn'), ns.e('actions')]\">\n          <div :class=\"ns.e('actions__inner')\">\n            <el-icon @click=\"handleActions('zoomOut')\">\n              <ZoomOut />\n            </el-icon>\n            <el-icon @click=\"handleActions('zoomIn')\">\n              <ZoomIn />\n            </el-icon>\n            <i :class=\"ns.e('actions__divider')\" />\n            <el-icon @click=\"toggleMode\">\n              <component :is=\"mode.icon\" />\n            </el-icon>\n            <i :class=\"ns.e('actions__divider')\" />\n            <el-icon @click=\"handleActions('anticlockwise')\">\n              <RefreshLeft />\n            </el-icon>\n            <el-icon @click=\"handleActions('clockwise')\">\n              <RefreshRight />\n            </el-icon>\n          </div>\n        </div>\n        <!-- CANVAS -->\n        <div :class=\"ns.e('canvas')\">\n          <img\n            v-for=\"(url, i) in urlList\"\n            v-show=\"i === activeIndex\"\n            :ref=\"(el) => (imgRefs[i] = el as HTMLImageElement)\"\n            :key=\"url\"\n            :src=\"url\"\n            :style=\"imgStyle\"\n            :class=\"ns.e('img')\"\n            @load=\"handleImgLoad\"\n            @error=\"handleImgError\"\n            @mousedown=\"handleMouseDown\"\n          />\n        </div>\n        <slot />\n      </div>\n    </transition>\n  </teleport>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  effectScope,\n  markRaw,\n  nextTick,\n  onMounted,\n  ref,\n  shallowRef,\n  watch,\n} from 'vue'\nimport { useEventListener } from '@vueuse/core'\nimport { throttle } from 'lodash-unified'\nimport { useLocale, useNamespace, useZIndex } from '@element-plus/hooks'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { isNumber, keysOf } from '@element-plus/utils'\nimport ElIcon from '@element-plus/components/icon'\nimport {\n  ArrowLeft,\n  ArrowRight,\n  Close,\n  FullScreen,\n  RefreshLeft,\n  RefreshRight,\n  ScaleToOriginal,\n  ZoomIn,\n  ZoomOut,\n} from '@element-plus/icons-vue'\nimport { imageViewerEmits, imageViewerProps } from './image-viewer'\n\nimport type { CSSProperties } from 'vue'\nimport type { ImageViewerAction, ImageViewerMode } from './image-viewer'\n\nconst modes: Record<'CONTAIN' | 'ORIGINAL', ImageViewerMode> = {\n  CONTAIN: {\n    name: 'contain',\n    icon: markRaw(FullScreen),\n  },\n  ORIGINAL: {\n    name: 'original',\n    icon: markRaw(ScaleToOriginal),\n  },\n}\n\ndefineOptions({\n  name: 'ElImageViewer',\n})\n\nconst props = defineProps(imageViewerProps)\nconst emit = defineEmits(imageViewerEmits)\n\nconst { t } = useLocale()\nconst ns = useNamespace('image-viewer')\nconst { nextZIndex } = useZIndex()\nconst wrapper = ref<HTMLDivElement>()\nconst imgRefs = ref<HTMLImageElement[]>([])\n\nconst scopeEventListener = effectScope()\n\nconst loading = ref(true)\nconst activeIndex = ref(props.initialIndex)\nconst mode = shallowRef<ImageViewerMode>(modes.CONTAIN)\nconst transform = ref({\n  scale: 1,\n  deg: 0,\n  offsetX: 0,\n  offsetY: 0,\n  enableTransition: false,\n})\n\nconst isSingle = computed(() => {\n  const { urlList } = props\n  return urlList.length <= 1\n})\n\nconst isFirst = computed(() => {\n  return activeIndex.value === 0\n})\n\nconst isLast = computed(() => {\n  return activeIndex.value === props.urlList.length - 1\n})\n\nconst currentImg = computed(() => {\n  return props.urlList[activeIndex.value]\n})\n\nconst arrowPrevKls = computed(() => [\n  ns.e('btn'),\n  ns.e('prev'),\n  ns.is('disabled', !props.infinite && isFirst.value),\n])\n\nconst arrowNextKls = computed(() => [\n  ns.e('btn'),\n  ns.e('next'),\n  ns.is('disabled', !props.infinite && isLast.value),\n])\n\nconst imgStyle = computed(() => {\n  const { scale, deg, offsetX, offsetY, enableTransition } = transform.value\n  let translateX = offsetX / scale\n  let translateY = offsetY / scale\n\n  switch (deg % 360) {\n    case 90:\n    case -270:\n      ;[translateX, translateY] = [translateY, -translateX]\n      break\n    case 180:\n    case -180:\n      ;[translateX, translateY] = [-translateX, -translateY]\n      break\n    case 270:\n    case -90:\n      ;[translateX, translateY] = [-translateY, translateX]\n      break\n  }\n\n  const style: CSSProperties = {\n    transform: `scale(${scale}) rotate(${deg}deg) translate(${translateX}px, ${translateY}px)`,\n    transition: enableTransition ? 'transform .3s' : '',\n  }\n  if (mode.value.name === modes.CONTAIN.name) {\n    style.maxWidth = style.maxHeight = '100%'\n  }\n  return style\n})\n\nconst computedZIndex = computed(() => {\n  return isNumber(props.zIndex) ? props.zIndex : nextZIndex()\n})\n\nfunction hide() {\n  unregisterEventListener()\n  emit('close')\n}\n\nfunction registerEventListener() {\n  const keydownHandler = throttle((e: KeyboardEvent) => {\n    switch (e.code) {\n      // ESC\n      case EVENT_CODE.esc:\n        props.closeOnPressEscape && hide()\n        break\n      // SPACE\n      case EVENT_CODE.space:\n        toggleMode()\n        break\n      // LEFT_ARROW\n      case EVENT_CODE.left:\n        prev()\n        break\n      // UP_ARROW\n      case EVENT_CODE.up:\n        handleActions('zoomIn')\n        break\n      // RIGHT_ARROW\n      case EVENT_CODE.right:\n        next()\n        break\n      // DOWN_ARROW\n      case EVENT_CODE.down:\n        handleActions('zoomOut')\n        break\n    }\n  })\n  const mousewheelHandler = throttle((e: WheelEvent) => {\n    const delta = e.deltaY || e.deltaX\n    handleActions(delta < 0 ? 'zoomIn' : 'zoomOut', {\n      zoomRate: props.zoomRate,\n      enableTransition: false,\n    })\n  })\n\n  scopeEventListener.run(() => {\n    useEventListener(document, 'keydown', keydownHandler)\n    useEventListener(document, 'wheel', mousewheelHandler)\n  })\n}\n\nfunction unregisterEventListener() {\n  scopeEventListener.stop()\n}\n\nfunction handleImgLoad() {\n  loading.value = false\n}\n\nfunction handleImgError(e: Event) {\n  loading.value = false\n  ;(e.target as HTMLImageElement).alt = t('el.image.error')\n}\n\nfunction handleMouseDown(e: MouseEvent) {\n  if (loading.value || e.button !== 0 || !wrapper.value) return\n  transform.value.enableTransition = false\n\n  const { offsetX, offsetY } = transform.value\n  const startX = e.pageX\n  const startY = e.pageY\n\n  const dragHandler = throttle((ev: MouseEvent) => {\n    transform.value = {\n      ...transform.value,\n      offsetX: offsetX + ev.pageX - startX,\n      offsetY: offsetY + ev.pageY - startY,\n    }\n  })\n  const removeMousemove = useEventListener(document, 'mousemove', dragHandler)\n  useEventListener(document, 'mouseup', () => {\n    removeMousemove()\n  })\n\n  e.preventDefault()\n}\n\nfunction reset() {\n  transform.value = {\n    scale: 1,\n    deg: 0,\n    offsetX: 0,\n    offsetY: 0,\n    enableTransition: false,\n  }\n}\n\nfunction toggleMode() {\n  if (loading.value) return\n\n  const modeNames = keysOf(modes)\n  const modeValues = Object.values(modes)\n  const currentMode = mode.value.name\n  const index = modeValues.findIndex((i) => i.name === currentMode)\n  const nextIndex = (index + 1) % modeNames.length\n  mode.value = modes[modeNames[nextIndex]]\n  reset()\n}\n\nfunction setActiveItem(index: number) {\n  const len = props.urlList.length\n  activeIndex.value = (index + len) % len\n}\n\nfunction prev() {\n  if (isFirst.value && !props.infinite) return\n  setActiveItem(activeIndex.value - 1)\n}\n\nfunction next() {\n  if (isLast.value && !props.infinite) return\n  setActiveItem(activeIndex.value + 1)\n}\n\nfunction handleActions(action: ImageViewerAction, options = {}) {\n  if (loading.value) return\n  const { minScale, maxScale } = props\n  const { zoomRate, rotateDeg, enableTransition } = {\n    zoomRate: props.zoomRate,\n    rotateDeg: 90,\n    enableTransition: true,\n    ...options,\n  }\n  switch (action) {\n    case 'zoomOut':\n      if (transform.value.scale > minScale) {\n        transform.value.scale = Number.parseFloat(\n          (transform.value.scale / zoomRate).toFixed(3)\n        )\n      }\n      break\n    case 'zoomIn':\n      if (transform.value.scale < maxScale) {\n        transform.value.scale = Number.parseFloat(\n          (transform.value.scale * zoomRate).toFixed(3)\n        )\n      }\n      break\n    case 'clockwise':\n      transform.value.deg += rotateDeg\n      emit('rotate', transform.value.deg)\n      break\n    case 'anticlockwise':\n      transform.value.deg -= rotateDeg\n      emit('rotate', transform.value.deg)\n      break\n  }\n  transform.value.enableTransition = enableTransition\n}\n\nwatch(currentImg, () => {\n  nextTick(() => {\n    const $img = imgRefs.value[0]\n    if (!$img?.complete) {\n      loading.value = true\n    }\n  })\n})\n\nwatch(activeIndex, (val) => {\n  reset()\n  emit('switch', val)\n})\n\nonMounted(() => {\n  registerEventListener()\n  // add tabindex then wrapper can be focusable via Javascript\n  // focus wrapper so arrow key can't cause inner scroll behavior underneath\n  wrapper.value?.focus?.()\n})\n\ndefineExpose({\n  /**\n   * @description manually switch image\n   */\n  setActiveItem,\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}