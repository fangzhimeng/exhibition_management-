{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar shared = require('@vue/shared');\nrequire('../../../utils/index.js');\nvar ajax = require('./ajax.js');\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar typescript = require('../../../utils/typescript.js');\nconst uploadListTypes = [\"text\", \"picture\", \"picture-card\"];\nlet fileId = 1;\nconst genFileId = () => Date.now() + fileId++;\nconst uploadBaseProps = runtime.buildProps({\n  action: {\n    type: String,\n    default: \"#\"\n  },\n  headers: {\n    type: runtime.definePropType(Object)\n  },\n  method: {\n    type: String,\n    default: \"post\"\n  },\n  data: {\n    type: runtime.definePropType([Object, Function, Promise]),\n    default: () => typescript.mutable({})\n  },\n  multiple: {\n    type: Boolean,\n    default: false\n  },\n  name: {\n    type: String,\n    default: \"file\"\n  },\n  drag: {\n    type: Boolean,\n    default: false\n  },\n  withCredentials: Boolean,\n  showFileList: {\n    type: Boolean,\n    default: true\n  },\n  accept: {\n    type: String,\n    default: \"\"\n  },\n  fileList: {\n    type: runtime.definePropType(Array),\n    default: () => typescript.mutable([])\n  },\n  autoUpload: {\n    type: Boolean,\n    default: true\n  },\n  listType: {\n    type: String,\n    values: uploadListTypes,\n    default: \"text\"\n  },\n  httpRequest: {\n    type: runtime.definePropType(Function),\n    default: ajax.ajaxUpload\n  },\n  disabled: Boolean,\n  limit: Number\n});\nconst uploadProps = runtime.buildProps({\n  ...uploadBaseProps,\n  beforeUpload: {\n    type: runtime.definePropType(Function),\n    default: shared.NOOP\n  },\n  beforeRemove: {\n    type: runtime.definePropType(Function)\n  },\n  onRemove: {\n    type: runtime.definePropType(Function),\n    default: shared.NOOP\n  },\n  onChange: {\n    type: runtime.definePropType(Function),\n    default: shared.NOOP\n  },\n  onPreview: {\n    type: runtime.definePropType(Function),\n    default: shared.NOOP\n  },\n  onSuccess: {\n    type: runtime.definePropType(Function),\n    default: shared.NOOP\n  },\n  onProgress: {\n    type: runtime.definePropType(Function),\n    default: shared.NOOP\n  },\n  onError: {\n    type: runtime.definePropType(Function),\n    default: shared.NOOP\n  },\n  onExceed: {\n    type: runtime.definePropType(Function),\n    default: shared.NOOP\n  }\n});\nexports.genFileId = genFileId;\nexports.uploadBaseProps = uploadBaseProps;\nexports.uploadListTypes = uploadListTypes;\nexports.uploadProps = uploadProps;","map":{"version":3,"names":["uploadListTypes","fileId","genFileId","Date","now","uploadBaseProps","runtime","buildProps","action","type","String","default","headers","definePropType","Object","method","data","Function","Promise","typescript","mutable","multiple","Boolean","name","drag","withCredentials","showFileList","accept","fileList","Array","autoUpload","listType","values","httpRequest","ajax","ajaxUpload","disabled","limit","Number","uploadProps","beforeUpload","shared","NOOP","beforeRemove","onRemove","onChange","onPreview","onSuccess","onProgress","onError","onExceed"],"sources":["../../../../../../packages/components/upload/src/upload.ts"],"sourcesContent":["import { NOOP } from '@vue/shared'\nimport { buildProps, definePropType, mutable } from '@element-plus/utils'\nimport { ajaxUpload } from './ajax'\nimport type { Awaitable, Mutable } from '@element-plus/utils'\n\nimport type { UploadAjaxError } from './ajax'\nimport type { ExtractPropTypes } from 'vue'\nimport type Upload from './upload.vue'\n\nexport const uploadListTypes = ['text', 'picture', 'picture-card'] as const\n\nlet fileId = 1\nexport const genFileId = () => Date.now() + fileId++\n\nexport type UploadStatus = 'ready' | 'uploading' | 'success' | 'fail'\nexport interface UploadProgressEvent extends ProgressEvent {\n  percent: number\n}\n\nexport interface UploadRequestOptions {\n  action: string\n  method: string\n  data: Record<string, string | Blob | [string | Blob, string]>\n  filename: string\n  file: UploadRawFile\n  headers: Headers | Record<string, string | number | null | undefined>\n  onError: (evt: UploadAjaxError) => void\n  onProgress: (evt: UploadProgressEvent) => void\n  onSuccess: (response: any) => void\n  withCredentials: boolean\n}\nexport interface UploadFile {\n  name: string\n  percentage?: number\n  status: UploadStatus\n  size?: number\n  response?: unknown\n  uid: number\n  url?: string\n  raw?: UploadRawFile\n}\nexport type UploadUserFile = Omit<UploadFile, 'status' | 'uid'> &\n  Partial<Pick<UploadFile, 'status' | 'uid'>>\n\nexport type UploadFiles = UploadFile[]\nexport interface UploadRawFile extends File {\n  uid: number\n}\nexport type UploadRequestHandler = (\n  options: UploadRequestOptions\n) => XMLHttpRequest | Promise<unknown>\nexport interface UploadHooks {\n  beforeUpload: (\n    rawFile: UploadRawFile\n  ) => Awaitable<void | undefined | null | boolean | File | Blob>\n  beforeRemove: (\n    uploadFile: UploadFile,\n    uploadFiles: UploadFiles\n  ) => Awaitable<boolean>\n  onRemove: (uploadFile: UploadFile, uploadFiles: UploadFiles) => void\n  onChange: (uploadFile: UploadFile, uploadFiles: UploadFiles) => void\n  onPreview: (uploadFile: UploadFile) => void\n  onSuccess: (\n    response: any,\n    uploadFile: UploadFile,\n    uploadFiles: UploadFiles\n  ) => void\n  onProgress: (\n    evt: UploadProgressEvent,\n    uploadFile: UploadFile,\n    uploadFiles: UploadFiles\n  ) => void\n  onError: (\n    error: Error,\n    uploadFile: UploadFile,\n    uploadFiles: UploadFiles\n  ) => void\n  onExceed: (files: File[], uploadFiles: UploadUserFile[]) => void\n}\n\nexport type UploadData = Mutable<Record<string, any>>\n\nexport const uploadBaseProps = buildProps({\n  /**\n   * @description request URL\n   */\n  action: {\n    type: String,\n    default: '#',\n  },\n  /**\n   * @description request headers\n   */\n  headers: {\n    type: definePropType<Headers | Record<string, any>>(Object),\n  },\n  /**\n   * @description set upload request method\n   */\n  method: {\n    type: String,\n    default: 'post',\n  },\n  /**\n   * @description additions options of request\n   */\n  data: {\n    type: definePropType<\n      | Awaitable<UploadData>\n      | ((rawFile: UploadRawFile) => Awaitable<UploadData>)\n    >([Object, Function, Promise]),\n    default: () => mutable({} as const),\n  },\n  /**\n   * @description whether uploading multiple files is permitted\n   */\n  multiple: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description key name for uploaded file\n   */\n  name: {\n    type: String,\n    default: 'file',\n  },\n  /**\n   * @description whether to activate drag and drop mode\n   */\n  drag: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description whether cookies are sent\n   */\n  withCredentials: Boolean,\n  /**\n   * @description whether to show the uploaded file list\n   */\n  showFileList: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description accepted [file types](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-accept), will not work when `thumbnail-mode === true`\n   */\n  accept: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description default uploaded files\n   */\n  fileList: {\n    type: definePropType<UploadUserFile[]>(Array),\n    default: () => mutable([] as const),\n  },\n  /**\n   * @description whether to auto upload file\n   */\n  autoUpload: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description type of file list\n   */\n  listType: {\n    type: String,\n    values: uploadListTypes,\n    default: 'text',\n  },\n  /**\n   * @description override default xhr behavior, allowing you to implement your own upload-file's request\n   */\n  httpRequest: {\n    type: definePropType<UploadRequestHandler>(Function),\n    default: ajaxUpload,\n  },\n  /**\n   * @description whether to disable upload\n   */\n  disabled: Boolean,\n  /**\n   * @description maximum number of uploads allowed\n   */\n  limit: Number,\n} as const)\n\nexport const uploadProps = buildProps({\n  ...uploadBaseProps,\n  /**\n   * @description hook function before uploading with the file to be uploaded as its parameter. If `false` is returned or a `Promise` is returned and then is rejected, uploading will be aborted\n   */\n  beforeUpload: {\n    type: definePropType<UploadHooks['beforeUpload']>(Function),\n    default: NOOP,\n  },\n  /**\n   * @description hook function before removing a file with the file and file list as its parameters. If `false` is returned or a `Promise` is returned and then is rejected, removing will be aborted\n   */\n  beforeRemove: {\n    type: definePropType<UploadHooks['beforeRemove']>(Function),\n  },\n  /**\n   * @description hook function when files are removed\n   */\n  onRemove: {\n    type: definePropType<UploadHooks['onRemove']>(Function),\n    default: NOOP,\n  },\n  /**\n   * @description hook function when select file or upload file success or upload file fail\n   */\n  onChange: {\n    type: definePropType<UploadHooks['onChange']>(Function),\n    default: NOOP,\n  },\n  /**\n   * @description hook function when clicking the uploaded files\n   */\n  onPreview: {\n    type: definePropType<UploadHooks['onPreview']>(Function),\n    default: NOOP,\n  },\n  /**\n   * @description hook function when uploaded successfully\n   */\n  onSuccess: {\n    type: definePropType<UploadHooks['onSuccess']>(Function),\n    default: NOOP,\n  },\n  /**\n   * @description hook function when some progress occurs\n   */\n  onProgress: {\n    type: definePropType<UploadHooks['onProgress']>(Function),\n    default: NOOP,\n  },\n  /**\n   * @description hook function when some errors occurs\n   */\n  onError: {\n    type: definePropType<UploadHooks['onError']>(Function),\n    default: NOOP,\n  },\n  /**\n   * @description hook function when limit is exceeded\n   */\n  onExceed: {\n    type: definePropType<UploadHooks['onExceed']>(Function),\n    default: NOOP,\n  },\n} as const)\n\nexport type UploadProps = ExtractPropTypes<typeof uploadProps>\n\nexport type UploadInstance = InstanceType<typeof Upload>\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}