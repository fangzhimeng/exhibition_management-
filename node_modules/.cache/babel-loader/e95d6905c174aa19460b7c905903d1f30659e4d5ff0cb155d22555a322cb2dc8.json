{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar dayjs = require('dayjs');\nvar customParseFormat = require('dayjs/plugin/customParseFormat.js');\nvar index = require('../../select/index.js');\nrequire('../../form/index.js');\nvar index$3 = require('../../icon/index.js');\nrequire('../../../hooks/index.js');\nvar timeSelect = require('./time-select.js');\nvar utils = require('./utils.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index$1 = require('../../../hooks/use-namespace/index.js');\nvar useFormCommonProps = require('../../form/src/hooks/use-form-common-props.js');\nvar index$2 = require('../../../hooks/use-locale/index.js');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);\nvar customParseFormat__default = /*#__PURE__*/_interopDefaultLegacy(customParseFormat);\nconst __default__ = vue.defineComponent({\n  name: \"ElTimeSelect\"\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: timeSelect.timeSelectProps,\n  emits: [\"change\", \"blur\", \"focus\", \"update:modelValue\"],\n  setup(__props, {\n    expose\n  }) {\n    const props = __props;\n    dayjs__default[\"default\"].extend(customParseFormat__default[\"default\"]);\n    const {\n      Option: ElOption\n    } = index.ElSelect;\n    const nsInput = index$1.useNamespace(\"input\");\n    const select = vue.ref();\n    const _disabled = useFormCommonProps.useFormDisabled();\n    const {\n      lang\n    } = index$2.useLocale();\n    const value = vue.computed(() => props.modelValue);\n    const start = vue.computed(() => {\n      const time = utils.parseTime(props.start);\n      return time ? utils.formatTime(time) : null;\n    });\n    const end = vue.computed(() => {\n      const time = utils.parseTime(props.end);\n      return time ? utils.formatTime(time) : null;\n    });\n    const step = vue.computed(() => {\n      const time = utils.parseTime(props.step);\n      return time ? utils.formatTime(time) : null;\n    });\n    const minTime = vue.computed(() => {\n      const time = utils.parseTime(props.minTime || \"\");\n      return time ? utils.formatTime(time) : null;\n    });\n    const maxTime = vue.computed(() => {\n      const time = utils.parseTime(props.maxTime || \"\");\n      return time ? utils.formatTime(time) : null;\n    });\n    const items = vue.computed(() => {\n      const result = [];\n      if (props.start && props.end && props.step) {\n        let current = start.value;\n        let currentTime;\n        while (current && end.value && utils.compareTime(current, end.value) <= 0) {\n          currentTime = dayjs__default[\"default\"](current, \"HH:mm\").locale(lang.value).format(props.format);\n          result.push({\n            value: currentTime,\n            disabled: utils.compareTime(current, minTime.value || \"-1:-1\") <= 0 || utils.compareTime(current, maxTime.value || \"100:100\") >= 0\n          });\n          current = utils.nextTime(current, step.value);\n        }\n      }\n      return result;\n    });\n    const blur = () => {\n      var _a, _b;\n      (_b = (_a = select.value) == null ? void 0 : _a.blur) == null ? void 0 : _b.call(_a);\n    };\n    const focus = () => {\n      var _a, _b;\n      (_b = (_a = select.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);\n    };\n    expose({\n      blur,\n      focus\n    });\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createBlock(vue.unref(index.ElSelect), {\n        ref_key: \"select\",\n        ref: select,\n        \"model-value\": vue.unref(value),\n        disabled: vue.unref(_disabled),\n        clearable: _ctx.clearable,\n        \"clear-icon\": _ctx.clearIcon,\n        size: _ctx.size,\n        effect: _ctx.effect,\n        placeholder: _ctx.placeholder,\n        \"default-first-option\": \"\",\n        filterable: _ctx.editable,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = event => _ctx.$emit(\"update:modelValue\", event)),\n        onChange: _cache[1] || (_cache[1] = event => _ctx.$emit(\"change\", event)),\n        onBlur: _cache[2] || (_cache[2] = event => _ctx.$emit(\"blur\", event)),\n        onFocus: _cache[3] || (_cache[3] = event => _ctx.$emit(\"focus\", event))\n      }, {\n        prefix: vue.withCtx(() => [_ctx.prefixIcon ? (vue.openBlock(), vue.createBlock(vue.unref(index$3.ElIcon), {\n          key: 0,\n          class: vue.normalizeClass(vue.unref(nsInput).e(\"prefix-icon\"))\n        }, {\n          default: vue.withCtx(() => [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.prefixIcon)))]),\n          _: 1\n        }, 8, [\"class\"])) : vue.createCommentVNode(\"v-if\", true)]),\n        default: vue.withCtx(() => [(vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(vue.unref(items), item => {\n          return vue.openBlock(), vue.createBlock(vue.unref(ElOption), {\n            key: item.value,\n            label: item.value,\n            value: item.value,\n            disabled: item.disabled\n          }, null, 8, [\"label\", \"value\", \"disabled\"]);\n        }), 128))]),\n        _: 1\n      }, 8, [\"model-value\", \"disabled\", \"clearable\", \"clear-icon\", \"size\", \"effect\", \"placeholder\", \"filterable\"]);\n    };\n  }\n});\nvar TimeSelect = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/time-select/src/time-select.vue\"]]);\nexports[\"default\"] = TimeSelect;","map":{"version":3,"names":["name","dayjs__default","extend","customParseFormat__default","Option","ElOption","index","ElSelect","nsInput","index$1","useNamespace","select","vue","ref","_disabled","useFormCommonProps","useFormDisabled","lang","index$2","useLocale","value","computed","props","modelValue","start","time","utils","parseTime","formatTime","end","step","minTime","maxTime","items","result","current","currentTime","compareTime","locale","format","push","disabled","nextTime","blur","_a","_b","call","focus","expose"],"sources":["../../../../../../packages/components/time-select/src/time-select.vue"],"sourcesContent":["<template>\n  <el-select\n    ref=\"select\"\n    :model-value=\"value\"\n    :disabled=\"_disabled\"\n    :clearable=\"clearable\"\n    :clear-icon=\"clearIcon\"\n    :size=\"size\"\n    :effect=\"effect\"\n    :placeholder=\"placeholder\"\n    default-first-option\n    :filterable=\"editable\"\n    @update:model-value=\"(event) => $emit('update:modelValue', event)\"\n    @change=\"(event) => $emit('change', event)\"\n    @blur=\"(event) => $emit('blur', event)\"\n    @focus=\"(event) => $emit('focus', event)\"\n  >\n    <el-option\n      v-for=\"item in items\"\n      :key=\"item.value\"\n      :label=\"item.value\"\n      :value=\"item.value\"\n      :disabled=\"item.disabled\"\n    />\n    <template #prefix>\n      <el-icon v-if=\"prefixIcon\" :class=\"nsInput.e('prefix-icon')\">\n        <component :is=\"prefixIcon\" />\n      </el-icon>\n    </template>\n  </el-select>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, ref } from 'vue'\nimport dayjs from 'dayjs'\nimport customParseFormat from 'dayjs/plugin/customParseFormat.js'\nimport ElSelect from '@element-plus/components/select'\nimport { useFormDisabled } from '@element-plus/components/form'\nimport ElIcon from '@element-plus/components/icon'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { timeSelectProps } from './time-select'\nimport { compareTime, formatTime, nextTime, parseTime } from './utils'\n\ndayjs.extend(customParseFormat)\n\nconst { Option: ElOption } = ElSelect\n\ndefineOptions({\n  name: 'ElTimeSelect',\n})\n\ndefineEmits(['change', 'blur', 'focus', 'update:modelValue'])\n\nconst props = defineProps(timeSelectProps)\n\nconst nsInput = useNamespace('input')\nconst select = ref<typeof ElSelect>()\n\nconst _disabled = useFormDisabled()\nconst { lang } = useLocale()\n\nconst value = computed(() => props.modelValue)\nconst start = computed(() => {\n  const time = parseTime(props.start)\n  return time ? formatTime(time) : null\n})\n\nconst end = computed(() => {\n  const time = parseTime(props.end)\n  return time ? formatTime(time) : null\n})\n\nconst step = computed(() => {\n  const time = parseTime(props.step)\n  return time ? formatTime(time) : null\n})\n\nconst minTime = computed(() => {\n  const time = parseTime(props.minTime || '')\n  return time ? formatTime(time) : null\n})\n\nconst maxTime = computed(() => {\n  const time = parseTime(props.maxTime || '')\n  return time ? formatTime(time) : null\n})\n\nconst items = computed(() => {\n  const result: { value: string; disabled: boolean }[] = []\n  if (props.start && props.end && props.step) {\n    let current = start.value\n    let currentTime: string\n    while (current && end.value && compareTime(current, end.value) <= 0) {\n      currentTime = dayjs(current, 'HH:mm')\n        .locale(lang.value)\n        .format(props.format)\n      result.push({\n        value: currentTime,\n        disabled:\n          compareTime(current, minTime.value || '-1:-1') <= 0 ||\n          compareTime(current, maxTime.value || '100:100') >= 0,\n      })\n      current = nextTime(current, step.value!)\n    }\n  }\n  return result\n})\n\nconst blur = () => {\n  select.value?.blur?.()\n}\n\nconst focus = () => {\n  select.value?.focus?.()\n}\n\ndefineExpose({\n  /**\n   * @description focus the Input component\n   */\n  blur,\n  /**\n   * @description blur the Input component\n   */\n  focus,\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}