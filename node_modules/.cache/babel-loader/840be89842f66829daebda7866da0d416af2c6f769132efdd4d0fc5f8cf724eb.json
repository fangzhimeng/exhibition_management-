{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../roving-focus-group/index.js');\nrequire('../../../utils/index.js');\nvar dropdownItemImpl = require('./dropdown-item-impl.js');\nvar useDropdown = require('./useDropdown.js');\nvar dropdown = require('./dropdown.js');\nvar tokens = require('./tokens.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar rovingFocusItem = require('../../roving-focus-group/src/roving-focus-item.js');\nvar event = require('../../../utils/dom/event.js');\nconst _sfc_main = vue.defineComponent({\n  name: \"ElDropdownItem\",\n  components: {\n    ElDropdownCollectionItem: dropdown.ElCollectionItem,\n    ElRovingFocusItem: rovingFocusItem[\"default\"],\n    ElDropdownItemImpl: dropdownItemImpl[\"default\"]\n  },\n  inheritAttrs: false,\n  props: dropdown.dropdownItemProps,\n  emits: [\"pointermove\", \"pointerleave\", \"click\"],\n  setup(props, {\n    emit,\n    attrs\n  }) {\n    const {\n      elDropdown\n    } = useDropdown.useDropdown();\n    const _instance = vue.getCurrentInstance();\n    const itemRef = vue.ref(null);\n    const textContent = vue.computed(() => {\n      var _a, _b;\n      return (_b = (_a = vue.unref(itemRef)) == null ? void 0 : _a.textContent) != null ? _b : \"\";\n    });\n    const {\n      onItemEnter,\n      onItemLeave\n    } = vue.inject(tokens.DROPDOWN_INJECTION_KEY, void 0);\n    const handlePointerMove = event.composeEventHandlers(e => {\n      emit(\"pointermove\", e);\n      return e.defaultPrevented;\n    }, event.whenMouse(e => {\n      if (props.disabled) {\n        onItemLeave(e);\n        return;\n      }\n      const target = e.currentTarget;\n      if (target === document.activeElement || target.contains(document.activeElement)) {\n        return;\n      }\n      onItemEnter(e);\n      if (!e.defaultPrevented) {\n        target == null ? void 0 : target.focus();\n      }\n    }));\n    const handlePointerLeave = event.composeEventHandlers(e => {\n      emit(\"pointerleave\", e);\n      return e.defaultPrevented;\n    }, event.whenMouse(e => {\n      onItemLeave(e);\n    }));\n    const handleClick = event.composeEventHandlers(e => {\n      if (props.disabled) {\n        return;\n      }\n      emit(\"click\", e);\n      return e.type !== \"keydown\" && e.defaultPrevented;\n    }, e => {\n      var _a, _b, _c;\n      if (props.disabled) {\n        e.stopImmediatePropagation();\n        return;\n      }\n      if ((_a = elDropdown == null ? void 0 : elDropdown.hideOnClick) == null ? void 0 : _a.value) {\n        (_b = elDropdown.handleClick) == null ? void 0 : _b.call(elDropdown);\n      }\n      (_c = elDropdown.commandHandler) == null ? void 0 : _c.call(elDropdown, props.command, _instance, e);\n    });\n    const propsAndAttrs = vue.computed(() => {\n      return {\n        ...props,\n        ...attrs\n      };\n    });\n    return {\n      handleClick,\n      handlePointerMove,\n      handlePointerLeave,\n      textContent,\n      propsAndAttrs\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _a;\n  const _component_el_dropdown_item_impl = vue.resolveComponent(\"el-dropdown-item-impl\");\n  const _component_el_roving_focus_item = vue.resolveComponent(\"el-roving-focus-item\");\n  const _component_el_dropdown_collection_item = vue.resolveComponent(\"el-dropdown-collection-item\");\n  return vue.openBlock(), vue.createBlock(_component_el_dropdown_collection_item, {\n    disabled: _ctx.disabled,\n    \"text-value\": (_a = _ctx.textValue) != null ? _a : _ctx.textContent\n  }, {\n    default: vue.withCtx(() => [vue.createVNode(_component_el_roving_focus_item, {\n      focusable: !_ctx.disabled\n    }, {\n      default: vue.withCtx(() => [vue.createVNode(_component_el_dropdown_item_impl, vue.mergeProps(_ctx.propsAndAttrs, {\n        onPointerleave: _ctx.handlePointerLeave,\n        onPointermove: _ctx.handlePointerMove,\n        onClickimpl: _ctx.handleClick\n      }), {\n        default: vue.withCtx(() => [vue.renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      }, 16, [\"onPointerleave\", \"onPointermove\", \"onClickimpl\"])]),\n      _: 3\n    }, 8, [\"focusable\"])]),\n    _: 3\n  }, 8, [\"disabled\", \"text-value\"]);\n}\nvar DropdownItem = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/dropdown/src/dropdown-item.vue\"]]);\nexports[\"default\"] = DropdownItem;","map":{"version":3,"names":["_sfc_main","vue","defineComponent","name","components","ElDropdownCollectionItem","dropdown","ElCollectionItem","ElRovingFocusItem","rovingFocusItem","ElDropdownItemImpl","dropdownItemImpl","inheritAttrs","props","dropdownItemProps","emits","setup","emit","attrs","elDropdown","useDropdown","_instance","getCurrentInstance","itemRef","ref","textContent","computed","_a","_b","unref","onItemEnter","onItemLeave","inject","tokens","DROPDOWN_INJECTION_KEY","handlePointerMove","event","composeEventHandlers","e","defaultPrevented","whenMouse","disabled","target","currentTarget","document","activeElement","contains","focus","handlePointerLeave","handleClick","type","_c","stopImmediatePropagation","hideOnClick","value","call","commandHandler","command","propsAndAttrs","_cache","$props","$setup","$data","$options","_component_el_dropdown_item_impl","resolveComponent","_component_el_roving_focus_item","openBlock","createBlock","_component_el_dropdown_collection_item","_ctx","textValue","default","withCtx","createVNode","focusable","mergeProps","onPointerleave","onPointermove"],"sources":["../../../../../../packages/components/dropdown/src/dropdown-item.vue"],"sourcesContent":["<template>\n  <el-dropdown-collection-item\n    :disabled=\"disabled\"\n    :text-value=\"textValue ?? textContent\"\n  >\n    <el-roving-focus-item :focusable=\"!disabled\">\n      <el-dropdown-item-impl\n        v-bind=\"propsAndAttrs\"\n        @pointerleave=\"handlePointerLeave\"\n        @pointermove=\"handlePointerMove\"\n        @clickimpl=\"handleClick\"\n      >\n        <slot />\n      </el-dropdown-item-impl>\n    </el-roving-focus-item>\n  </el-dropdown-collection-item>\n</template>\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  inject,\n  ref,\n  unref,\n} from 'vue'\nimport { ElRovingFocusItem } from '@element-plus/components/roving-focus-group'\nimport { composeEventHandlers, whenMouse } from '@element-plus/utils'\nimport ElDropdownItemImpl from './dropdown-item-impl.vue'\nimport { useDropdown } from './useDropdown'\nimport {\n  ElCollectionItem as ElDropdownCollectionItem,\n  dropdownItemProps,\n} from './dropdown'\nimport { DROPDOWN_INJECTION_KEY } from './tokens'\n\nexport default defineComponent({\n  name: 'ElDropdownItem',\n  components: {\n    ElDropdownCollectionItem,\n    ElRovingFocusItem,\n    ElDropdownItemImpl,\n  },\n  inheritAttrs: false,\n  props: dropdownItemProps,\n  emits: ['pointermove', 'pointerleave', 'click'],\n  setup(props, { emit, attrs }) {\n    const { elDropdown } = useDropdown()\n    const _instance = getCurrentInstance()\n    const itemRef = ref<HTMLElement | null>(null)\n    const textContent = computed(() => unref(itemRef)?.textContent ?? '')\n    const { onItemEnter, onItemLeave } = inject(\n      DROPDOWN_INJECTION_KEY,\n      undefined\n    )!\n\n    const handlePointerMove = composeEventHandlers(\n      (e: PointerEvent) => {\n        emit('pointermove', e)\n        return e.defaultPrevented\n      },\n      whenMouse((e) => {\n        if (props.disabled) {\n          onItemLeave(e)\n          return\n        }\n\n        const target = e.currentTarget as HTMLElement\n        /**\n         * This handles the following scenario:\n         *   when the item contains a form element such as input element\n         *   when the mouse is moving over the element itself which is contained by\n         *   the item, the default focusing logic should be prevented so that\n         *   it won't cause weird action.\n         */\n        if (\n          target === document.activeElement ||\n          target.contains(document.activeElement)\n        ) {\n          return\n        }\n\n        onItemEnter(e)\n        if (!e.defaultPrevented) {\n          target?.focus()\n        }\n      })\n    )\n\n    const handlePointerLeave = composeEventHandlers(\n      (e: PointerEvent) => {\n        emit('pointerleave', e)\n        return e.defaultPrevented\n      },\n      whenMouse((e) => {\n        onItemLeave(e)\n      })\n    )\n\n    const handleClick = composeEventHandlers(\n      (e: PointerEvent) => {\n        if (props.disabled) {\n          return\n        }\n        emit('click', e)\n        return e.type !== 'keydown' && e.defaultPrevented\n      },\n      (e) => {\n        if (props.disabled) {\n          e.stopImmediatePropagation()\n          return\n        }\n        if (elDropdown?.hideOnClick?.value) {\n          elDropdown.handleClick?.()\n        }\n        elDropdown.commandHandler?.(props.command, _instance, e)\n      }\n    )\n\n    // direct usage of v-bind={ ...$props, ...$attrs } causes type errors\n    const propsAndAttrs = computed(() => {\n      return { ...props, ...attrs }\n    })\n\n    return {\n      handleClick,\n      handlePointerMove,\n      handlePointerLeave,\n      textContent,\n      propsAndAttrs,\n    }\n  },\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}