{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar lodashUnified = require('lodash-unified');\nvar core = require('@vueuse/core');\nrequire('../../../../hooks/index.js');\nrequire('../../../form/index.js');\nvar index$3 = require('../../../input/index.js');\nvar index$4 = require('../../../icon/index.js');\nvar index$2 = require('../../../tooltip/index.js');\nrequire('../../../../utils/index.js');\nrequire('../../../../constants/index.js');\nvar iconsVue = require('@element-plus/icons-vue');\nvar utils = require('../utils.js');\nvar props = require('./props.js');\nvar pluginVue_exportHelper = require('../../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../../hooks/use-locale/index.js');\nvar index$1 = require('../../../../hooks/use-namespace/index.js');\nvar useFormItem = require('../../../form/src/hooks/use-form-item.js');\nvar error = require('../../../../utils/error.js');\nvar shared = require('@vue/shared');\nvar aria = require('../../../../constants/aria.js');\nvar useFormCommonProps = require('../../../form/src/hooks/use-form-common-props.js');\nconst _hoisted_1 = [\"id\", \"name\", \"placeholder\", \"value\", \"disabled\", \"readonly\"];\nconst _hoisted_2 = [\"id\", \"name\", \"placeholder\", \"value\", \"disabled\", \"readonly\"];\nconst __default__ = vue.defineComponent({\n  name: \"Picker\"\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: props.timePickerDefaultProps,\n  emits: [\"update:modelValue\", \"change\", \"focus\", \"blur\", \"calendar-change\", \"panel-change\", \"visible-change\", \"keydown\"],\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    const props = __props;\n    const attrs = vue.useAttrs();\n    const {\n      lang\n    } = index.useLocale();\n    const nsDate = index$1.useNamespace(\"date\");\n    const nsInput = index$1.useNamespace(\"input\");\n    const nsRange = index$1.useNamespace(\"range\");\n    const {\n      form,\n      formItem\n    } = useFormItem.useFormItem();\n    const elPopperOptions = vue.inject(\"ElPopperOptions\", {});\n    const refPopper = vue.ref();\n    const inputRef = vue.ref();\n    const pickerVisible = vue.ref(false);\n    const pickerActualVisible = vue.ref(false);\n    const valueOnOpen = vue.ref(null);\n    let hasJustTabExitedInput = false;\n    let ignoreFocusEvent = false;\n    const rangeInputKls = vue.computed(() => [nsDate.b(\"editor\"), nsDate.bm(\"editor\", props.type), nsInput.e(\"wrapper\"), nsDate.is(\"disabled\", pickerDisabled.value), nsDate.is(\"active\", pickerVisible.value), nsRange.b(\"editor\"), pickerSize ? nsRange.bm(\"editor\", pickerSize.value) : \"\", attrs.class]);\n    const clearIconKls = vue.computed(() => [nsInput.e(\"icon\"), nsRange.e(\"close-icon\"), !showClose.value ? nsRange.e(\"close-icon--hidden\") : \"\"]);\n    vue.watch(pickerVisible, val => {\n      if (!val) {\n        userInput.value = null;\n        vue.nextTick(() => {\n          emitChange(props.modelValue);\n        });\n      } else {\n        vue.nextTick(() => {\n          if (val) {\n            valueOnOpen.value = props.modelValue;\n          }\n        });\n      }\n    });\n    const emitChange = (val, isClear) => {\n      if (isClear || !utils.valueEquals(val, valueOnOpen.value)) {\n        emit(\"change\", val);\n        props.validateEvent && (formItem == null ? void 0 : formItem.validate(\"change\").catch(err => error.debugWarn(err)));\n      }\n    };\n    const emitInput = input => {\n      if (!utils.valueEquals(props.modelValue, input)) {\n        let formatted;\n        if (shared.isArray(input)) {\n          formatted = input.map(item => utils.formatter(item, props.valueFormat, lang.value));\n        } else if (input) {\n          formatted = utils.formatter(input, props.valueFormat, lang.value);\n        }\n        emit(\"update:modelValue\", input ? formatted : input, lang.value);\n      }\n    };\n    const emitKeydown = e => {\n      emit(\"keydown\", e);\n    };\n    const refInput = vue.computed(() => {\n      if (inputRef.value) {\n        const _r = isRangeInput.value ? inputRef.value : inputRef.value.$el;\n        return Array.from(_r.querySelectorAll(\"input\"));\n      }\n      return [];\n    });\n    const setSelectionRange = (start, end, pos) => {\n      const _inputs = refInput.value;\n      if (!_inputs.length) return;\n      if (!pos || pos === \"min\") {\n        _inputs[0].setSelectionRange(start, end);\n        _inputs[0].focus();\n      } else if (pos === \"max\") {\n        _inputs[1].setSelectionRange(start, end);\n        _inputs[1].focus();\n      }\n    };\n    const focusOnInputBox = () => {\n      focus(true, true);\n      vue.nextTick(() => {\n        ignoreFocusEvent = false;\n      });\n    };\n    const onPick = (date = \"\", visible = false) => {\n      if (!visible) {\n        ignoreFocusEvent = true;\n      }\n      pickerVisible.value = visible;\n      let result;\n      if (shared.isArray(date)) {\n        result = date.map(_ => _.toDate());\n      } else {\n        result = date ? date.toDate() : date;\n      }\n      userInput.value = null;\n      emitInput(result);\n    };\n    const onBeforeShow = () => {\n      pickerActualVisible.value = true;\n    };\n    const onShow = () => {\n      emit(\"visible-change\", true);\n    };\n    const onKeydownPopperContent = event => {\n      if ((event == null ? void 0 : event.key) === aria.EVENT_CODE.esc) {\n        focus(true, true);\n      }\n    };\n    const onHide = () => {\n      pickerActualVisible.value = false;\n      pickerVisible.value = false;\n      ignoreFocusEvent = false;\n      emit(\"visible-change\", false);\n    };\n    const handleOpen = () => {\n      pickerVisible.value = true;\n    };\n    const handleClose = () => {\n      pickerVisible.value = false;\n    };\n    const focus = (focusStartInput = true, isIgnoreFocusEvent = false) => {\n      ignoreFocusEvent = isIgnoreFocusEvent;\n      const [leftInput, rightInput] = vue.unref(refInput);\n      let input = leftInput;\n      if (!focusStartInput && isRangeInput.value) {\n        input = rightInput;\n      }\n      if (input) {\n        input.focus();\n      }\n    };\n    const handleFocusInput = e => {\n      if (props.readonly || pickerDisabled.value || pickerVisible.value || ignoreFocusEvent) {\n        return;\n      }\n      pickerVisible.value = true;\n      emit(\"focus\", e);\n    };\n    let currentHandleBlurDeferCallback = void 0;\n    const handleBlurInput = e => {\n      const handleBlurDefer = async () => {\n        setTimeout(() => {\n          var _a;\n          if (currentHandleBlurDeferCallback === handleBlurDefer) {\n            if (!(((_a = refPopper.value) == null ? void 0 : _a.isFocusInsideContent()) && !hasJustTabExitedInput) && refInput.value.filter(input => {\n              return input.contains(document.activeElement);\n            }).length === 0) {\n              handleChange();\n              pickerVisible.value = false;\n              emit(\"blur\", e);\n              props.validateEvent && (formItem == null ? void 0 : formItem.validate(\"blur\").catch(err => error.debugWarn(err)));\n            }\n            hasJustTabExitedInput = false;\n          }\n        }, 0);\n      };\n      currentHandleBlurDeferCallback = handleBlurDefer;\n      handleBlurDefer();\n    };\n    const pickerDisabled = vue.computed(() => {\n      return props.disabled || (form == null ? void 0 : form.disabled);\n    });\n    const parsedValue = vue.computed(() => {\n      let dayOrDays;\n      if (valueIsEmpty.value) {\n        if (pickerOptions.value.getDefaultValue) {\n          dayOrDays = pickerOptions.value.getDefaultValue();\n        }\n      } else {\n        if (shared.isArray(props.modelValue)) {\n          dayOrDays = props.modelValue.map(d => utils.parseDate(d, props.valueFormat, lang.value));\n        } else {\n          dayOrDays = utils.parseDate(props.modelValue, props.valueFormat, lang.value);\n        }\n      }\n      if (pickerOptions.value.getRangeAvailableTime) {\n        const availableResult = pickerOptions.value.getRangeAvailableTime(dayOrDays);\n        if (!lodashUnified.isEqual(availableResult, dayOrDays)) {\n          dayOrDays = availableResult;\n          emitInput(shared.isArray(dayOrDays) ? dayOrDays.map(_ => _.toDate()) : dayOrDays.toDate());\n        }\n      }\n      if (shared.isArray(dayOrDays) && dayOrDays.some(day => !day)) {\n        dayOrDays = [];\n      }\n      return dayOrDays;\n    });\n    const displayValue = vue.computed(() => {\n      if (!pickerOptions.value.panelReady) return \"\";\n      const formattedValue = formatDayjsToString(parsedValue.value);\n      if (shared.isArray(userInput.value)) {\n        return [userInput.value[0] || formattedValue && formattedValue[0] || \"\", userInput.value[1] || formattedValue && formattedValue[1] || \"\"];\n      } else if (userInput.value !== null) {\n        return userInput.value;\n      }\n      if (!isTimePicker.value && valueIsEmpty.value) return \"\";\n      if (!pickerVisible.value && valueIsEmpty.value) return \"\";\n      if (formattedValue) {\n        return isDatesPicker.value ? formattedValue.join(\", \") : formattedValue;\n      }\n      return \"\";\n    });\n    const isTimeLikePicker = vue.computed(() => props.type.includes(\"time\"));\n    const isTimePicker = vue.computed(() => props.type.startsWith(\"time\"));\n    const isDatesPicker = vue.computed(() => props.type === \"dates\");\n    const triggerIcon = vue.computed(() => props.prefixIcon || (isTimeLikePicker.value ? iconsVue.Clock : iconsVue.Calendar));\n    const showClose = vue.ref(false);\n    const onClearIconClick = event => {\n      if (props.readonly || pickerDisabled.value) return;\n      if (showClose.value) {\n        event.stopPropagation();\n        focusOnInputBox();\n        emitInput(null);\n        emitChange(null, true);\n        showClose.value = false;\n        pickerVisible.value = false;\n        pickerOptions.value.handleClear && pickerOptions.value.handleClear();\n      }\n    };\n    const valueIsEmpty = vue.computed(() => {\n      const {\n        modelValue\n      } = props;\n      return !modelValue || shared.isArray(modelValue) && !modelValue.filter(Boolean).length;\n    });\n    const onMouseDownInput = async event => {\n      var _a;\n      if (props.readonly || pickerDisabled.value) return;\n      if (((_a = event.target) == null ? void 0 : _a.tagName) !== \"INPUT\" || refInput.value.includes(document.activeElement)) {\n        pickerVisible.value = true;\n      }\n    };\n    const onMouseEnter = () => {\n      if (props.readonly || pickerDisabled.value) return;\n      if (!valueIsEmpty.value && props.clearable) {\n        showClose.value = true;\n      }\n    };\n    const onMouseLeave = () => {\n      showClose.value = false;\n    };\n    const onTouchStartInput = event => {\n      var _a;\n      if (props.readonly || pickerDisabled.value) return;\n      if (((_a = event.touches[0].target) == null ? void 0 : _a.tagName) !== \"INPUT\" || refInput.value.includes(document.activeElement)) {\n        pickerVisible.value = true;\n      }\n    };\n    const isRangeInput = vue.computed(() => {\n      return props.type.includes(\"range\");\n    });\n    const pickerSize = useFormCommonProps.useFormSize();\n    const popperEl = vue.computed(() => {\n      var _a, _b;\n      return (_b = (_a = vue.unref(refPopper)) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n    });\n    const actualInputRef = vue.computed(() => {\n      var _a;\n      if (vue.unref(isRangeInput)) {\n        return vue.unref(inputRef);\n      }\n      return (_a = vue.unref(inputRef)) == null ? void 0 : _a.$el;\n    });\n    core.onClickOutside(actualInputRef, e => {\n      const unrefedPopperEl = vue.unref(popperEl);\n      const inputEl = vue.unref(actualInputRef);\n      if (unrefedPopperEl && (e.target === unrefedPopperEl || e.composedPath().includes(unrefedPopperEl)) || e.target === inputEl || e.composedPath().includes(inputEl)) return;\n      pickerVisible.value = false;\n    });\n    const userInput = vue.ref(null);\n    const handleChange = () => {\n      if (userInput.value) {\n        const value = parseUserInputToDayjs(displayValue.value);\n        if (value) {\n          if (isValidValue(value)) {\n            emitInput(shared.isArray(value) ? value.map(_ => _.toDate()) : value.toDate());\n            userInput.value = null;\n          }\n        }\n      }\n      if (userInput.value === \"\") {\n        emitInput(null);\n        emitChange(null);\n        userInput.value = null;\n      }\n    };\n    const parseUserInputToDayjs = value => {\n      if (!value) return null;\n      return pickerOptions.value.parseUserInput(value);\n    };\n    const formatDayjsToString = value => {\n      if (!value) return null;\n      return pickerOptions.value.formatToString(value);\n    };\n    const isValidValue = value => {\n      return pickerOptions.value.isValidValue(value);\n    };\n    const handleKeydownInput = async event => {\n      if (props.readonly || pickerDisabled.value) return;\n      const {\n        code\n      } = event;\n      emitKeydown(event);\n      if (code === aria.EVENT_CODE.esc) {\n        if (pickerVisible.value === true) {\n          pickerVisible.value = false;\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        return;\n      }\n      if (code === aria.EVENT_CODE.down) {\n        if (pickerOptions.value.handleFocusPicker) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        if (pickerVisible.value === false) {\n          pickerVisible.value = true;\n          await vue.nextTick();\n        }\n        if (pickerOptions.value.handleFocusPicker) {\n          pickerOptions.value.handleFocusPicker();\n          return;\n        }\n      }\n      if (code === aria.EVENT_CODE.tab) {\n        hasJustTabExitedInput = true;\n        return;\n      }\n      if (code === aria.EVENT_CODE.enter || code === aria.EVENT_CODE.numpadEnter) {\n        if (userInput.value === null || userInput.value === \"\" || isValidValue(parseUserInputToDayjs(displayValue.value))) {\n          handleChange();\n          pickerVisible.value = false;\n        }\n        event.stopPropagation();\n        return;\n      }\n      if (userInput.value) {\n        event.stopPropagation();\n        return;\n      }\n      if (pickerOptions.value.handleKeydownInput) {\n        pickerOptions.value.handleKeydownInput(event);\n      }\n    };\n    const onUserInput = e => {\n      userInput.value = e;\n      if (!pickerVisible.value) {\n        pickerVisible.value = true;\n      }\n    };\n    const handleStartInput = event => {\n      const target = event.target;\n      if (userInput.value) {\n        userInput.value = [target.value, userInput.value[1]];\n      } else {\n        userInput.value = [target.value, null];\n      }\n    };\n    const handleEndInput = event => {\n      const target = event.target;\n      if (userInput.value) {\n        userInput.value = [userInput.value[0], target.value];\n      } else {\n        userInput.value = [null, target.value];\n      }\n    };\n    const handleStartChange = () => {\n      var _a;\n      const values = userInput.value;\n      const value = parseUserInputToDayjs(values && values[0]);\n      const parsedVal = vue.unref(parsedValue);\n      if (value && value.isValid()) {\n        userInput.value = [formatDayjsToString(value), ((_a = displayValue.value) == null ? void 0 : _a[1]) || null];\n        const newValue = [value, parsedVal && (parsedVal[1] || null)];\n        if (isValidValue(newValue)) {\n          emitInput(newValue);\n          userInput.value = null;\n        }\n      }\n    };\n    const handleEndChange = () => {\n      var _a;\n      const values = vue.unref(userInput);\n      const value = parseUserInputToDayjs(values && values[1]);\n      const parsedVal = vue.unref(parsedValue);\n      if (value && value.isValid()) {\n        userInput.value = [((_a = vue.unref(displayValue)) == null ? void 0 : _a[0]) || null, formatDayjsToString(value)];\n        const newValue = [parsedVal && parsedVal[0], value];\n        if (isValidValue(newValue)) {\n          emitInput(newValue);\n          userInput.value = null;\n        }\n      }\n    };\n    const pickerOptions = vue.ref({});\n    const onSetPickerOption = e => {\n      pickerOptions.value[e[0]] = e[1];\n      pickerOptions.value.panelReady = true;\n    };\n    const onCalendarChange = e => {\n      emit(\"calendar-change\", e);\n    };\n    const onPanelChange = (value, mode, view) => {\n      emit(\"panel-change\", value, mode, view);\n    };\n    vue.provide(\"EP_PICKER_BASE\", {\n      props\n    });\n    expose({\n      focus,\n      handleFocusInput,\n      handleBlurInput,\n      handleOpen,\n      handleClose,\n      onPick\n    });\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createBlock(vue.unref(index$2.ElTooltip), vue.mergeProps({\n        ref_key: \"refPopper\",\n        ref: refPopper,\n        visible: pickerVisible.value,\n        effect: \"light\",\n        pure: \"\",\n        trigger: \"click\"\n      }, _ctx.$attrs, {\n        role: \"dialog\",\n        teleported: \"\",\n        transition: `${vue.unref(nsDate).namespace.value}-zoom-in-top`,\n        \"popper-class\": [`${vue.unref(nsDate).namespace.value}-picker__popper`, _ctx.popperClass],\n        \"popper-options\": vue.unref(elPopperOptions),\n        \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n        \"gpu-acceleration\": false,\n        \"stop-popper-mouse-event\": false,\n        \"hide-after\": 0,\n        persistent: \"\",\n        onBeforeShow,\n        onShow,\n        onHide\n      }), {\n        default: vue.withCtx(() => [!vue.unref(isRangeInput) ? (vue.openBlock(), vue.createBlock(vue.unref(index$3.ElInput), {\n          key: 0,\n          id: _ctx.id,\n          ref_key: \"inputRef\",\n          ref: inputRef,\n          \"container-role\": \"combobox\",\n          \"model-value\": vue.unref(displayValue),\n          name: _ctx.name,\n          size: vue.unref(pickerSize),\n          disabled: vue.unref(pickerDisabled),\n          placeholder: _ctx.placeholder,\n          class: vue.normalizeClass([vue.unref(nsDate).b(\"editor\"), vue.unref(nsDate).bm(\"editor\", _ctx.type), _ctx.$attrs.class]),\n          style: vue.normalizeStyle(_ctx.$attrs.style),\n          readonly: !_ctx.editable || _ctx.readonly || vue.unref(isDatesPicker) || _ctx.type === \"week\",\n          label: _ctx.label,\n          tabindex: _ctx.tabindex,\n          \"validate-event\": false,\n          onInput: onUserInput,\n          onFocus: handleFocusInput,\n          onBlur: handleBlurInput,\n          onKeydown: handleKeydownInput,\n          onChange: handleChange,\n          onMousedown: onMouseDownInput,\n          onMouseenter: onMouseEnter,\n          onMouseleave: onMouseLeave,\n          onTouchstart: onTouchStartInput,\n          onClick: _cache[0] || (_cache[0] = vue.withModifiers(() => {}, [\"stop\"]))\n        }, {\n          prefix: vue.withCtx(() => [vue.unref(triggerIcon) ? (vue.openBlock(), vue.createBlock(vue.unref(index$4.ElIcon), {\n            key: 0,\n            class: vue.normalizeClass(vue.unref(nsInput).e(\"icon\")),\n            onMousedown: vue.withModifiers(onMouseDownInput, [\"prevent\"]),\n            onTouchstart: onTouchStartInput\n          }, {\n            default: vue.withCtx(() => [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(vue.unref(triggerIcon))))]),\n            _: 1\n          }, 8, [\"class\", \"onMousedown\"])) : vue.createCommentVNode(\"v-if\", true)]),\n          suffix: vue.withCtx(() => [showClose.value && _ctx.clearIcon ? (vue.openBlock(), vue.createBlock(vue.unref(index$4.ElIcon), {\n            key: 0,\n            class: vue.normalizeClass(`${vue.unref(nsInput).e(\"icon\")} clear-icon`),\n            onClick: vue.withModifiers(onClearIconClick, [\"stop\"])\n          }, {\n            default: vue.withCtx(() => [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.clearIcon)))]),\n            _: 1\n          }, 8, [\"class\", \"onClick\"])) : vue.createCommentVNode(\"v-if\", true)]),\n          _: 1\n        }, 8, [\"id\", \"model-value\", \"name\", \"size\", \"disabled\", \"placeholder\", \"class\", \"style\", \"readonly\", \"label\", \"tabindex\", \"onKeydown\"])) : (vue.openBlock(), vue.createElementBlock(\"div\", {\n          key: 1,\n          ref_key: \"inputRef\",\n          ref: inputRef,\n          class: vue.normalizeClass(vue.unref(rangeInputKls)),\n          style: vue.normalizeStyle(_ctx.$attrs.style),\n          onClick: handleFocusInput,\n          onMouseenter: onMouseEnter,\n          onMouseleave: onMouseLeave,\n          onTouchstart: onTouchStartInput,\n          onKeydown: handleKeydownInput\n        }, [vue.unref(triggerIcon) ? (vue.openBlock(), vue.createBlock(vue.unref(index$4.ElIcon), {\n          key: 0,\n          class: vue.normalizeClass([vue.unref(nsInput).e(\"icon\"), vue.unref(nsRange).e(\"icon\")]),\n          onMousedown: vue.withModifiers(onMouseDownInput, [\"prevent\"]),\n          onTouchstart: onTouchStartInput\n        }, {\n          default: vue.withCtx(() => [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(vue.unref(triggerIcon))))]),\n          _: 1\n        }, 8, [\"class\", \"onMousedown\"])) : vue.createCommentVNode(\"v-if\", true), vue.createElementVNode(\"input\", {\n          id: _ctx.id && _ctx.id[0],\n          autocomplete: \"off\",\n          name: _ctx.name && _ctx.name[0],\n          placeholder: _ctx.startPlaceholder,\n          value: vue.unref(displayValue) && vue.unref(displayValue)[0],\n          disabled: vue.unref(pickerDisabled),\n          readonly: !_ctx.editable || _ctx.readonly,\n          class: vue.normalizeClass(vue.unref(nsRange).b(\"input\")),\n          onMousedown: onMouseDownInput,\n          onInput: handleStartInput,\n          onChange: handleStartChange,\n          onFocus: handleFocusInput,\n          onBlur: handleBlurInput\n        }, null, 42, _hoisted_1), vue.renderSlot(_ctx.$slots, \"range-separator\", {}, () => [vue.createElementVNode(\"span\", {\n          class: vue.normalizeClass(vue.unref(nsRange).b(\"separator\"))\n        }, vue.toDisplayString(_ctx.rangeSeparator), 3)]), vue.createElementVNode(\"input\", {\n          id: _ctx.id && _ctx.id[1],\n          autocomplete: \"off\",\n          name: _ctx.name && _ctx.name[1],\n          placeholder: _ctx.endPlaceholder,\n          value: vue.unref(displayValue) && vue.unref(displayValue)[1],\n          disabled: vue.unref(pickerDisabled),\n          readonly: !_ctx.editable || _ctx.readonly,\n          class: vue.normalizeClass(vue.unref(nsRange).b(\"input\")),\n          onMousedown: onMouseDownInput,\n          onFocus: handleFocusInput,\n          onBlur: handleBlurInput,\n          onInput: handleEndInput,\n          onChange: handleEndChange\n        }, null, 42, _hoisted_2), _ctx.clearIcon ? (vue.openBlock(), vue.createBlock(vue.unref(index$4.ElIcon), {\n          key: 1,\n          class: vue.normalizeClass(vue.unref(clearIconKls)),\n          onClick: onClearIconClick\n        }, {\n          default: vue.withCtx(() => [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.clearIcon)))]),\n          _: 1\n        }, 8, [\"class\"])) : vue.createCommentVNode(\"v-if\", true)], 38))]),\n        content: vue.withCtx(() => [vue.renderSlot(_ctx.$slots, \"default\", {\n          visible: pickerVisible.value,\n          actualVisible: pickerActualVisible.value,\n          parsedValue: vue.unref(parsedValue),\n          format: _ctx.format,\n          dateFormat: _ctx.dateFormat,\n          timeFormat: _ctx.timeFormat,\n          unlinkPanels: _ctx.unlinkPanels,\n          type: _ctx.type,\n          defaultValue: _ctx.defaultValue,\n          onPick,\n          onSelectRange: setSelectionRange,\n          onSetPickerOption,\n          onCalendarChange,\n          onPanelChange,\n          onKeydown: onKeydownPopperContent,\n          onMousedown: _cache[1] || (_cache[1] = vue.withModifiers(() => {}, [\"stop\"]))\n        })]),\n        _: 3\n      }, 16, [\"visible\", \"transition\", \"popper-class\", \"popper-options\"]);\n    };\n  }\n});\nvar CommonPicker = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/common/picker.vue\"]]);\nexports[\"default\"] = CommonPicker;","map":{"version":3,"names":["name","attrs","vue","useAttrs","lang","index","useLocale","nsDate","index$1","useNamespace","nsInput","nsRange","form","formItem","useFormItem","elPopperOptions","inject","refPopper","ref","inputRef","pickerVisible","pickerActualVisible","valueOnOpen","hasJustTabExitedInput","ignoreFocusEvent","rangeInputKls","computed","b","bm","props","type","e","is","pickerDisabled","value","pickerSize","class","clearIconKls","showClose","watch","val","userInput","nextTick","emitChange","modelValue","isClear","utils","valueEquals","emit","validateEvent","validate","catch","err","error","debugWarn","emitInput","input","formatted","shared","isArray","map","item","formatter","valueFormat","emitKeydown","refInput","_r","isRangeInput","$el","Array","from","querySelectorAll","setSelectionRange","start","end","pos","_inputs","length","focus","focusOnInputBox","onPick","date","visible","result","_","toDate","onBeforeShow","onShow","onKeydownPopperContent","event","key","aria","EVENT_CODE","esc","onHide","handleOpen","handleClose","focusStartInput","isIgnoreFocusEvent","leftInput","rightInput","unref","handleFocusInput","readonly","currentHandleBlurDeferCallback","handleBlurInput","handleBlurDefer","setTimeout","_a","isFocusInsideContent","filter","contains","document","activeElement","handleChange","disabled","parsedValue","dayOrDays","valueIsEmpty","pickerOptions","getDefaultValue","d","parseDate","getRangeAvailableTime","availableResult","lodashUnified","isEqual","some","day","displayValue","panelReady","formattedValue","formatDayjsToString","isTimePicker","isDatesPicker","join","isTimeLikePicker","includes","startsWith","triggerIcon","prefixIcon","iconsVue","Clock","Calendar","onClearIconClick","stopPropagation","handleClear","Boolean","onMouseDownInput","target","tagName","onMouseEnter","clearable","onMouseLeave","onTouchStartInput","touches","useFormCommonProps","useFormSize","popperEl","_b","popperRef","contentRef","actualInputRef","core","onClickOutside","unrefedPopperEl","inputEl","composedPath","parseUserInputToDayjs","isValidValue","parseUserInput","formatToString","handleKeydownInput","code","preventDefault","down","handleFocusPicker","tab","enter","numpadEnter","onUserInput","handleStartInput","handleEndInput","handleStartChange","values","parsedVal","isValid","newValue","handleEndChange","onSetPickerOption","onCalendarChange","onPanelChange","mode","view","provide"],"sources":["../../../../../../../packages/components/time-picker/src/common/picker.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"refPopper\"\n    :visible=\"pickerVisible\"\n    effect=\"light\"\n    pure\n    trigger=\"click\"\n    v-bind=\"$attrs\"\n    role=\"dialog\"\n    teleported\n    :transition=\"`${nsDate.namespace.value}-zoom-in-top`\"\n    :popper-class=\"[`${nsDate.namespace.value}-picker__popper`, popperClass]\"\n    :popper-options=\"elPopperOptions\"\n    :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n    :gpu-acceleration=\"false\"\n    :stop-popper-mouse-event=\"false\"\n    :hide-after=\"0\"\n    persistent\n    @before-show=\"onBeforeShow\"\n    @show=\"onShow\"\n    @hide=\"onHide\"\n  >\n    <template #default>\n      <el-input\n        v-if=\"!isRangeInput\"\n        :id=\"(id as string | undefined)\"\n        ref=\"inputRef\"\n        container-role=\"combobox\"\n        :model-value=\"(displayValue as string)\"\n        :name=\"name\"\n        :size=\"pickerSize\"\n        :disabled=\"pickerDisabled\"\n        :placeholder=\"placeholder\"\n        :class=\"[nsDate.b('editor'), nsDate.bm('editor', type), $attrs.class]\"\n        :style=\"$attrs.style\"\n        :readonly=\"!editable || readonly || isDatesPicker || type === 'week'\"\n        :label=\"label\"\n        :tabindex=\"tabindex\"\n        :validate-event=\"false\"\n        @input=\"onUserInput\"\n        @focus=\"handleFocusInput\"\n        @blur=\"handleBlurInput\"\n        @keydown=\"\n          //\n          handleKeydownInput as any\n        \"\n        @change=\"handleChange\"\n        @mousedown=\"onMouseDownInput\"\n        @mouseenter=\"onMouseEnter\"\n        @mouseleave=\"onMouseLeave\"\n        @touchstart=\"onTouchStartInput\"\n        @click.stop\n      >\n        <template #prefix>\n          <el-icon\n            v-if=\"triggerIcon\"\n            :class=\"nsInput.e('icon')\"\n            @mousedown.prevent=\"onMouseDownInput\"\n            @touchstart=\"onTouchStartInput\"\n          >\n            <component :is=\"triggerIcon\" />\n          </el-icon>\n        </template>\n        <template #suffix>\n          <el-icon\n            v-if=\"showClose && clearIcon\"\n            :class=\"`${nsInput.e('icon')} clear-icon`\"\n            @click.stop=\"onClearIconClick\"\n          >\n            <component :is=\"clearIcon\" />\n          </el-icon>\n        </template>\n      </el-input>\n      <div\n        v-else\n        ref=\"inputRef\"\n        :class=\"rangeInputKls\"\n        :style=\"($attrs.style as any)\"\n        @click=\"handleFocusInput\"\n        @mouseenter=\"onMouseEnter\"\n        @mouseleave=\"onMouseLeave\"\n        @touchstart=\"onTouchStartInput\"\n        @keydown=\"handleKeydownInput\"\n      >\n        <el-icon\n          v-if=\"triggerIcon\"\n          :class=\"[nsInput.e('icon'), nsRange.e('icon')]\"\n          @mousedown.prevent=\"onMouseDownInput\"\n          @touchstart=\"onTouchStartInput\"\n        >\n          <component :is=\"triggerIcon\" />\n        </el-icon>\n        <input\n          :id=\"id && id[0]\"\n          autocomplete=\"off\"\n          :name=\"name && name[0]\"\n          :placeholder=\"startPlaceholder\"\n          :value=\"displayValue && displayValue[0]\"\n          :disabled=\"pickerDisabled\"\n          :readonly=\"!editable || readonly\"\n          :class=\"nsRange.b('input')\"\n          @mousedown=\"onMouseDownInput\"\n          @input=\"handleStartInput\"\n          @change=\"handleStartChange\"\n          @focus=\"handleFocusInput\"\n          @blur=\"handleBlurInput\"\n        />\n        <slot name=\"range-separator\">\n          <span :class=\"nsRange.b('separator')\">{{ rangeSeparator }}</span>\n        </slot>\n        <input\n          :id=\"id && id[1]\"\n          autocomplete=\"off\"\n          :name=\"name && name[1]\"\n          :placeholder=\"endPlaceholder\"\n          :value=\"displayValue && displayValue[1]\"\n          :disabled=\"pickerDisabled\"\n          :readonly=\"!editable || readonly\"\n          :class=\"nsRange.b('input')\"\n          @mousedown=\"onMouseDownInput\"\n          @focus=\"handleFocusInput\"\n          @blur=\"handleBlurInput\"\n          @input=\"handleEndInput\"\n          @change=\"handleEndChange\"\n        />\n        <el-icon\n          v-if=\"clearIcon\"\n          :class=\"clearIconKls\"\n          @click=\"onClearIconClick\"\n        >\n          <component :is=\"clearIcon\" />\n        </el-icon>\n      </div>\n    </template>\n    <template #content>\n      <slot\n        :visible=\"pickerVisible\"\n        :actual-visible=\"pickerActualVisible\"\n        :parsed-value=\"parsedValue\"\n        :format=\"format\"\n        :date-format=\"dateFormat\"\n        :time-format=\"timeFormat\"\n        :unlink-panels=\"unlinkPanels\"\n        :type=\"type\"\n        :default-value=\"defaultValue\"\n        @pick=\"onPick\"\n        @select-range=\"setSelectionRange\"\n        @set-picker-option=\"onSetPickerOption\"\n        @calendar-change=\"onCalendarChange\"\n        @panel-change=\"onPanelChange\"\n        @keydown=\"onKeydownPopperContent\"\n        @mousedown.stop\n      />\n    </template>\n  </el-tooltip>\n</template>\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  inject,\n  nextTick,\n  provide,\n  ref,\n  unref,\n  useAttrs,\n  watch,\n} from 'vue'\nimport { isEqual } from 'lodash-unified'\nimport { onClickOutside } from '@vueuse/core'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { useFormItem, useFormSize } from '@element-plus/components/form'\nimport ElInput from '@element-plus/components/input'\nimport ElIcon from '@element-plus/components/icon'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport { debugWarn, isArray } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { Calendar, Clock } from '@element-plus/icons-vue'\nimport { formatter, parseDate, valueEquals } from '../utils'\nimport { timePickerDefaultProps } from './props'\n\nimport type { Dayjs } from 'dayjs'\nimport type { ComponentPublicInstance } from 'vue'\nimport type { Options } from '@popperjs/core'\nimport type {\n  DateModelType,\n  DateOrDates,\n  DayOrDays,\n  PickerOptions,\n  SingleOrRange,\n  TimePickerDefaultProps,\n  UserInput,\n} from './props'\nimport type { TooltipInstance } from '@element-plus/components/tooltip'\n\n// Date object and string\n\ndefineOptions({\n  name: 'Picker',\n})\n\nconst props = defineProps(timePickerDefaultProps)\nconst emit = defineEmits([\n  'update:modelValue',\n  'change',\n  'focus',\n  'blur',\n  'calendar-change',\n  'panel-change',\n  'visible-change',\n  'keydown',\n])\nconst attrs = useAttrs()\n\nconst { lang } = useLocale()\n\nconst nsDate = useNamespace('date')\nconst nsInput = useNamespace('input')\nconst nsRange = useNamespace('range')\n\nconst { form, formItem } = useFormItem()\nconst elPopperOptions = inject('ElPopperOptions', {} as Options)\n\nconst refPopper = ref<TooltipInstance>()\nconst inputRef = ref<HTMLElement | ComponentPublicInstance>()\nconst pickerVisible = ref(false)\nconst pickerActualVisible = ref(false)\nconst valueOnOpen = ref<TimePickerDefaultProps['modelValue'] | null>(null)\n\nlet hasJustTabExitedInput = false\nlet ignoreFocusEvent = false\n\nconst rangeInputKls = computed(() => [\n  nsDate.b('editor'),\n  nsDate.bm('editor', props.type),\n  nsInput.e('wrapper'),\n  nsDate.is('disabled', pickerDisabled.value),\n  nsDate.is('active', pickerVisible.value),\n  nsRange.b('editor'),\n  pickerSize ? nsRange.bm('editor', pickerSize.value) : '',\n  attrs.class,\n])\n\nconst clearIconKls = computed(() => [\n  nsInput.e('icon'),\n  nsRange.e('close-icon'),\n  !showClose.value ? nsRange.e('close-icon--hidden') : '',\n])\n\nwatch(pickerVisible, (val) => {\n  if (!val) {\n    userInput.value = null\n    nextTick(() => {\n      emitChange(props.modelValue)\n    })\n  } else {\n    nextTick(() => {\n      if (val) {\n        valueOnOpen.value = props.modelValue\n      }\n    })\n  }\n})\nconst emitChange = (\n  val: TimePickerDefaultProps['modelValue'] | null,\n  isClear?: boolean\n) => {\n  // determine user real change only\n  if (isClear || !valueEquals(val, valueOnOpen.value)) {\n    emit('change', val)\n    props.validateEvent &&\n      formItem?.validate('change').catch((err) => debugWarn(err))\n  }\n}\nconst emitInput = (input: SingleOrRange<DateModelType | Dayjs> | null) => {\n  if (!valueEquals(props.modelValue, input)) {\n    let formatted\n    if (isArray(input)) {\n      formatted = input.map((item) =>\n        formatter(item, props.valueFormat, lang.value)\n      )\n    } else if (input) {\n      formatted = formatter(input, props.valueFormat, lang.value)\n    }\n    emit('update:modelValue', input ? formatted : input, lang.value)\n  }\n}\nconst emitKeydown = (e: KeyboardEvent) => {\n  emit('keydown', e)\n}\n\nconst refInput = computed<HTMLInputElement[]>(() => {\n  if (inputRef.value) {\n    const _r = isRangeInput.value\n      ? inputRef.value\n      : (inputRef.value as any as ComponentPublicInstance).$el\n    return Array.from<HTMLInputElement>(_r.querySelectorAll('input'))\n  }\n  return []\n})\n\nconst setSelectionRange = (start: number, end: number, pos?: 'min' | 'max') => {\n  const _inputs = refInput.value\n  if (!_inputs.length) return\n  if (!pos || pos === 'min') {\n    _inputs[0].setSelectionRange(start, end)\n    _inputs[0].focus()\n  } else if (pos === 'max') {\n    _inputs[1].setSelectionRange(start, end)\n    _inputs[1].focus()\n  }\n}\nconst focusOnInputBox = () => {\n  focus(true, true)\n  nextTick(() => {\n    ignoreFocusEvent = false\n  })\n}\n\nconst onPick = (date: any = '', visible = false) => {\n  if (!visible) {\n    ignoreFocusEvent = true\n  }\n  pickerVisible.value = visible\n  let result\n  if (isArray(date)) {\n    result = date.map((_) => _.toDate())\n  } else {\n    // clear btn emit null\n    result = date ? date.toDate() : date\n  }\n  userInput.value = null\n  emitInput(result)\n}\n\nconst onBeforeShow = () => {\n  pickerActualVisible.value = true\n}\n\nconst onShow = () => {\n  emit('visible-change', true)\n}\n\nconst onKeydownPopperContent = (event: KeyboardEvent) => {\n  if ((event as KeyboardEvent)?.key === EVENT_CODE.esc) {\n    focus(true, true)\n  }\n}\n\nconst onHide = () => {\n  pickerActualVisible.value = false\n  pickerVisible.value = false\n  ignoreFocusEvent = false\n  emit('visible-change', false)\n}\n\nconst handleOpen = () => {\n  pickerVisible.value = true\n}\n\nconst handleClose = () => {\n  pickerVisible.value = false\n}\n\nconst focus = (focusStartInput = true, isIgnoreFocusEvent = false) => {\n  ignoreFocusEvent = isIgnoreFocusEvent\n  const [leftInput, rightInput] = unref(refInput)\n  let input = leftInput\n  if (!focusStartInput && isRangeInput.value) {\n    input = rightInput\n  }\n  if (input) {\n    input.focus()\n  }\n}\n\nconst handleFocusInput = (e?: FocusEvent) => {\n  if (\n    props.readonly ||\n    pickerDisabled.value ||\n    pickerVisible.value ||\n    ignoreFocusEvent\n  ) {\n    return\n  }\n  pickerVisible.value = true\n  emit('focus', e)\n}\n\nlet currentHandleBlurDeferCallback:\n  | (() => Promise<void> | undefined)\n  | undefined = undefined\n\n// Check if document.activeElement is inside popper or any input before popper close\nconst handleBlurInput = (e?: FocusEvent) => {\n  const handleBlurDefer = async () => {\n    setTimeout(() => {\n      if (currentHandleBlurDeferCallback === handleBlurDefer) {\n        if (\n          !(\n            refPopper.value?.isFocusInsideContent() && !hasJustTabExitedInput\n          ) &&\n          refInput.value.filter((input) => {\n            return input.contains(document.activeElement)\n          }).length === 0\n        ) {\n          handleChange()\n          pickerVisible.value = false\n          emit('blur', e)\n          props.validateEvent &&\n            formItem?.validate('blur').catch((err) => debugWarn(err))\n        }\n        hasJustTabExitedInput = false\n      }\n    }, 0)\n  }\n  currentHandleBlurDeferCallback = handleBlurDefer\n  handleBlurDefer()\n}\n\nconst pickerDisabled = computed(() => {\n  return props.disabled || form?.disabled\n})\n\nconst parsedValue = computed(() => {\n  let dayOrDays: DayOrDays\n  if (valueIsEmpty.value) {\n    if (pickerOptions.value.getDefaultValue) {\n      dayOrDays = pickerOptions.value.getDefaultValue()\n    }\n  } else {\n    if (isArray(props.modelValue)) {\n      dayOrDays = props.modelValue.map((d) =>\n        parseDate(d, props.valueFormat, lang.value)\n      ) as [Dayjs, Dayjs]\n    } else {\n      dayOrDays = parseDate(props.modelValue, props.valueFormat, lang.value)!\n    }\n  }\n\n  if (pickerOptions.value.getRangeAvailableTime) {\n    const availableResult = pickerOptions.value.getRangeAvailableTime(\n      dayOrDays!\n    )\n    if (!isEqual(availableResult, dayOrDays!)) {\n      dayOrDays = availableResult\n      emitInput(\n        (isArray(dayOrDays)\n          ? dayOrDays.map((_) => _.toDate())\n          : dayOrDays.toDate()) as SingleOrRange<Date>\n      )\n    }\n  }\n  if (isArray(dayOrDays!) && dayOrDays.some((day) => !day)) {\n    dayOrDays = [] as unknown as DayOrDays\n  }\n  return dayOrDays!\n})\n\nconst displayValue = computed<UserInput>(() => {\n  if (!pickerOptions.value.panelReady) return ''\n  const formattedValue = formatDayjsToString(parsedValue.value)\n  if (isArray(userInput.value)) {\n    return [\n      userInput.value[0] || (formattedValue && formattedValue[0]) || '',\n      userInput.value[1] || (formattedValue && formattedValue[1]) || '',\n    ]\n  } else if (userInput.value !== null) {\n    return userInput.value\n  }\n  if (!isTimePicker.value && valueIsEmpty.value) return ''\n  if (!pickerVisible.value && valueIsEmpty.value) return ''\n  if (formattedValue) {\n    return isDatesPicker.value\n      ? (formattedValue as Array<string>).join(', ')\n      : formattedValue\n  }\n  return ''\n})\n\nconst isTimeLikePicker = computed(() => props.type.includes('time'))\n\nconst isTimePicker = computed(() => props.type.startsWith('time'))\n\nconst isDatesPicker = computed(() => props.type === 'dates')\n\nconst triggerIcon = computed(\n  () => props.prefixIcon || (isTimeLikePicker.value ? Clock : Calendar)\n)\n\nconst showClose = ref(false)\n\nconst onClearIconClick = (event: MouseEvent) => {\n  if (props.readonly || pickerDisabled.value) return\n  if (showClose.value) {\n    event.stopPropagation()\n    focusOnInputBox()\n    emitInput(null)\n    emitChange(null, true)\n    showClose.value = false\n    pickerVisible.value = false\n    pickerOptions.value.handleClear && pickerOptions.value.handleClear()\n  }\n}\n\nconst valueIsEmpty = computed(() => {\n  const { modelValue } = props\n  return (\n    !modelValue || (isArray(modelValue) && !modelValue.filter(Boolean).length)\n  )\n})\n\nconst onMouseDownInput = async (event: MouseEvent) => {\n  if (props.readonly || pickerDisabled.value) return\n  if (\n    (event.target as HTMLElement)?.tagName !== 'INPUT' ||\n    refInput.value.includes(document.activeElement as HTMLInputElement)\n  ) {\n    pickerVisible.value = true\n  }\n}\nconst onMouseEnter = () => {\n  if (props.readonly || pickerDisabled.value) return\n  if (!valueIsEmpty.value && props.clearable) {\n    showClose.value = true\n  }\n}\nconst onMouseLeave = () => {\n  showClose.value = false\n}\nconst onTouchStartInput = (event: TouchEvent) => {\n  if (props.readonly || pickerDisabled.value) return\n  if (\n    (event.touches[0].target as HTMLElement)?.tagName !== 'INPUT' ||\n    refInput.value.includes(document.activeElement as HTMLInputElement)\n  ) {\n    pickerVisible.value = true\n  }\n}\nconst isRangeInput = computed(() => {\n  return props.type.includes('range')\n})\n\nconst pickerSize = useFormSize()\n\nconst popperEl = computed(() => unref(refPopper)?.popperRef?.contentRef)\nconst actualInputRef = computed(() => {\n  if (unref(isRangeInput)) {\n    return unref(inputRef)\n  }\n\n  return (unref(inputRef) as ComponentPublicInstance)?.$el\n})\n\nonClickOutside(actualInputRef, (e: PointerEvent) => {\n  const unrefedPopperEl = unref(popperEl)\n  const inputEl = unref(actualInputRef)\n  if (\n    (unrefedPopperEl &&\n      (e.target === unrefedPopperEl ||\n        e.composedPath().includes(unrefedPopperEl))) ||\n    e.target === inputEl ||\n    e.composedPath().includes(inputEl)\n  )\n    return\n  pickerVisible.value = false\n})\n\nconst userInput = ref<UserInput>(null)\n\nconst handleChange = () => {\n  if (userInput.value) {\n    const value = parseUserInputToDayjs(displayValue.value)\n    if (value) {\n      if (isValidValue(value)) {\n        emitInput(\n          (isArray(value)\n            ? value.map((_) => _.toDate())\n            : value.toDate()) as DateOrDates\n        )\n        userInput.value = null\n      }\n    }\n  }\n  if (userInput.value === '') {\n    emitInput(null)\n    emitChange(null)\n    userInput.value = null\n  }\n}\n\nconst parseUserInputToDayjs = (value: UserInput) => {\n  if (!value) return null\n  return pickerOptions.value.parseUserInput!(value)\n}\n\nconst formatDayjsToString = (value: DayOrDays) => {\n  if (!value) return null\n  return pickerOptions.value.formatToString!(value)\n}\n\nconst isValidValue = (value: DayOrDays) => {\n  return pickerOptions.value.isValidValue!(value)\n}\n\nconst handleKeydownInput = async (event: KeyboardEvent) => {\n  if (props.readonly || pickerDisabled.value) return\n\n  const { code } = event\n  emitKeydown(event)\n  if (code === EVENT_CODE.esc) {\n    if (pickerVisible.value === true) {\n      pickerVisible.value = false\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    return\n  }\n\n  if (code === EVENT_CODE.down) {\n    if (pickerOptions.value.handleFocusPicker) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    if (pickerVisible.value === false) {\n      pickerVisible.value = true\n      await nextTick()\n    }\n    if (pickerOptions.value.handleFocusPicker) {\n      pickerOptions.value.handleFocusPicker()\n      return\n    }\n  }\n\n  if (code === EVENT_CODE.tab) {\n    hasJustTabExitedInput = true\n    return\n  }\n\n  if (code === EVENT_CODE.enter || code === EVENT_CODE.numpadEnter) {\n    if (\n      userInput.value === null ||\n      userInput.value === '' ||\n      isValidValue(parseUserInputToDayjs(displayValue.value) as DayOrDays)\n    ) {\n      handleChange()\n      pickerVisible.value = false\n    }\n    event.stopPropagation()\n    return\n  }\n\n  // if user is typing, do not let picker handle key input\n  if (userInput.value) {\n    event.stopPropagation()\n    return\n  }\n  if (pickerOptions.value.handleKeydownInput) {\n    pickerOptions.value.handleKeydownInput(event)\n  }\n}\nconst onUserInput = (e: string) => {\n  userInput.value = e\n  // Temporary fix when the picker is dismissed and the input box\n  // is focused, just mimic the behavior of antdesign.\n  if (!pickerVisible.value) {\n    pickerVisible.value = true\n  }\n}\n\nconst handleStartInput = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  if (userInput.value) {\n    userInput.value = [target.value, userInput.value[1]]\n  } else {\n    userInput.value = [target.value, null]\n  }\n}\n\nconst handleEndInput = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  if (userInput.value) {\n    userInput.value = [userInput.value[0], target.value]\n  } else {\n    userInput.value = [null, target.value]\n  }\n}\n\nconst handleStartChange = () => {\n  const values = userInput.value as string[]\n  const value = parseUserInputToDayjs(values && values[0]) as Dayjs\n  const parsedVal = unref(parsedValue) as [Dayjs, Dayjs]\n  if (value && value.isValid()) {\n    userInput.value = [\n      formatDayjsToString(value) as string,\n      displayValue.value?.[1] || null,\n    ]\n    const newValue = [value, parsedVal && (parsedVal[1] || null)] as DayOrDays\n    if (isValidValue(newValue)) {\n      emitInput(newValue)\n      userInput.value = null\n    }\n  }\n}\n\nconst handleEndChange = () => {\n  const values = unref(userInput) as string[]\n  const value = parseUserInputToDayjs(values && values[1]) as Dayjs\n  const parsedVal = unref(parsedValue) as [Dayjs, Dayjs]\n  if (value && value.isValid()) {\n    userInput.value = [\n      unref(displayValue)?.[0] || null,\n      formatDayjsToString(value) as string,\n    ]\n    const newValue = [parsedVal && parsedVal[0], value] as DayOrDays\n    if (isValidValue(newValue)) {\n      emitInput(newValue)\n      userInput.value = null\n    }\n  }\n}\n\nconst pickerOptions = ref<Partial<PickerOptions>>({})\nconst onSetPickerOption = <T extends keyof PickerOptions>(\n  e: [T, PickerOptions[T]]\n) => {\n  pickerOptions.value[e[0]] = e[1]\n  pickerOptions.value.panelReady = true\n}\n\nconst onCalendarChange = (e: [Date, null | Date]) => {\n  emit('calendar-change', e)\n}\n\nconst onPanelChange = (\n  value: [Dayjs, Dayjs],\n  mode: 'month' | 'year',\n  view: unknown\n) => {\n  emit('panel-change', value, mode, view)\n}\n\nprovide('EP_PICKER_BASE', {\n  props,\n})\n\ndefineExpose({\n  /**\n   * @description focus input box.\n   */\n  focus,\n  /**\n   * @description emit focus event\n   */\n  handleFocusInput,\n  /**\n   * @description emit blur event\n   */\n  handleBlurInput,\n  /**\n   * @description opens picker\n   */\n  handleOpen,\n  /**\n   * @description closes picker\n   */\n  handleClose,\n  /**\n   * @description pick item manually\n   */\n  onPick,\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}