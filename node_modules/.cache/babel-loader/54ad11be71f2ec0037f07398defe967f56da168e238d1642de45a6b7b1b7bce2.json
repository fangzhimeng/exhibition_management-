{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar dayjs = require('dayjs');\nvar index$1 = require('../../../icon/index.js');\nrequire('../../../../hooks/index.js');\nvar iconsVue = require('@element-plus/icons-vue');\nvar panelMonthRange = require('../props/panel-month-range.js');\nvar useMonthRangeHeader = require('../composables/use-month-range-header.js');\nvar useRangePicker = require('../composables/use-range-picker.js');\nvar basicMonthTable = require('./basic-month-table.js');\nvar pluginVue_exportHelper = require('../../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../../hooks/use-locale/index.js');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = [\"disabled\"];\nconst _hoisted_3 = [\"disabled\"];\nconst unit = \"year\";\nconst __default__ = vue.defineComponent({\n  name: \"DatePickerMonthRange\"\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: panelMonthRange.panelMonthRangeProps,\n  emits: panelMonthRange.panelMonthRangeEmits,\n  setup(__props, {\n    emit\n  }) {\n    const props = __props;\n    const {\n      lang\n    } = index.useLocale();\n    const pickerBase = vue.inject(\"EP_PICKER_BASE\");\n    const {\n      shortcuts,\n      disabledDate,\n      format\n    } = pickerBase.props;\n    const defaultValue = vue.toRef(pickerBase.props, \"defaultValue\");\n    const leftDate = vue.ref(dayjs__default[\"default\"]().locale(lang.value));\n    const rightDate = vue.ref(dayjs__default[\"default\"]().locale(lang.value).add(1, unit));\n    const {\n      minDate,\n      maxDate,\n      rangeState,\n      ppNs,\n      drpNs,\n      handleChangeRange,\n      handleRangeConfirm,\n      handleShortcutClick,\n      onSelect\n    } = useRangePicker.useRangePicker(props, {\n      defaultValue,\n      leftDate,\n      rightDate,\n      unit,\n      onParsedValueChanged\n    });\n    const hasShortcuts = vue.computed(() => !!shortcuts.length);\n    const {\n      leftPrevYear,\n      rightNextYear,\n      leftNextYear,\n      rightPrevYear,\n      leftLabel,\n      rightLabel,\n      leftYear,\n      rightYear\n    } = useMonthRangeHeader.useMonthRangeHeader({\n      unlinkPanels: vue.toRef(props, \"unlinkPanels\"),\n      leftDate,\n      rightDate\n    });\n    const enableYearArrow = vue.computed(() => {\n      return props.unlinkPanels && rightYear.value > leftYear.value + 1;\n    });\n    const handleRangePick = (val, close = true) => {\n      const minDate_ = val.minDate;\n      const maxDate_ = val.maxDate;\n      if (maxDate.value === maxDate_ && minDate.value === minDate_) {\n        return;\n      }\n      emit(\"calendar-change\", [minDate_.toDate(), maxDate_ && maxDate_.toDate()]);\n      maxDate.value = maxDate_;\n      minDate.value = minDate_;\n      if (!close) return;\n      handleRangeConfirm();\n    };\n    const formatToString = days => {\n      return days.map(day => day.format(format));\n    };\n    function onParsedValueChanged(minDate2, maxDate2) {\n      if (props.unlinkPanels && maxDate2) {\n        const minDateYear = (minDate2 == null ? void 0 : minDate2.year()) || 0;\n        const maxDateYear = maxDate2.year();\n        rightDate.value = minDateYear === maxDateYear ? maxDate2.add(1, unit) : maxDate2;\n      } else {\n        rightDate.value = leftDate.value.add(1, unit);\n      }\n    }\n    emit(\"set-picker-option\", [\"formatToString\", formatToString]);\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createElementBlock(\"div\", {\n        class: vue.normalizeClass([vue.unref(ppNs).b(), vue.unref(drpNs).b(), {\n          \"has-sidebar\": Boolean(_ctx.$slots.sidebar) || vue.unref(hasShortcuts)\n        }])\n      }, [vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(ppNs).e(\"body-wrapper\"))\n      }, [vue.renderSlot(_ctx.$slots, \"sidebar\", {\n        class: vue.normalizeClass(vue.unref(ppNs).e(\"sidebar\"))\n      }), vue.unref(hasShortcuts) ? (vue.openBlock(), vue.createElementBlock(\"div\", {\n        key: 0,\n        class: vue.normalizeClass(vue.unref(ppNs).e(\"sidebar\"))\n      }, [(vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(vue.unref(shortcuts), (shortcut, key) => {\n        return vue.openBlock(), vue.createElementBlock(\"button\", {\n          key,\n          type: \"button\",\n          class: vue.normalizeClass(vue.unref(ppNs).e(\"shortcut\")),\n          onClick: $event => vue.unref(handleShortcutClick)(shortcut)\n        }, vue.toDisplayString(shortcut.text), 11, _hoisted_1);\n      }), 128))], 2)) : vue.createCommentVNode(\"v-if\", true), vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(ppNs).e(\"body\"))\n      }, [vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass([[vue.unref(ppNs).e(\"content\"), vue.unref(drpNs).e(\"content\")], \"is-left\"])\n      }, [vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(drpNs).e(\"header\"))\n      }, [vue.createElementVNode(\"button\", {\n        type: \"button\",\n        class: vue.normalizeClass([vue.unref(ppNs).e(\"icon-btn\"), \"d-arrow-left\"]),\n        onClick: _cache[0] || (_cache[0] = (...args) => vue.unref(leftPrevYear) && vue.unref(leftPrevYear)(...args))\n      }, [vue.createVNode(vue.unref(index$1.ElIcon), null, {\n        default: vue.withCtx(() => [vue.createVNode(vue.unref(iconsVue.DArrowLeft))]),\n        _: 1\n      })], 2), _ctx.unlinkPanels ? (vue.openBlock(), vue.createElementBlock(\"button\", {\n        key: 0,\n        type: \"button\",\n        disabled: !vue.unref(enableYearArrow),\n        class: vue.normalizeClass([[vue.unref(ppNs).e(\"icon-btn\"), {\n          [vue.unref(ppNs).is(\"disabled\")]: !vue.unref(enableYearArrow)\n        }], \"d-arrow-right\"]),\n        onClick: _cache[1] || (_cache[1] = (...args) => vue.unref(leftNextYear) && vue.unref(leftNextYear)(...args))\n      }, [vue.createVNode(vue.unref(index$1.ElIcon), null, {\n        default: vue.withCtx(() => [vue.createVNode(vue.unref(iconsVue.DArrowRight))]),\n        _: 1\n      })], 10, _hoisted_2)) : vue.createCommentVNode(\"v-if\", true), vue.createElementVNode(\"div\", null, vue.toDisplayString(vue.unref(leftLabel)), 1)], 2), vue.createVNode(basicMonthTable[\"default\"], {\n        \"selection-mode\": \"range\",\n        date: leftDate.value,\n        \"min-date\": vue.unref(minDate),\n        \"max-date\": vue.unref(maxDate),\n        \"range-state\": vue.unref(rangeState),\n        \"disabled-date\": vue.unref(disabledDate),\n        onChangerange: vue.unref(handleChangeRange),\n        onPick: handleRangePick,\n        onSelect: vue.unref(onSelect)\n      }, null, 8, [\"date\", \"min-date\", \"max-date\", \"range-state\", \"disabled-date\", \"onChangerange\", \"onSelect\"])], 2), vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass([[vue.unref(ppNs).e(\"content\"), vue.unref(drpNs).e(\"content\")], \"is-right\"])\n      }, [vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(drpNs).e(\"header\"))\n      }, [_ctx.unlinkPanels ? (vue.openBlock(), vue.createElementBlock(\"button\", {\n        key: 0,\n        type: \"button\",\n        disabled: !vue.unref(enableYearArrow),\n        class: vue.normalizeClass([[vue.unref(ppNs).e(\"icon-btn\"), {\n          \"is-disabled\": !vue.unref(enableYearArrow)\n        }], \"d-arrow-left\"]),\n        onClick: _cache[2] || (_cache[2] = (...args) => vue.unref(rightPrevYear) && vue.unref(rightPrevYear)(...args))\n      }, [vue.createVNode(vue.unref(index$1.ElIcon), null, {\n        default: vue.withCtx(() => [vue.createVNode(vue.unref(iconsVue.DArrowLeft))]),\n        _: 1\n      })], 10, _hoisted_3)) : vue.createCommentVNode(\"v-if\", true), vue.createElementVNode(\"button\", {\n        type: \"button\",\n        class: vue.normalizeClass([vue.unref(ppNs).e(\"icon-btn\"), \"d-arrow-right\"]),\n        onClick: _cache[3] || (_cache[3] = (...args) => vue.unref(rightNextYear) && vue.unref(rightNextYear)(...args))\n      }, [vue.createVNode(vue.unref(index$1.ElIcon), null, {\n        default: vue.withCtx(() => [vue.createVNode(vue.unref(iconsVue.DArrowRight))]),\n        _: 1\n      })], 2), vue.createElementVNode(\"div\", null, vue.toDisplayString(vue.unref(rightLabel)), 1)], 2), vue.createVNode(basicMonthTable[\"default\"], {\n        \"selection-mode\": \"range\",\n        date: rightDate.value,\n        \"min-date\": vue.unref(minDate),\n        \"max-date\": vue.unref(maxDate),\n        \"range-state\": vue.unref(rangeState),\n        \"disabled-date\": vue.unref(disabledDate),\n        onChangerange: vue.unref(handleChangeRange),\n        onPick: handleRangePick,\n        onSelect: vue.unref(onSelect)\n      }, null, 8, [\"date\", \"min-date\", \"max-date\", \"range-state\", \"disabled-date\", \"onChangerange\", \"onSelect\"])], 2)], 2)], 2)], 2);\n    };\n  }\n});\nvar MonthRangePickPanel = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/date-picker/src/date-picker-com/panel-month-range.vue\"]]);\nexports[\"default\"] = MonthRangePickPanel;","map":{"version":3,"names":["name","lang","index","useLocale","pickerBase","vue","inject","shortcuts","disabledDate","format","props","defaultValue","toRef","leftDate","ref","dayjs__default","locale","value","rightDate","add","unit","minDate","maxDate","rangeState","ppNs","drpNs","handleChangeRange","handleRangeConfirm","handleShortcutClick","onSelect","useRangePicker","onParsedValueChanged","hasShortcuts","computed","length","leftPrevYear","rightNextYear","leftNextYear","rightPrevYear","leftLabel","rightLabel","leftYear","rightYear","useMonthRangeHeader","unlinkPanels","enableYearArrow","handleRangePick","val","close","minDate_","maxDate_","emit","toDate","formatToString","days","map","day","minDate2","maxDate2","minDateYear","year","maxDateYear"],"sources":["../../../../../../../packages/components/date-picker/src/date-picker-com/panel-month-range.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"[\n      ppNs.b(),\n      drpNs.b(),\n      {\n        'has-sidebar': Boolean($slots.sidebar) || hasShortcuts,\n      },\n    ]\"\n  >\n    <div :class=\"ppNs.e('body-wrapper')\">\n      <slot name=\"sidebar\" :class=\"ppNs.e('sidebar')\" />\n      <div v-if=\"hasShortcuts\" :class=\"ppNs.e('sidebar')\">\n        <button\n          v-for=\"(shortcut, key) in shortcuts\"\n          :key=\"key\"\n          type=\"button\"\n          :class=\"ppNs.e('shortcut')\"\n          @click=\"handleShortcutClick(shortcut)\"\n        >\n          {{ shortcut.text }}\n        </button>\n      </div>\n      <div :class=\"ppNs.e('body')\">\n        <div :class=\"[ppNs.e('content'), drpNs.e('content')]\" class=\"is-left\">\n          <div :class=\"drpNs.e('header')\">\n            <button\n              type=\"button\"\n              :class=\"ppNs.e('icon-btn')\"\n              class=\"d-arrow-left\"\n              @click=\"leftPrevYear\"\n            >\n              <el-icon><d-arrow-left /></el-icon>\n            </button>\n            <button\n              v-if=\"unlinkPanels\"\n              type=\"button\"\n              :disabled=\"!enableYearArrow\"\n              :class=\"[\n                ppNs.e('icon-btn'),\n                { [ppNs.is('disabled')]: !enableYearArrow },\n              ]\"\n              class=\"d-arrow-right\"\n              @click=\"leftNextYear\"\n            >\n              <el-icon><d-arrow-right /></el-icon>\n            </button>\n            <div>{{ leftLabel }}</div>\n          </div>\n          <month-table\n            selection-mode=\"range\"\n            :date=\"leftDate\"\n            :min-date=\"minDate\"\n            :max-date=\"maxDate\"\n            :range-state=\"rangeState\"\n            :disabled-date=\"disabledDate\"\n            @changerange=\"handleChangeRange\"\n            @pick=\"handleRangePick\"\n            @select=\"onSelect\"\n          />\n        </div>\n        <div :class=\"[ppNs.e('content'), drpNs.e('content')]\" class=\"is-right\">\n          <div :class=\"drpNs.e('header')\">\n            <button\n              v-if=\"unlinkPanels\"\n              type=\"button\"\n              :disabled=\"!enableYearArrow\"\n              :class=\"[ppNs.e('icon-btn'), { 'is-disabled': !enableYearArrow }]\"\n              class=\"d-arrow-left\"\n              @click=\"rightPrevYear\"\n            >\n              <el-icon><d-arrow-left /></el-icon>\n            </button>\n            <button\n              type=\"button\"\n              :class=\"ppNs.e('icon-btn')\"\n              class=\"d-arrow-right\"\n              @click=\"rightNextYear\"\n            >\n              <el-icon><d-arrow-right /></el-icon>\n            </button>\n            <div>{{ rightLabel }}</div>\n          </div>\n          <month-table\n            selection-mode=\"range\"\n            :date=\"rightDate\"\n            :min-date=\"minDate\"\n            :max-date=\"maxDate\"\n            :range-state=\"rangeState\"\n            :disabled-date=\"disabledDate\"\n            @changerange=\"handleChangeRange\"\n            @pick=\"handleRangePick\"\n            @select=\"onSelect\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, inject, ref, toRef } from 'vue'\nimport dayjs from 'dayjs'\nimport ElIcon from '@element-plus/components/icon'\nimport { useLocale } from '@element-plus/hooks'\nimport { DArrowLeft, DArrowRight } from '@element-plus/icons-vue'\nimport {\n  panelMonthRangeEmits,\n  panelMonthRangeProps,\n} from '../props/panel-month-range'\nimport { useMonthRangeHeader } from '../composables/use-month-range-header'\nimport { useRangePicker } from '../composables/use-range-picker'\nimport MonthTable from './basic-month-table.vue'\n\nimport type { Dayjs } from 'dayjs'\n\ndefineOptions({\n  name: 'DatePickerMonthRange',\n})\n\nconst props = defineProps(panelMonthRangeProps)\nconst emit = defineEmits(panelMonthRangeEmits)\nconst unit = 'year'\n\nconst { lang } = useLocale()\nconst pickerBase = inject('EP_PICKER_BASE') as any\nconst { shortcuts, disabledDate, format } = pickerBase.props\nconst defaultValue = toRef(pickerBase.props, 'defaultValue')\nconst leftDate = ref(dayjs().locale(lang.value))\nconst rightDate = ref(dayjs().locale(lang.value).add(1, unit))\n\nconst {\n  minDate,\n  maxDate,\n  rangeState,\n  ppNs,\n  drpNs,\n\n  handleChangeRange,\n  handleRangeConfirm,\n  handleShortcutClick,\n  onSelect,\n} = useRangePicker(props, {\n  defaultValue,\n  leftDate,\n  rightDate,\n  unit,\n  onParsedValueChanged,\n})\n\nconst hasShortcuts = computed(() => !!shortcuts.length)\n\nconst {\n  leftPrevYear,\n  rightNextYear,\n  leftNextYear,\n  rightPrevYear,\n  leftLabel,\n  rightLabel,\n  leftYear,\n  rightYear,\n} = useMonthRangeHeader({\n  unlinkPanels: toRef(props, 'unlinkPanels'),\n  leftDate,\n  rightDate,\n})\n\nconst enableYearArrow = computed(() => {\n  return props.unlinkPanels && rightYear.value > leftYear.value + 1\n})\n\ntype RangePickValue = {\n  minDate: Dayjs\n  maxDate: Dayjs\n}\n\nconst handleRangePick = (val: RangePickValue, close = true) => {\n  // const defaultTime = props.defaultTime || []\n  // const minDate_ = modifyWithTimeString(val.minDate, defaultTime[0])\n  // const maxDate_ = modifyWithTimeString(val.maxDate, defaultTime[1])\n  // todo\n  const minDate_ = val.minDate\n  const maxDate_ = val.maxDate\n  if (maxDate.value === maxDate_ && minDate.value === minDate_) {\n    return\n  }\n  emit('calendar-change', [minDate_.toDate(), maxDate_ && maxDate_.toDate()])\n  maxDate.value = maxDate_\n  minDate.value = minDate_\n\n  if (!close) return\n  handleRangeConfirm()\n}\n\nconst formatToString = (days: Dayjs[]) => {\n  return days.map((day) => day.format(format))\n}\n\nfunction onParsedValueChanged(\n  minDate: Dayjs | undefined,\n  maxDate: Dayjs | undefined\n) {\n  if (props.unlinkPanels && maxDate) {\n    const minDateYear = minDate?.year() || 0\n    const maxDateYear = maxDate.year()\n    rightDate.value =\n      minDateYear === maxDateYear ? maxDate.add(1, unit) : maxDate\n  } else {\n    rightDate.value = leftDate.value.add(1, unit)\n  }\n}\n\nemit('set-picker-option', ['formatToString', formatToString])\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}