{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../../utils/index.js');\nvar notification = require('./notification2.js');\nvar notification$1 = require('./notification.js');\nvar core = require('@vueuse/core');\nvar types = require('../../../utils/types.js');\nvar shared = require('@vue/shared');\nvar error = require('../../../utils/error.js');\nconst notifications = {\n  \"top-left\": [],\n  \"top-right\": [],\n  \"bottom-left\": [],\n  \"bottom-right\": []\n};\nconst GAP_SIZE = 16;\nlet seed = 1;\nconst notify = function (options = {}, context = null) {\n  if (!core.isClient) return {\n    close: () => void 0\n  };\n  if (typeof options === \"string\" || vue.isVNode(options)) {\n    options = {\n      message: options\n    };\n  }\n  const position = options.position || \"top-right\";\n  let verticalOffset = options.offset || 0;\n  notifications[position].forEach(({\n    vm: vm2\n  }) => {\n    var _a;\n    verticalOffset += (((_a = vm2.el) == null ? void 0 : _a.offsetHeight) || 0) + GAP_SIZE;\n  });\n  verticalOffset += GAP_SIZE;\n  const id = `notification_${seed++}`;\n  const userOnClose = options.onClose;\n  const props = {\n    ...options,\n    offset: verticalOffset,\n    id,\n    onClose: () => {\n      close(id, position, userOnClose);\n    }\n  };\n  let appendTo = document.body;\n  if (types.isElement(options.appendTo)) {\n    appendTo = options.appendTo;\n  } else if (shared.isString(options.appendTo)) {\n    appendTo = document.querySelector(options.appendTo);\n  }\n  if (!types.isElement(appendTo)) {\n    error.debugWarn(\"ElNotification\", \"the appendTo option is not an HTMLElement. Falling back to document.body.\");\n    appendTo = document.body;\n  }\n  const container = document.createElement(\"div\");\n  const vm = vue.createVNode(notification[\"default\"], props, vue.isVNode(props.message) ? {\n    default: () => props.message\n  } : null);\n  vm.appContext = context != null ? context : notify._context;\n  vm.props.onDestroy = () => {\n    vue.render(null, container);\n  };\n  vue.render(vm, container);\n  notifications[position].push({\n    vm\n  });\n  appendTo.appendChild(container.firstElementChild);\n  return {\n    close: () => {\n      ;\n      vm.component.exposed.visible.value = false;\n    }\n  };\n};\nnotification$1.notificationTypes.forEach(type => {\n  notify[type] = (options = {}) => {\n    if (typeof options === \"string\" || vue.isVNode(options)) {\n      options = {\n        message: options\n      };\n    }\n    return notify({\n      ...options,\n      type\n    });\n  };\n});\nfunction close(id, position, userOnClose) {\n  const orientedNotifications = notifications[position];\n  const idx = orientedNotifications.findIndex(({\n    vm: vm2\n  }) => {\n    var _a;\n    return ((_a = vm2.component) == null ? void 0 : _a.props.id) === id;\n  });\n  if (idx === -1) return;\n  const {\n    vm\n  } = orientedNotifications[idx];\n  if (!vm) return;\n  userOnClose == null ? void 0 : userOnClose(vm);\n  const removedHeight = vm.el.offsetHeight;\n  const verticalPos = position.split(\"-\")[0];\n  orientedNotifications.splice(idx, 1);\n  const len = orientedNotifications.length;\n  if (len < 1) return;\n  for (let i = idx; i < len; i++) {\n    const {\n      el,\n      component\n    } = orientedNotifications[i].vm;\n    const pos = Number.parseInt(el.style[verticalPos], 10) - removedHeight - GAP_SIZE;\n    component.props.offset = pos;\n  }\n}\nfunction closeAll() {\n  for (const orientedNotifications of Object.values(notifications)) {\n    orientedNotifications.forEach(({\n      vm\n    }) => {\n      ;\n      vm.component.exposed.visible.value = false;\n    });\n  }\n}\nnotify.closeAll = closeAll;\nnotify._context = null;\nexports.close = close;\nexports.closeAll = closeAll;\nexports[\"default\"] = notify;","map":{"version":3,"names":["notifications","GAP_SIZE","seed","notify","options","context","core","isClient","close","vue","isVNode","message","position","verticalOffset","offset","forEach","vm","vm2","_a","el","offsetHeight","id","userOnClose","onClose","props","appendTo","document","body","types","isElement","shared","isString","querySelector","error","debugWarn","container","createElement","createVNode","notification","default","appContext","_context","onDestroy","render","push","appendChild","firstElementChild","component","exposed","visible","value","notification$1","notificationTypes","type","orientedNotifications","idx","findIndex","removedHeight","verticalPos","split","splice","len","length","i","pos","Number","parseInt","style","closeAll","Object","values"],"sources":["../../../../../../packages/components/notification/src/notify.ts"],"sourcesContent":["import { createVNode, render } from 'vue'\nimport {\n  debugWarn,\n  isClient,\n  isElement,\n  isString,\n  isVNode,\n} from '@element-plus/utils'\nimport NotificationConstructor from './notification.vue'\nimport { notificationTypes } from './notification'\n\nimport type { AppContext, Ref, VNode } from 'vue'\nimport type {\n  NotificationOptions,\n  NotificationProps,\n  NotificationQueue,\n  Notify,\n  NotifyFn,\n} from './notification'\n\n// This should be a queue but considering there were `non-autoclosable` notifications.\nconst notifications: Record<\n  NotificationOptions['position'],\n  NotificationQueue\n> = {\n  'top-left': [],\n  'top-right': [],\n  'bottom-left': [],\n  'bottom-right': [],\n}\n\n// the gap size between each notification\nconst GAP_SIZE = 16\nlet seed = 1\n\nconst notify: NotifyFn & Partial<Notify> & { _context: AppContext | null } =\n  function (options = {}, context: AppContext | null = null) {\n    if (!isClient) return { close: () => undefined }\n\n    if (typeof options === 'string' || isVNode(options)) {\n      options = { message: options }\n    }\n\n    const position = options.position || 'top-right'\n\n    let verticalOffset = options.offset || 0\n    notifications[position].forEach(({ vm }) => {\n      verticalOffset += (vm.el?.offsetHeight || 0) + GAP_SIZE\n    })\n    verticalOffset += GAP_SIZE\n\n    const id = `notification_${seed++}`\n    const userOnClose = options.onClose\n    const props: Partial<NotificationProps> = {\n      ...options,\n      offset: verticalOffset,\n      id,\n      onClose: () => {\n        close(id, position, userOnClose)\n      },\n    }\n\n    let appendTo: HTMLElement | null = document.body\n    if (isElement(options.appendTo)) {\n      appendTo = options.appendTo\n    } else if (isString(options.appendTo)) {\n      appendTo = document.querySelector(options.appendTo)\n    }\n\n    // should fallback to default value with a warning\n    if (!isElement(appendTo)) {\n      debugWarn(\n        'ElNotification',\n        'the appendTo option is not an HTMLElement. Falling back to document.body.'\n      )\n      appendTo = document.body\n    }\n\n    const container = document.createElement('div')\n\n    const vm = createVNode(\n      NotificationConstructor,\n      props,\n      isVNode(props.message)\n        ? {\n            default: () => props.message,\n          }\n        : null\n    )\n    vm.appContext = context ?? notify._context\n\n    // clean notification element preventing mem leak\n    vm.props!.onDestroy = () => {\n      render(null, container)\n    }\n\n    // instances will remove this item when close function gets called. So we do not need to worry about it.\n    render(vm, container)\n    notifications[position].push({ vm })\n    appendTo.appendChild(container.firstElementChild!)\n\n    return {\n      // instead of calling the onClose function directly, setting this value so that we can have the full lifecycle\n      // for out component, so that all closing steps will not be skipped.\n      close: () => {\n        ;(vm.component!.exposed as { visible: Ref<boolean> }).visible.value =\n          false\n      },\n    }\n  }\nnotificationTypes.forEach((type) => {\n  notify[type] = (options = {}) => {\n    if (typeof options === 'string' || isVNode(options)) {\n      options = {\n        message: options,\n      }\n    }\n    return notify({\n      ...options,\n      type,\n    })\n  }\n})\n\n/**\n * This function gets called when user click `x` button or press `esc` or the time reached its limitation.\n * Emitted by transition@before-leave event so that we can fetch the current notification.offsetHeight, if this was called\n * by @after-leave the DOM element will be removed from the page thus we can no longer fetch the offsetHeight.\n * @param {String} id notification id to be closed\n * @param {Position} position the positioning strategy\n * @param {Function} userOnClose the callback called when close passed by user\n */\nexport function close(\n  id: string,\n  position: NotificationOptions['position'],\n  userOnClose?: (vm: VNode) => void\n): void {\n  // maybe we can store the index when inserting the vm to notification list.\n  const orientedNotifications = notifications[position]\n  const idx = orientedNotifications.findIndex(\n    ({ vm }) => vm.component?.props.id === id\n  )\n  if (idx === -1) return\n  const { vm } = orientedNotifications[idx]\n  if (!vm) return\n  // calling user's on close function before notification gets removed from DOM.\n  userOnClose?.(vm)\n\n  // note that this is called @before-leave, that's why we were able to fetch this property.\n  const removedHeight = vm.el!.offsetHeight\n  const verticalPos = position.split('-')[0]\n  orientedNotifications.splice(idx, 1)\n  const len = orientedNotifications.length\n  if (len < 1) return\n  // starting from the removing item.\n  for (let i = idx; i < len; i++) {\n    // new position equals the current offsetTop minus removed height plus 16px(the gap size between each item)\n    const { el, component } = orientedNotifications[i].vm\n    const pos =\n      Number.parseInt(el!.style[verticalPos], 10) - removedHeight - GAP_SIZE\n    component!.props.offset = pos\n  }\n}\n\nexport function closeAll(): void {\n  // loop through all directions, close them at once.\n  for (const orientedNotifications of Object.values(notifications)) {\n    orientedNotifications.forEach(({ vm }) => {\n      // same as the previous close method, we'd like to make sure lifecycle gets handle properly.\n      ;(vm.component!.exposed as { visible: Ref<boolean> }).visible.value =\n        false\n    })\n  }\n}\n\nnotify.closeAll = closeAll\nnotify._context = null\n\nexport default notify as Notify\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}