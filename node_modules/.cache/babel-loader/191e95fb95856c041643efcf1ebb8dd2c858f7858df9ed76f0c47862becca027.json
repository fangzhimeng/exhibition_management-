{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../../utils/index.js');\nrequire('../../../constants/index.js');\nvar index$3 = require('../../icon/index.js');\nvar iconsVue = require('@element-plus/icons-vue');\nrequire('../../../hooks/index.js');\nvar constants = require('./constants.js');\nvar tabNav = require('./tab-nav.js');\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar shared = require('@vue/shared');\nvar types = require('../../../utils/types.js');\nvar event = require('../../../constants/event.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar index$1 = require('../../../hooks/use-ordered-children/index.js');\nvar index$2 = require('../../../hooks/use-deprecated/index.js');\nvar aria = require('../../../constants/aria.js');\nconst tabsProps = runtime.buildProps({\n  type: {\n    type: String,\n    values: [\"card\", \"border-card\", \"\"],\n    default: \"\"\n  },\n  activeName: {\n    type: [String, Number]\n  },\n  closable: Boolean,\n  addable: Boolean,\n  modelValue: {\n    type: [String, Number]\n  },\n  editable: Boolean,\n  tabPosition: {\n    type: String,\n    values: [\"top\", \"right\", \"bottom\", \"left\"],\n    default: \"top\"\n  },\n  beforeLeave: {\n    type: runtime.definePropType(Function),\n    default: () => true\n  },\n  stretch: Boolean\n});\nconst isPaneName = value => shared.isString(value) || types.isNumber(value);\nconst tabsEmits = {\n  [event.UPDATE_MODEL_EVENT]: name => isPaneName(name),\n  tabClick: (pane, ev) => ev instanceof Event,\n  tabChange: name => isPaneName(name),\n  edit: (paneName, action) => [\"remove\", \"add\"].includes(action),\n  tabRemove: name => isPaneName(name),\n  tabAdd: () => true\n};\nconst Tabs = vue.defineComponent({\n  name: \"ElTabs\",\n  props: tabsProps,\n  emits: tabsEmits,\n  setup(props, {\n    emit,\n    slots,\n    expose\n  }) {\n    var _a, _b;\n    const ns = index.useNamespace(\"tabs\");\n    const {\n      children: panes,\n      addChild: registerPane,\n      removeChild: unregisterPane\n    } = index$1.useOrderedChildren(vue.getCurrentInstance(), \"ElTabPane\");\n    const nav$ = vue.ref();\n    const currentName = vue.ref((_b = (_a = props.modelValue) != null ? _a : props.activeName) != null ? _b : \"0\");\n    const setCurrentName = async (value, trigger = false) => {\n      var _a2, _b2, _c;\n      if (currentName.value === value || types.isUndefined(value)) return;\n      try {\n        const canLeave = await ((_a2 = props.beforeLeave) == null ? void 0 : _a2.call(props, value, currentName.value));\n        if (canLeave !== false) {\n          currentName.value = value;\n          if (trigger) {\n            emit(event.UPDATE_MODEL_EVENT, value);\n            emit(\"tabChange\", value);\n          }\n          (_c = (_b2 = nav$.value) == null ? void 0 : _b2.removeFocus) == null ? void 0 : _c.call(_b2);\n        }\n      } catch (e) {}\n    };\n    const handleTabClick = (tab, tabName, event) => {\n      if (tab.props.disabled) return;\n      setCurrentName(tabName, true);\n      emit(\"tabClick\", tab, event);\n    };\n    const handleTabRemove = (pane, ev) => {\n      if (pane.props.disabled || types.isUndefined(pane.props.name)) return;\n      ev.stopPropagation();\n      emit(\"edit\", pane.props.name, \"remove\");\n      emit(\"tabRemove\", pane.props.name);\n    };\n    const handleTabAdd = () => {\n      emit(\"edit\", void 0, \"add\");\n      emit(\"tabAdd\");\n    };\n    index$2.useDeprecated({\n      from: '\"activeName\"',\n      replacement: '\"model-value\" or \"v-model\"',\n      scope: \"ElTabs\",\n      version: \"2.3.0\",\n      ref: \"https://element-plus.org/en-US/component/tabs.html#attributes\",\n      type: \"Attribute\"\n    }, vue.computed(() => !!props.activeName));\n    vue.watch(() => props.activeName, modelValue => setCurrentName(modelValue));\n    vue.watch(() => props.modelValue, modelValue => setCurrentName(modelValue));\n    vue.watch(currentName, async () => {\n      var _a2;\n      await vue.nextTick();\n      (_a2 = nav$.value) == null ? void 0 : _a2.scrollToActiveTab();\n    });\n    vue.provide(constants.tabsRootContextKey, {\n      props,\n      currentName,\n      registerPane,\n      unregisterPane\n    });\n    expose({\n      currentName\n    });\n    return () => {\n      const addSlot = slots.addIcon;\n      const newButton = props.editable || props.addable ? vue.createVNode(\"span\", {\n        \"class\": ns.e(\"new-tab\"),\n        \"tabindex\": \"0\",\n        \"onClick\": handleTabAdd,\n        \"onKeydown\": ev => {\n          if (ev.code === aria.EVENT_CODE.enter) handleTabAdd();\n        }\n      }, [addSlot ? vue.renderSlot(slots, \"addIcon\") : vue.createVNode(index$3.ElIcon, {\n        \"class\": ns.is(\"icon-plus\")\n      }, {\n        default: () => [vue.createVNode(iconsVue.Plus, null, null)]\n      })]) : null;\n      const header = vue.createVNode(\"div\", {\n        \"class\": [ns.e(\"header\"), ns.is(props.tabPosition)]\n      }, [newButton, vue.createVNode(tabNav[\"default\"], {\n        \"ref\": nav$,\n        \"currentName\": currentName.value,\n        \"editable\": props.editable,\n        \"type\": props.type,\n        \"panes\": panes.value,\n        \"stretch\": props.stretch,\n        \"onTabClick\": handleTabClick,\n        \"onTabRemove\": handleTabRemove\n      }, null)]);\n      const panels = vue.createVNode(\"div\", {\n        \"class\": ns.e(\"content\")\n      }, [vue.renderSlot(slots, \"default\")]);\n      return vue.createVNode(\"div\", {\n        \"class\": [ns.b(), ns.m(props.tabPosition), {\n          [ns.m(\"card\")]: props.type === \"card\",\n          [ns.m(\"border-card\")]: props.type === \"border-card\"\n        }]\n      }, [...(props.tabPosition !== \"bottom\" ? [header, panels] : [panels, header])]);\n    };\n  }\n});\nexports[\"default\"] = Tabs;\nexports.tabsEmits = tabsEmits;\nexports.tabsProps = tabsProps;","map":{"version":3,"names":["tabsProps","runtime","buildProps","type","String","values","default","activeName","Number","closable","Boolean","addable","modelValue","editable","tabPosition","beforeLeave","definePropType","Function","stretch","tabsEmits","tabClick","pane","ev","Event","tabChange","name","isPaneName","edit","paneName","action","includes","tabRemove","tabAdd","Tabs","vue","defineComponent","props","emits","setup","emit","expose","_a","_b","ns","index","useNamespace","children","panes","addChild","registerPane","removeChild","unregisterPane","index$1","useOrderedChildren","getCurrentInstance","nav$","ref","currentName","setCurrentName","value","trigger","_a2","_b2","_c","canLeave","call","e","tab","disabled","tabName","event","handleTabRemove","types","isUndefined","stopPropagation","handleTabAdd","index$2","useDeprecated","replacement","scope","version","computed","watch","nextTick","scrollToActiveTab","provide","constants","tabsRootContextKey","addSlot","slots","addIcon","newButton","createVNode","code","aria","EVENT_CODE","enter","renderSlot","index$3","ElIcon","is","iconsVue","Plus","header","tabNav","handleTabClick","panels","b","m"],"sources":["../../../../../../packages/components/tabs/src/tabs.tsx"],"sourcesContent":["import {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  nextTick,\n  provide,\n  ref,\n  renderSlot,\n  watch,\n} from 'vue'\nimport {\n  buildProps,\n  definePropType,\n  isNumber,\n  isString,\n  isUndefined,\n} from '@element-plus/utils'\nimport { EVENT_CODE, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport ElIcon from '@element-plus/components/icon'\nimport { Plus } from '@element-plus/icons-vue'\nimport {\n  useDeprecated,\n  useNamespace,\n  useOrderedChildren,\n} from '@element-plus/hooks'\nimport { tabsRootContextKey } from './constants'\nimport TabNav from './tab-nav'\n\nimport type { TabNavInstance } from './tab-nav'\nimport type { TabsPaneContext } from './constants'\nimport type { ExtractPropTypes } from 'vue'\nimport type { Awaitable } from '@element-plus/utils'\n\nexport type TabPaneName = string | number\n\nexport const tabsProps = buildProps({\n  type: {\n    type: String,\n    values: ['card', 'border-card', ''],\n    default: '',\n  },\n  activeName: {\n    type: [String, Number],\n  },\n  closable: Boolean,\n  addable: Boolean,\n  modelValue: {\n    type: [String, Number],\n  },\n  editable: Boolean,\n  tabPosition: {\n    type: String,\n    values: ['top', 'right', 'bottom', 'left'],\n    default: 'top',\n  },\n  beforeLeave: {\n    type: definePropType<\n      (newName: TabPaneName, oldName: TabPaneName) => Awaitable<void | boolean>\n    >(Function),\n    default: () => true,\n  },\n  stretch: Boolean,\n} as const)\nexport type TabsProps = ExtractPropTypes<typeof tabsProps>\n\nconst isPaneName = (value: unknown): value is string | number =>\n  isString(value) || isNumber(value)\n\nexport const tabsEmits = {\n  [UPDATE_MODEL_EVENT]: (name: TabPaneName) => isPaneName(name),\n  tabClick: (pane: TabsPaneContext, ev: Event) => ev instanceof Event,\n  tabChange: (name: TabPaneName) => isPaneName(name),\n  edit: (paneName: TabPaneName | undefined, action: 'remove' | 'add') =>\n    ['remove', 'add'].includes(action),\n  tabRemove: (name: TabPaneName) => isPaneName(name),\n  tabAdd: () => true,\n}\nexport type TabsEmits = typeof tabsEmits\n\nexport type TabsPanes = Record<number, TabsPaneContext>\n\nconst Tabs = defineComponent({\n  name: 'ElTabs',\n\n  props: tabsProps,\n  emits: tabsEmits,\n\n  setup(props, { emit, slots, expose }) {\n    const ns = useNamespace('tabs')\n\n    const {\n      children: panes,\n      addChild: registerPane,\n      removeChild: unregisterPane,\n    } = useOrderedChildren<TabsPaneContext>(getCurrentInstance()!, 'ElTabPane')\n\n    const nav$ = ref<TabNavInstance>()\n    const currentName = ref<TabPaneName>(\n      props.modelValue ?? props.activeName ?? '0'\n    )\n\n    const setCurrentName = async (value?: TabPaneName, trigger = false) => {\n      // should do nothing.\n      if (currentName.value === value || isUndefined(value)) return\n\n      try {\n        const canLeave = await props.beforeLeave?.(value, currentName.value)\n        if (canLeave !== false) {\n          currentName.value = value\n          if (trigger) {\n            emit(UPDATE_MODEL_EVENT, value)\n            emit('tabChange', value)\n          }\n\n          nav$.value?.removeFocus?.()\n        }\n      } catch {}\n    }\n\n    const handleTabClick = (\n      tab: TabsPaneContext,\n      tabName: TabPaneName,\n      event: Event\n    ) => {\n      if (tab.props.disabled) return\n      setCurrentName(tabName, true)\n      emit('tabClick', tab, event)\n    }\n\n    const handleTabRemove = (pane: TabsPaneContext, ev: Event) => {\n      if (pane.props.disabled || isUndefined(pane.props.name)) return\n      ev.stopPropagation()\n      emit('edit', pane.props.name, 'remove')\n      emit('tabRemove', pane.props.name)\n    }\n\n    const handleTabAdd = () => {\n      emit('edit', undefined, 'add')\n      emit('tabAdd')\n    }\n\n    useDeprecated(\n      {\n        from: '\"activeName\"',\n        replacement: '\"model-value\" or \"v-model\"',\n        scope: 'ElTabs',\n        version: '2.3.0',\n        ref: 'https://element-plus.org/en-US/component/tabs.html#attributes',\n        type: 'Attribute',\n      },\n      computed(() => !!props.activeName)\n    )\n\n    watch(\n      () => props.activeName,\n      (modelValue) => setCurrentName(modelValue)\n    )\n\n    watch(\n      () => props.modelValue,\n      (modelValue) => setCurrentName(modelValue)\n    )\n\n    watch(currentName, async () => {\n      await nextTick()\n      nav$.value?.scrollToActiveTab()\n    })\n\n    provide(tabsRootContextKey, {\n      props,\n      currentName,\n      registerPane,\n      unregisterPane,\n    })\n\n    expose({\n      currentName,\n    })\n\n    return () => {\n      const addSlot = slots.addIcon\n      const newButton =\n        props.editable || props.addable ? (\n          <span\n            class={ns.e('new-tab')}\n            tabindex=\"0\"\n            onClick={handleTabAdd}\n            onKeydown={(ev: KeyboardEvent) => {\n              if (ev.code === EVENT_CODE.enter) handleTabAdd()\n            }}\n          >\n            {addSlot ? (\n              renderSlot(slots, 'addIcon')\n            ) : (\n              <ElIcon class={ns.is('icon-plus')}>\n                <Plus />\n              </ElIcon>\n            )}\n          </span>\n        ) : null\n\n      const header = (\n        <div class={[ns.e('header'), ns.is(props.tabPosition)]}>\n          {newButton}\n          <TabNav\n            ref={nav$}\n            currentName={currentName.value}\n            editable={props.editable}\n            type={props.type}\n            panes={panes.value}\n            stretch={props.stretch}\n            onTabClick={handleTabClick}\n            onTabRemove={handleTabRemove}\n          />\n        </div>\n      )\n\n      const panels = (\n        <div class={ns.e('content')}>{renderSlot(slots, 'default')}</div>\n      )\n\n      return (\n        <div\n          class={[\n            ns.b(),\n            ns.m(props.tabPosition),\n            {\n              [ns.m('card')]: props.type === 'card',\n              [ns.m('border-card')]: props.type === 'border-card',\n            },\n          ]}\n        >\n          {...props.tabPosition !== 'bottom'\n            ? [header, panels]\n            : [panels, header]}\n        </div>\n      )\n    }\n  },\n})\n\nexport type TabsInstance = InstanceType<typeof Tabs> & {\n  currentName: TabPaneName\n}\n\nexport default Tabs\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}