{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar lodashUnified = require('lodash-unified');\nrequire('../../../constants/index.js');\nrequire('../../../utils/index.js');\nrequire('../../../hooks/index.js');\nrequire('../../form/index.js');\nvar checkboxGroup = require('./checkbox-group.js');\nvar constants = require('./constants.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar useFormItem = require('../../form/src/hooks/use-form-item.js');\nvar event = require('../../../constants/event.js');\nvar error = require('../../../utils/error.js');\nconst __default__ = vue.defineComponent({\n  name: \"ElCheckboxGroup\"\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: checkboxGroup.checkboxGroupProps,\n  emits: checkboxGroup.checkboxGroupEmits,\n  setup(__props, {\n    emit\n  }) {\n    const props = __props;\n    const ns = index.useNamespace(\"checkbox\");\n    const {\n      formItem\n    } = useFormItem.useFormItem();\n    const {\n      inputId: groupId,\n      isLabeledByFormItem\n    } = useFormItem.useFormItemInputId(props, {\n      formItemContext: formItem\n    });\n    const changeEvent = async value => {\n      emit(event.UPDATE_MODEL_EVENT, value);\n      await vue.nextTick();\n      emit(\"change\", value);\n    };\n    const modelValue = vue.computed({\n      get() {\n        return props.modelValue;\n      },\n      set(val) {\n        changeEvent(val);\n      }\n    });\n    vue.provide(constants.checkboxGroupContextKey, {\n      ...lodashUnified.pick(vue.toRefs(props), [\"size\", \"min\", \"max\", \"disabled\", \"validateEvent\", \"fill\", \"textColor\"]),\n      modelValue,\n      changeEvent\n    });\n    vue.watch(() => props.modelValue, () => {\n      if (props.validateEvent) {\n        formItem == null ? void 0 : formItem.validate(\"change\").catch(err => error.debugWarn(err));\n      }\n    });\n    return (_ctx, _cache) => {\n      var _a;\n      return vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.tag), {\n        id: vue.unref(groupId),\n        class: vue.normalizeClass(vue.unref(ns).b(\"group\")),\n        role: \"group\",\n        \"aria-label\": !vue.unref(isLabeledByFormItem) ? _ctx.label || \"checkbox-group\" : void 0,\n        \"aria-labelledby\": vue.unref(isLabeledByFormItem) ? (_a = vue.unref(formItem)) == null ? void 0 : _a.labelId : void 0\n      }, {\n        default: vue.withCtx(() => [vue.renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      }, 8, [\"id\", \"class\", \"aria-label\", \"aria-labelledby\"]);\n    };\n  }\n});\nvar CheckboxGroup = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/checkbox/src/checkbox-group.vue\"]]);\nexports[\"default\"] = CheckboxGroup;","map":{"version":3,"names":["name","ns","index","useNamespace","formItem","useFormItem","inputId","groupId","isLabeledByFormItem","useFormItemInputId","props","formItemContext","changeEvent","value","emit","event","UPDATE_MODEL_EVENT","vue","nextTick","modelValue","computed","get","set","val","provide","constants","checkboxGroupContextKey","lodashUnified","pick","toRefs","watch","validateEvent","validate","catch","err","error","debugWarn"],"sources":["../../../../../../packages/components/checkbox/src/checkbox-group.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"tag\"\n    :id=\"groupId\"\n    :class=\"ns.b('group')\"\n    role=\"group\"\n    :aria-label=\"!isLabeledByFormItem ? label || 'checkbox-group' : undefined\"\n    :aria-labelledby=\"isLabeledByFormItem ? formItem?.labelId : undefined\"\n  >\n    <slot />\n  </component>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, nextTick, provide, toRefs, watch } from 'vue'\nimport { pick } from 'lodash-unified'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { debugWarn } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useFormItem, useFormItemInputId } from '@element-plus/components/form'\nimport { checkboxGroupEmits, checkboxGroupProps } from './checkbox-group'\nimport { checkboxGroupContextKey } from './constants'\n\nimport type { CheckboxGroupValueType } from './checkbox-group'\n\ndefineOptions({\n  name: 'ElCheckboxGroup',\n})\n\nconst props = defineProps(checkboxGroupProps)\nconst emit = defineEmits(checkboxGroupEmits)\nconst ns = useNamespace('checkbox')\n\nconst { formItem } = useFormItem()\nconst { inputId: groupId, isLabeledByFormItem } = useFormItemInputId(props, {\n  formItemContext: formItem,\n})\n\nconst changeEvent = async (value: CheckboxGroupValueType) => {\n  emit(UPDATE_MODEL_EVENT, value)\n  await nextTick()\n  emit('change', value)\n}\n\nconst modelValue = computed({\n  get() {\n    return props.modelValue\n  },\n  set(val: CheckboxGroupValueType) {\n    changeEvent(val)\n  },\n})\n\nprovide(checkboxGroupContextKey, {\n  ...pick(toRefs(props), [\n    'size',\n    'min',\n    'max',\n    'disabled',\n    'validateEvent',\n    'fill',\n    'textColor',\n  ]),\n  modelValue,\n  changeEvent,\n})\n\nwatch(\n  () => props.modelValue,\n  () => {\n    if (props.validateEvent) {\n      formItem?.validate('change').catch((err) => debugWarn(err))\n    }\n  }\n)\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;;;uCAyBc;EACZA,IAAM;AACR;;;;;;;;;IAIM,MAAAC,EAAA,GAAKC,KAAA,CAAAC,YAAA,CAAa,UAAU;IAE5B;MAAEC;IAAA,IAAaC,WAAA,CAAAA,WAAY;IACjC,MAAM;MAAEC,OAAA,EAASC,OAAS;MAAAC;IAAA,IAAwBH,WAAA,CAAAI,kBAAA,CAAmBC,KAAO;MAC1EC,eAAiB,EAAAP;IAAA,CAClB;IAEK,MAAAQ,WAAA,GAAc,MAAOC,KAAkC;MAC3DC,IAAA,CAAKC,KAAA,CAAAC,kBAAA,EAAoBH,KAAK;MAC9B,MAAMI,GAAA,CAAAC,QAAS;MACfJ,IAAA,CAAK,UAAUD,KAAK;IAAA,CACtB;IAEA,MAAMM,UAAA,GAAaF,GAAA,CAAAG,QAAS;MAC1BC,GAAMA,CAAA;QACJ,OAAOX,KAAM,CAAAS,UAAA;MAAA,CACf;MACAG,IAAIC,GAA6B;QAC/BX,WAAA,CAAYW,GAAG;MAAA;IACjB,CACD;IAEDN,GAAA,CAAAO,OAAA,CAAQC,SAAA,CAAAC,uBAAyB;MAC/B,GAAGC,aAAA,CAAAC,IAAA,CAAKX,GAAA,CAAAY,MAAO,CAAAnB,KAAK,CAAG,GACrB,QACA,OACA,OACA,YACA,iBACA,QACA,YACD;MACDS,UAAA;MACAP;IAAA,CACD;IAGCK,GAAA,CAAAa,KAAA,OAAMpB,KAAM,CAAAS,UAAA,EACZ,MAAM;MACJ,IAAIT,KAAA,CAAMqB,aAAe;QACb3B,QAAA,WAAS,SAAUA,QAAO,CAAQ4B,QAAA,SAAU,EAAAC,KAAI,CAAAC,GAAA,IAAAC,KAAA,CAAAC,SAAA,CAAAF,GAAA;MAAA;IAC5D,CAEJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}