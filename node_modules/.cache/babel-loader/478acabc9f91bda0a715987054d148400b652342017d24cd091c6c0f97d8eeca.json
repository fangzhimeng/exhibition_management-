{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../../hooks/index.js');\nvar constants = require('./constants.js');\nvar arrow = require('./arrow.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nconst __default__ = vue.defineComponent({\n  name: \"ElPopperArrow\",\n  inheritAttrs: false\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: arrow.popperArrowProps,\n  setup(__props, {\n    expose\n  }) {\n    const props = __props;\n    const ns = index.useNamespace(\"popper\");\n    const {\n      arrowOffset,\n      arrowRef,\n      arrowStyle\n    } = vue.inject(constants.POPPER_CONTENT_INJECTION_KEY, void 0);\n    vue.watch(() => props.arrowOffset, val => {\n      arrowOffset.value = val;\n    });\n    vue.onBeforeUnmount(() => {\n      arrowRef.value = void 0;\n    });\n    expose({\n      arrowRef\n    });\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createElementBlock(\"span\", {\n        ref_key: \"arrowRef\",\n        ref: arrowRef,\n        class: vue.normalizeClass(vue.unref(ns).e(\"arrow\")),\n        style: vue.normalizeStyle(vue.unref(arrowStyle)),\n        \"data-popper-arrow\": \"\"\n      }, null, 6);\n    };\n  }\n});\nvar ElPopperArrow = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/popper/src/arrow.vue\"]]);\nexports[\"default\"] = ElPopperArrow;","map":{"version":3,"names":["name","inheritAttrs","ns","index","useNamespace","arrowOffset","arrowRef","arrowStyle","vue","inject","constants","POPPER_CONTENT_INJECTION_KEY","watch","props","val","value","onBeforeUnmount","expose"],"sources":["../../../../../../packages/components/popper/src/arrow.vue"],"sourcesContent":["<template>\n  <span\n    ref=\"arrowRef\"\n    :class=\"ns.e('arrow')\"\n    :style=\"arrowStyle\"\n    data-popper-arrow\n  />\n</template>\n\n<script lang=\"ts\" setup>\nimport { inject, onBeforeUnmount, watch } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { POPPER_CONTENT_INJECTION_KEY } from './constants'\nimport { popperArrowProps } from './arrow'\n\ndefineOptions({\n  name: 'ElPopperArrow',\n  inheritAttrs: false,\n})\n\nconst props = defineProps(popperArrowProps)\n\nconst ns = useNamespace('popper')\nconst { arrowOffset, arrowRef, arrowStyle } = inject(\n  POPPER_CONTENT_INJECTION_KEY,\n  undefined\n)!\n\nwatch(\n  () => props.arrowOffset,\n  (val) => {\n    arrowOffset.value = val\n  }\n)\nonBeforeUnmount(() => {\n  arrowRef.value = undefined\n})\n\ndefineExpose({\n  /**\n   * @description Arrow element\n   */\n  arrowRef,\n})\n</script>\n"],"mappings":";;;;;;;;;;;uCAec;EACZA,IAAM;EACNC,YAAc;AAChB;;;;;;;;IAIM,MAAAC,EAAA,GAAKC,KAAA,CAAAC,YAAA,CAAa,QAAQ;IAChC,MAAM;MAAEC,WAAa;MAAAC,QAAA;MAAUC;IAAe,IAAAC,GAAA,CAAAC,MAAA,CAC5CC,SAAA,CAAAC,4BAAA,EACA,KACF;IAEAH,GAAA,CAAAI,KAAA,CACE,MAAMC,KAAA,CAAMR,WACZ,EAACS,GAAQ;MACPT,WAAA,CAAYU,KAAQ,GAAAD,GAAA;IAAA,CAExB;IACAN,GAAA,CAAAQ,eAAA,CAAgB,MAAM;MACpBV,QAAA,CAASS,KAAQ;IAAA,CAClB;IAEYE,MAAA;MAIXX;IAAA,CACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}