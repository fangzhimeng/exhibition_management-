{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../../hooks/index.js');\nrequire('../../../utils/index.js');\nvar statistic = require('./statistic.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar shared = require('@vue/shared');\nvar types = require('../../../utils/types.js');\nconst __default__ = vue.defineComponent({\n  name: \"ElStatistic\"\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: statistic.statisticProps,\n  setup(__props, {\n    expose\n  }) {\n    const props = __props;\n    const ns = index.useNamespace(\"statistic\");\n    const displayValue = vue.computed(() => {\n      const {\n        value,\n        formatter,\n        precision,\n        decimalSeparator,\n        groupSeparator\n      } = props;\n      if (shared.isFunction(formatter)) return formatter(value);\n      if (!types.isNumber(value)) return value;\n      let [integer, decimal = \"\"] = String(value).split(\".\");\n      decimal = decimal.padEnd(precision, \"0\").slice(0, precision > 0 ? precision : 0);\n      integer = integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, groupSeparator);\n      return [integer, decimal].join(decimal ? decimalSeparator : \"\");\n    });\n    expose({\n      displayValue\n    });\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createElementBlock(\"div\", {\n        class: vue.normalizeClass(vue.unref(ns).b())\n      }, [_ctx.$slots.title || _ctx.title ? (vue.openBlock(), vue.createElementBlock(\"div\", {\n        key: 0,\n        class: vue.normalizeClass(vue.unref(ns).e(\"head\"))\n      }, [vue.renderSlot(_ctx.$slots, \"title\", {}, () => [vue.createTextVNode(vue.toDisplayString(_ctx.title), 1)])], 2)) : vue.createCommentVNode(\"v-if\", true), vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(ns).e(\"content\"))\n      }, [_ctx.$slots.prefix || _ctx.prefix ? (vue.openBlock(), vue.createElementBlock(\"div\", {\n        key: 0,\n        class: vue.normalizeClass(vue.unref(ns).e(\"prefix\"))\n      }, [vue.renderSlot(_ctx.$slots, \"prefix\", {}, () => [vue.createElementVNode(\"span\", null, vue.toDisplayString(_ctx.prefix), 1)])], 2)) : vue.createCommentVNode(\"v-if\", true), vue.createElementVNode(\"span\", {\n        class: vue.normalizeClass(vue.unref(ns).e(\"number\")),\n        style: vue.normalizeStyle(_ctx.valueStyle)\n      }, vue.toDisplayString(vue.unref(displayValue)), 7), _ctx.$slots.suffix || _ctx.suffix ? (vue.openBlock(), vue.createElementBlock(\"div\", {\n        key: 1,\n        class: vue.normalizeClass(vue.unref(ns).e(\"suffix\"))\n      }, [vue.renderSlot(_ctx.$slots, \"suffix\", {}, () => [vue.createElementVNode(\"span\", null, vue.toDisplayString(_ctx.suffix), 1)])], 2)) : vue.createCommentVNode(\"v-if\", true)], 2)], 2);\n    };\n  }\n});\nvar Statistic = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/statistic/src/statistic.vue\"]]);\nexports[\"default\"] = Statistic;","map":{"version":3,"names":["name","ns","index","useNamespace","displayValue","vue","computed","value","formatter","precision","decimalSeparator","groupSeparator","props","shared","isFunction","types","isNumber","integer","decimal","String","split","padEnd","slice","replace","join","expose"],"sources":["../../../../../../packages/components/statistic/src/statistic.vue"],"sourcesContent":["<template>\n  <div :class=\"ns.b()\">\n    <div v-if=\"$slots.title || title\" :class=\"ns.e('head')\">\n      <slot name=\"title\">\n        {{ title }}\n      </slot>\n    </div>\n    <div :class=\"ns.e('content')\">\n      <div v-if=\"$slots.prefix || prefix\" :class=\"ns.e('prefix')\">\n        <slot name=\"prefix\">\n          <span>{{ prefix }}</span>\n        </slot>\n      </div>\n      <span :class=\"ns.e('number')\" :style=\"valueStyle\">\n        {{ displayValue }}\n      </span>\n      <div v-if=\"$slots.suffix || suffix\" :class=\"ns.e('suffix')\">\n        <slot name=\"suffix\">\n          <span>{{ suffix }}</span>\n        </slot>\n      </div>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { isFunction, isNumber } from '@element-plus/utils'\nimport { statisticProps } from './statistic'\n\ndefineOptions({\n  name: 'ElStatistic',\n})\n\nconst props = defineProps(statisticProps)\nconst ns = useNamespace('statistic')\n\nconst displayValue = computed(() => {\n  const { value, formatter, precision, decimalSeparator, groupSeparator } =\n    props\n\n  if (isFunction(formatter)) return formatter(value)\n\n  if (!isNumber(value)) return value\n\n  let [integer, decimal = ''] = String(value).split('.')\n  decimal = decimal\n    .padEnd(precision, '0')\n    .slice(0, precision > 0 ? precision : 0)\n  integer = integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, groupSeparator)\n  return [integer, decimal].join(decimal ? decimalSeparator : '')\n})\n\ndefineExpose({\n  /**\n   * @description current display value\n   */\n  displayValue,\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;uCA8Bc;EACZA,IAAM;AACR;;;;;;;;IAGM,MAAAC,EAAA,GAAKC,KAAA,CAAAC,YAAA,CAAa,WAAW;IAE7B,MAAAC,YAAA,GAAeC,GAAA,CAAAC,QAAA,CAAS,MAAM;MAClC,MAAM;QAAEC,KAAA;QAAOC,SAAW;QAAAC,SAAA;QAAWC,gBAAA;QAAkBC;MACrD,IAAAC,KAAA;MAEF,IAAIC,MAAA,CAAAC,UAAA,CAAWN,SAAS,GAAG,OAAOA,SAAA,CAAUD,KAAK;MAE7C,KAACQ,KAAA,CAAAC,QAAA,CAAST,KAAK,GAAU,OAAAA,KAAA;MAEzB,KAACU,OAAA,EAASC,OAAU,SAAMC,MAAA,CAAOZ,KAAK,EAAEa,KAAA,CAAM,GAAG;MAC3CF,OAAA,GAAAA,OAAA,CACPG,MAAO,CAAAZ,SAAA,EAAW,GAAG,EACrBa,KAAA,CAAM,CAAG,EAAAb,SAAA,GAAY,CAAI,GAAAA,SAAA,GAAY,CAAC;MAC/BQ,OAAA,GAAAA,OAAA,CAAQM,OAAQ,0BAAyBZ,cAAc;MACjE,OAAO,CAACM,OAAS,EAAAC,OAAO,EAAEM,IAAK,CAAAN,OAAA,GAAUR,gBAAA,GAAmB,EAAE;IAAA,CAC/D;IAEYe,MAAA;MAIXrB;IAAA,CACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}