{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar shared = require('@vue/shared');\nrequire('../../../utils/index.js');\nrequire('../../tooltip/index.js');\nrequire('../../../constants/index.js');\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar content = require('../../tooltip/src/content.js');\nvar event = require('../../../constants/event.js');\nconst autocompleteProps = runtime.buildProps({\n  valueKey: {\n    type: String,\n    default: \"value\"\n  },\n  modelValue: {\n    type: [String, Number],\n    default: \"\"\n  },\n  debounce: {\n    type: Number,\n    default: 300\n  },\n  placement: {\n    type: runtime.definePropType(String),\n    values: [\"top\", \"top-start\", \"top-end\", \"bottom\", \"bottom-start\", \"bottom-end\"],\n    default: \"bottom-start\"\n  },\n  fetchSuggestions: {\n    type: runtime.definePropType([Function, Array]),\n    default: shared.NOOP\n  },\n  popperClass: {\n    type: String,\n    default: \"\"\n  },\n  triggerOnFocus: {\n    type: Boolean,\n    default: true\n  },\n  selectWhenUnmatched: {\n    type: Boolean,\n    default: false\n  },\n  hideLoading: {\n    type: Boolean,\n    default: false\n  },\n  label: {\n    type: String\n  },\n  teleported: content.useTooltipContentProps.teleported,\n  highlightFirstItem: {\n    type: Boolean,\n    default: false\n  },\n  fitInputWidth: {\n    type: Boolean,\n    default: false\n  },\n  clearable: {\n    type: Boolean,\n    default: false\n  },\n  disabled: {\n    type: Boolean,\n    default: false\n  },\n  name: String\n});\nconst autocompleteEmits = {\n  [event.UPDATE_MODEL_EVENT]: value => shared.isString(value),\n  [event.INPUT_EVENT]: value => shared.isString(value),\n  [event.CHANGE_EVENT]: value => shared.isString(value),\n  focus: evt => evt instanceof FocusEvent,\n  blur: evt => evt instanceof FocusEvent,\n  clear: () => true,\n  select: item => shared.isObject(item)\n};\nexports.autocompleteEmits = autocompleteEmits;\nexports.autocompleteProps = autocompleteProps;","map":{"version":3,"names":["autocompleteProps","runtime","buildProps","valueKey","type","String","default","modelValue","Number","debounce","placement","definePropType","values","fetchSuggestions","Function","Array","shared","NOOP","popperClass","triggerOnFocus","Boolean","selectWhenUnmatched","hideLoading","label","teleported","content","useTooltipContentProps","highlightFirstItem","fitInputWidth","clearable","disabled","name","autocompleteEmits","event","UPDATE_MODEL_EVENT","value","isString","INPUT_EVENT","CHANGE_EVENT","focus","evt","FocusEvent","blur","clear","select","item","isObject"],"sources":["../../../../../../packages/components/autocomplete/src/autocomplete.ts"],"sourcesContent":["import { NOOP } from '@vue/shared'\nimport {\n  buildProps,\n  definePropType,\n  isObject,\n  isString,\n} from '@element-plus/utils'\nimport { useTooltipContentProps } from '@element-plus/components/tooltip'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type Autocomplete from './autocomplete.vue'\nimport type { Placement } from '@element-plus/components/popper'\nimport type { Awaitable } from '@element-plus/utils'\n\nexport type AutocompleteData = Record<string, any>[]\nexport type AutocompleteFetchSuggestionsCallback = (\n  data: AutocompleteData\n) => void\nexport type AutocompleteFetchSuggestions =\n  | ((\n      queryString: string,\n      cb: AutocompleteFetchSuggestionsCallback\n    ) => Awaitable<AutocompleteData> | void)\n  | AutocompleteData\n\nexport const autocompleteProps = buildProps({\n  /**\n   * @description key name of the input suggestion object for display\n   */\n  valueKey: {\n    type: String,\n    default: 'value',\n  },\n  /**\n   * @description binding value\n   */\n  modelValue: {\n    type: [String, Number],\n    default: '',\n  },\n  /**\n   * @description debounce delay when typing, in milliseconds\n   */\n  debounce: {\n    type: Number,\n    default: 300,\n  },\n  /**\n   * @description placement of the popup menu\n   */\n  placement: {\n    type: definePropType<Placement>(String),\n    values: [\n      'top',\n      'top-start',\n      'top-end',\n      'bottom',\n      'bottom-start',\n      'bottom-end',\n    ],\n    default: 'bottom-start',\n  },\n  /**\n   * @description a method to fetch input suggestions. When suggestions are ready, invoke `callback(data:[])` to return them to Autocomplete\n   */\n  fetchSuggestions: {\n    type: definePropType<AutocompleteFetchSuggestions>([Function, Array]),\n    default: NOOP,\n  },\n  /**\n   * @description custom class name for autocomplete's dropdown\n   */\n  popperClass: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description whether show suggestions when input focus\n   */\n  triggerOnFocus: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description whether to emit a `select` event on enter when there is no autocomplete match\n   */\n  selectWhenUnmatched: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description whether to hide the loading icon in remote search\n   */\n  hideLoading: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description label text\n   */\n  label: {\n    type: String,\n  },\n  teleported: useTooltipContentProps.teleported,\n  /**\n   * @description whether to highlight first item in remote search suggestions by default\n   */\n  highlightFirstItem: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description whether the width of the dropdown is the same as the input\n   */\n  fitInputWidth: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description whether to show clear button\n   */\n  clearable: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description whether to disable\n   */\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description same as `name` in native input\n   */\n  name: String,\n} as const)\nexport type AutocompleteProps = ExtractPropTypes<typeof autocompleteProps>\n\nexport const autocompleteEmits = {\n  [UPDATE_MODEL_EVENT]: (value: string) => isString(value),\n  [INPUT_EVENT]: (value: string) => isString(value),\n  [CHANGE_EVENT]: (value: string) => isString(value),\n  focus: (evt: FocusEvent) => evt instanceof FocusEvent,\n  blur: (evt: FocusEvent) => evt instanceof FocusEvent,\n  clear: () => true,\n  select: (item: Record<string, any>) => isObject(item),\n}\nexport type AutocompleteEmits = typeof autocompleteEmits\n\nexport type AutocompleteInstance = InstanceType<typeof Autocomplete>\n"],"mappings":";;;;;;;;;;;;AAaY,MAACA,iBAAiB,GAAGC,OAAA,CAAAC,UAAU,CAAC;EAC1CC,QAAQ,EAAE;IACRC,IAAI,EAAEC,MAAM;IACZC,OAAO,EAAE;EACb,CAAG;EACDC,UAAU,EAAE;IACVH,IAAI,EAAE,CAACC,MAAM,EAAEG,MAAM,CAAC;IACtBF,OAAO,EAAE;EACb,CAAG;EACDG,QAAQ,EAAE;IACRL,IAAI,EAAEI,MAAM;IACZF,OAAO,EAAE;EACb,CAAG;EACDI,SAAS,EAAE;IACTN,IAAI,EAAEH,OAAA,CAAAU,cAAc,CAACN,MAAM,CAAC;IAC5BO,MAAM,EAAE,CACN,KAAK,EACL,WAAW,EACX,SAAS,EACT,QAAQ,EACR,cAAc,EACd,YAAY,CACb;IACDN,OAAO,EAAE;EACb,CAAG;EACDO,gBAAgB,EAAE;IAChBT,IAAI,EAAEH,OAAA,CAAAU,cAAc,CAAC,CAACG,QAAQ,EAAEC,KAAK,CAAC,CAAC;IACvCT,OAAO,EAAEU,MAAA,CAAAC;EACb,CAAG;EACDC,WAAW,EAAE;IACXd,IAAI,EAAEC,MAAM;IACZC,OAAO,EAAE;EACb,CAAG;EACDa,cAAc,EAAE;IACdf,IAAI,EAAEgB,OAAO;IACbd,OAAO,EAAE;EACb,CAAG;EACDe,mBAAmB,EAAE;IACnBjB,IAAI,EAAEgB,OAAO;IACbd,OAAO,EAAE;EACb,CAAG;EACDgB,WAAW,EAAE;IACXlB,IAAI,EAAEgB,OAAO;IACbd,OAAO,EAAE;EACb,CAAG;EACDiB,KAAK,EAAE;IACLnB,IAAI,EAAEC;EACV,CAAG;EACDmB,UAAU,EAAEC,OAAA,CAAAC,sBAAsB,CAACF,UAAU;EAC7CG,kBAAkB,EAAE;IAClBvB,IAAI,EAAEgB,OAAO;IACbd,OAAO,EAAE;EACb,CAAG;EACDsB,aAAa,EAAE;IACbxB,IAAI,EAAEgB,OAAO;IACbd,OAAO,EAAE;EACb,CAAG;EACDuB,SAAS,EAAE;IACTzB,IAAI,EAAEgB,OAAO;IACbd,OAAO,EAAE;EACb,CAAG;EACDwB,QAAQ,EAAE;IACR1B,IAAI,EAAEgB,OAAO;IACbd,OAAO,EAAE;EACb,CAAG;EACDyB,IAAI,EAAE1B;AACR,CAAC;AACW,MAAC2B,iBAAiB,GAAG;EAC/B,CAACC,KAAA,CAAAC,kBAAkB,GAAIC,KAAK,IAAKnB,MAAA,CAAAoB,QAAQ,CAACD,KAAK,CAAC;EAChD,CAACF,KAAA,CAAAI,WAAW,GAAIF,KAAK,IAAKnB,MAAA,CAAAoB,QAAQ,CAACD,KAAK,CAAC;EACzC,CAACF,KAAA,CAAAK,YAAY,GAAIH,KAAK,IAAKnB,MAAA,CAAAoB,QAAQ,CAACD,KAAK,CAAC;EAC1CI,KAAK,EAAGC,GAAG,IAAKA,GAAG,YAAYC,UAAU;EACzCC,IAAI,EAAGF,GAAG,IAAKA,GAAG,YAAYC,UAAU;EACxCE,KAAK,EAAEA,CAAA,KAAM,IAAI;EACjBC,MAAM,EAAGC,IAAI,IAAK7B,MAAA,CAAA8B,QAAQ,CAACD,IAAI;AACjC"},"metadata":{},"sourceType":"script","externalDependencies":[]}