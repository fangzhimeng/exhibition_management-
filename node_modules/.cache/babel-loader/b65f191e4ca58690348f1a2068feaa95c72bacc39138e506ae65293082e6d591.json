{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../../../utils/index.js');\nrequire('../../../../constants/index.js');\nvar constants = require('../constants.js');\nvar types = require('../../../../utils/types.js');\nvar shared = require('@vue/shared');\nvar event = require('../../../../constants/event.js');\nconst useCheckboxModel = props => {\n  const selfModel = vue.ref(false);\n  const {\n    emit\n  } = vue.getCurrentInstance();\n  const checkboxGroup = vue.inject(constants.checkboxGroupContextKey, void 0);\n  const isGroup = vue.computed(() => types.isUndefined(checkboxGroup) === false);\n  const isLimitExceeded = vue.ref(false);\n  const model = vue.computed({\n    get() {\n      var _a, _b;\n      return isGroup.value ? (_a = checkboxGroup == null ? void 0 : checkboxGroup.modelValue) == null ? void 0 : _a.value : (_b = props.modelValue) != null ? _b : selfModel.value;\n    },\n    set(val) {\n      var _a, _b;\n      if (isGroup.value && shared.isArray(val)) {\n        isLimitExceeded.value = ((_a = checkboxGroup == null ? void 0 : checkboxGroup.max) == null ? void 0 : _a.value) !== void 0 && val.length > (checkboxGroup == null ? void 0 : checkboxGroup.max.value);\n        isLimitExceeded.value === false && ((_b = checkboxGroup == null ? void 0 : checkboxGroup.changeEvent) == null ? void 0 : _b.call(checkboxGroup, val));\n      } else {\n        emit(event.UPDATE_MODEL_EVENT, val);\n        selfModel.value = val;\n      }\n    }\n  });\n  return {\n    model,\n    isGroup,\n    isLimitExceeded\n  };\n};\nexports.useCheckboxModel = useCheckboxModel;","map":{"version":3,"names":["useCheckboxModel","props","selfModel","vue","ref","emit","getCurrentInstance","checkboxGroup","inject","constants","checkboxGroupContextKey","isGroup","computed","types","isUndefined","isLimitExceeded","model","get","_a","_b","value","modelValue","set","val","shared","isArray","max","length","changeEvent","call","event","UPDATE_MODEL_EVENT"],"sources":["../../../../../../../packages/components/checkbox/src/composables/use-checkbox-model.ts"],"sourcesContent":["import { computed, getCurrentInstance, inject, ref } from 'vue'\nimport { isArray, isUndefined } from '@element-plus/utils'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { checkboxGroupContextKey } from '../constants'\n\nimport type { CheckboxProps } from '../checkbox'\n\nexport const useCheckboxModel = (props: CheckboxProps) => {\n  const selfModel = ref<unknown>(false)\n  const { emit } = getCurrentInstance()!\n  const checkboxGroup = inject(checkboxGroupContextKey, undefined)\n  const isGroup = computed(() => isUndefined(checkboxGroup) === false)\n  const isLimitExceeded = ref(false)\n  const model = computed({\n    get() {\n      return isGroup.value\n        ? checkboxGroup?.modelValue?.value\n        : props.modelValue ?? selfModel.value\n    },\n\n    set(val: unknown) {\n      if (isGroup.value && isArray(val)) {\n        isLimitExceeded.value =\n          checkboxGroup?.max?.value !== undefined &&\n          val.length > checkboxGroup?.max.value\n        isLimitExceeded.value === false && checkboxGroup?.changeEvent?.(val)\n      } else {\n        emit(UPDATE_MODEL_EVENT, val)\n        selfModel.value = val\n      }\n    },\n  })\n\n  return {\n    model,\n    isGroup,\n    isLimitExceeded,\n  }\n}\n\nexport type CheckboxModel = ReturnType<typeof useCheckboxModel>\n"],"mappings":";;;;;;;;;;;;AAIY,MAACA,gBAAgB,GAAIC,KAAK,IAAK;EACzC,MAAMC,SAAS,GAAGC,GAAA,CAAAC,GAAG,CAAC,KAAK,CAAC;EAC5B,MAAM;IAAEC;EAAI,CAAE,GAAGF,GAAA,CAAAG,kBAAkB,EAAE;EACrC,MAAMC,aAAa,GAAGJ,GAAA,CAAAK,MAAM,CAACC,SAAA,CAAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;EAC7D,MAAMC,OAAO,GAAGR,GAAA,CAAAS,QAAQ,CAAC,MAAMC,KAAA,CAAAC,WAAW,CAACP,aAAa,CAAC,KAAK,KAAK,CAAC;EACpE,MAAMQ,eAAe,GAAGZ,GAAA,CAAAC,GAAG,CAAC,KAAK,CAAC;EAClC,MAAMY,KAAK,GAAGb,GAAA,CAAAS,QAAQ,CAAC;IACrBK,GAAGA,CAAA,EAAG;MACJ,IAAIC,EAAE,EAAEC,EAAE;MACV,OAAOR,OAAO,CAACS,KAAK,GAAG,CAACF,EAAE,GAAGX,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACc,UAAU,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGH,EAAE,CAACE,KAAK,GAAG,CAACD,EAAE,GAAGlB,KAAK,CAACoB,UAAU,KAAK,IAAI,GAAGF,EAAE,GAAGjB,SAAS,CAACkB,KAAK;IAClL,CAAK;IACDE,GAAGA,CAACC,GAAG,EAAE;MACP,IAAIL,EAAE,EAAEC,EAAE;MACV,IAAIR,OAAO,CAACS,KAAK,IAAII,MAAA,CAAAC,OAAO,CAACF,GAAG,CAAC,EAAE;QACjCR,eAAe,CAACK,KAAK,GAAG,CAAC,CAACF,EAAE,GAAGX,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACmB,GAAG,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGR,EAAE,CAACE,KAAK,MAAM,KAAK,CAAC,IAAIG,GAAG,CAACI,MAAM,IAAIpB,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACmB,GAAG,CAACN,KAAK,CAAC;QACrML,eAAe,CAACK,KAAK,KAAK,KAAK,KAAK,CAACD,EAAE,GAAGZ,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACqB,WAAW,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGT,EAAE,CAACU,IAAI,CAACtB,aAAa,EAAEgB,GAAG,CAAC,CAAC;MAC7J,CAAO,MAAM;QACLlB,IAAI,CAACyB,KAAA,CAAAC,kBAAkB,EAAER,GAAG,CAAC;QAC7BrB,SAAS,CAACkB,KAAK,GAAGG,GAAG;MAC7B;IACA;EACA,CAAG,CAAC;EACF,OAAO;IACLP,KAAK;IACLL,OAAO;IACPI;EACJ,CAAG;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}