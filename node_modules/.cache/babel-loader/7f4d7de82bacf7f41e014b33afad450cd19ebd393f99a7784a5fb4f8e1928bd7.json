{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar core = require('@vueuse/core');\nrequire('../../../utils/index.js');\nrequire('../../../constants/index.js');\nvar index = require('../../badge/index.js');\nrequire('../../config-provider/index.js');\nvar index$1 = require('../../icon/index.js');\nvar message = require('./message.js');\nvar instance = require('./instance.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar icon = require('../../../utils/vue/icon.js');\nvar useGlobalConfig = require('../../config-provider/src/hooks/use-global-config.js');\nvar aria = require('../../../constants/aria.js');\nconst _hoisted_1 = [\"id\"];\nconst _hoisted_2 = [\"innerHTML\"];\nconst __default__ = vue.defineComponent({\n  name: \"ElMessage\"\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: message.messageProps,\n  emits: message.messageEmits,\n  setup(__props, {\n    expose\n  }) {\n    const props = __props;\n    const {\n      Close\n    } = icon.TypeComponents;\n    const {\n      ns,\n      zIndex\n    } = useGlobalConfig.useGlobalComponentSettings(\"message\");\n    const {\n      currentZIndex,\n      nextZIndex\n    } = zIndex;\n    const messageRef = vue.ref();\n    const visible = vue.ref(false);\n    const height = vue.ref(0);\n    let stopTimer = void 0;\n    const badgeType = vue.computed(() => props.type ? props.type === \"error\" ? \"danger\" : props.type : \"info\");\n    const typeClass = vue.computed(() => {\n      const type = props.type;\n      return {\n        [ns.bm(\"icon\", type)]: type && icon.TypeComponentsMap[type]\n      };\n    });\n    const iconComponent = vue.computed(() => props.icon || icon.TypeComponentsMap[props.type] || \"\");\n    const lastOffset = vue.computed(() => instance.getLastOffset(props.id));\n    const offset = vue.computed(() => instance.getOffsetOrSpace(props.id, props.offset) + lastOffset.value);\n    const bottom = vue.computed(() => height.value + offset.value);\n    const customStyle = vue.computed(() => ({\n      top: `${offset.value}px`,\n      zIndex: currentZIndex.value\n    }));\n    function startTimer() {\n      if (props.duration === 0) return;\n      ({\n        stop: stopTimer\n      } = core.useTimeoutFn(() => {\n        close();\n      }, props.duration));\n    }\n    function clearTimer() {\n      stopTimer == null ? void 0 : stopTimer();\n    }\n    function close() {\n      visible.value = false;\n    }\n    function keydown({\n      code\n    }) {\n      if (code === aria.EVENT_CODE.esc) {\n        close();\n      }\n    }\n    vue.onMounted(() => {\n      startTimer();\n      nextZIndex();\n      visible.value = true;\n    });\n    vue.watch(() => props.repeatNum, () => {\n      clearTimer();\n      startTimer();\n    });\n    core.useEventListener(document, \"keydown\", keydown);\n    core.useResizeObserver(messageRef, () => {\n      height.value = messageRef.value.getBoundingClientRect().height;\n    });\n    expose({\n      visible,\n      bottom,\n      close\n    });\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createBlock(vue.Transition, {\n        name: vue.unref(ns).b(\"fade\"),\n        onBeforeLeave: _ctx.onClose,\n        onAfterLeave: _cache[0] || (_cache[0] = $event => _ctx.$emit(\"destroy\")),\n        persisted: \"\"\n      }, {\n        default: vue.withCtx(() => [vue.withDirectives(vue.createElementVNode(\"div\", {\n          id: _ctx.id,\n          ref_key: \"messageRef\",\n          ref: messageRef,\n          class: vue.normalizeClass([vue.unref(ns).b(), {\n            [vue.unref(ns).m(_ctx.type)]: _ctx.type && !_ctx.icon\n          }, vue.unref(ns).is(\"center\", _ctx.center), vue.unref(ns).is(\"closable\", _ctx.showClose), _ctx.customClass]),\n          style: vue.normalizeStyle(vue.unref(customStyle)),\n          role: \"alert\",\n          onMouseenter: clearTimer,\n          onMouseleave: startTimer\n        }, [_ctx.repeatNum > 1 ? (vue.openBlock(), vue.createBlock(vue.unref(index.ElBadge), {\n          key: 0,\n          value: _ctx.repeatNum,\n          type: vue.unref(badgeType),\n          class: vue.normalizeClass(vue.unref(ns).e(\"badge\"))\n        }, null, 8, [\"value\", \"type\", \"class\"])) : vue.createCommentVNode(\"v-if\", true), vue.unref(iconComponent) ? (vue.openBlock(), vue.createBlock(vue.unref(index$1.ElIcon), {\n          key: 1,\n          class: vue.normalizeClass([vue.unref(ns).e(\"icon\"), vue.unref(typeClass)])\n        }, {\n          default: vue.withCtx(() => [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(vue.unref(iconComponent))))]),\n          _: 1\n        }, 8, [\"class\"])) : vue.createCommentVNode(\"v-if\", true), vue.renderSlot(_ctx.$slots, \"default\", {}, () => [!_ctx.dangerouslyUseHTMLString ? (vue.openBlock(), vue.createElementBlock(\"p\", {\n          key: 0,\n          class: vue.normalizeClass(vue.unref(ns).e(\"content\"))\n        }, vue.toDisplayString(_ctx.message), 3)) : (vue.openBlock(), vue.createElementBlock(vue.Fragment, {\n          key: 1\n        }, [vue.createCommentVNode(\" Caution here, message could've been compromised, never use user's input as message \"), vue.createElementVNode(\"p\", {\n          class: vue.normalizeClass(vue.unref(ns).e(\"content\")),\n          innerHTML: _ctx.message\n        }, null, 10, _hoisted_2)], 2112))]), _ctx.showClose ? (vue.openBlock(), vue.createBlock(vue.unref(index$1.ElIcon), {\n          key: 2,\n          class: vue.normalizeClass(vue.unref(ns).e(\"closeBtn\")),\n          onClick: vue.withModifiers(close, [\"stop\"])\n        }, {\n          default: vue.withCtx(() => [vue.createVNode(vue.unref(Close))]),\n          _: 1\n        }, 8, [\"class\", \"onClick\"])) : vue.createCommentVNode(\"v-if\", true)], 46, _hoisted_1), [[vue.vShow, visible.value]])]),\n        _: 3\n      }, 8, [\"name\", \"onBeforeLeave\"]);\n    };\n  }\n});\nvar MessageConstructor = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/message/src/message.vue\"]]);\nexports[\"default\"] = MessageConstructor;","map":{"version":3,"names":["name","Close","icon","TypeComponents","ns","zIndex","useGlobalConfig","useGlobalComponentSettings","currentZIndex","nextZIndex","messageRef","vue","ref","visible","height","stopTimer","badgeType","computed","props","type","typeClass","bm","TypeComponentsMap","iconComponent","lastOffset","instance","getLastOffset","id","offset","getOffsetOrSpace","value","bottom","customStyle","top","startTimer","duration","stop","core","useTimeoutFn","close","clearTimer","keydown","code","aria","EVENT_CODE","esc","onMounted","watch","repeatNum","useEventListener","document","useResizeObserver","getBoundingClientRect","expose"],"sources":["../../../../../../packages/components/message/src/message.vue"],"sourcesContent":["<template>\n  <transition\n    :name=\"ns.b('fade')\"\n    @before-leave=\"onClose\"\n    @after-leave=\"$emit('destroy')\"\n  >\n    <div\n      v-show=\"visible\"\n      :id=\"id\"\n      ref=\"messageRef\"\n      :class=\"[\n        ns.b(),\n        { [ns.m(type)]: type && !icon },\n        ns.is('center', center),\n        ns.is('closable', showClose),\n        customClass,\n      ]\"\n      :style=\"customStyle\"\n      role=\"alert\"\n      @mouseenter=\"clearTimer\"\n      @mouseleave=\"startTimer\"\n    >\n      <el-badge\n        v-if=\"repeatNum > 1\"\n        :value=\"repeatNum\"\n        :type=\"badgeType\"\n        :class=\"ns.e('badge')\"\n      />\n      <el-icon v-if=\"iconComponent\" :class=\"[ns.e('icon'), typeClass]\">\n        <component :is=\"iconComponent\" />\n      </el-icon>\n      <slot>\n        <p v-if=\"!dangerouslyUseHTMLString\" :class=\"ns.e('content')\">\n          {{ message }}\n        </p>\n        <!-- Caution here, message could've been compromised, never use user's input as message -->\n        <p v-else :class=\"ns.e('content')\" v-html=\"message\" />\n      </slot>\n      <el-icon v-if=\"showClose\" :class=\"ns.e('closeBtn')\" @click.stop=\"close\">\n        <Close />\n      </el-icon>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, onMounted, ref, watch } from 'vue'\nimport { useEventListener, useResizeObserver, useTimeoutFn } from '@vueuse/core'\nimport { TypeComponents, TypeComponentsMap } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport ElBadge from '@element-plus/components/badge'\nimport { useGlobalComponentSettings } from '@element-plus/components/config-provider'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { messageEmits, messageProps } from './message'\nimport { getLastOffset, getOffsetOrSpace } from './instance'\nimport type { BadgeProps } from '@element-plus/components/badge'\nimport type { CSSProperties } from 'vue'\n\nconst { Close } = TypeComponents\n\ndefineOptions({\n  name: 'ElMessage',\n})\n\nconst props = defineProps(messageProps)\ndefineEmits(messageEmits)\n\nconst { ns, zIndex } = useGlobalComponentSettings('message')\nconst { currentZIndex, nextZIndex } = zIndex\n\nconst messageRef = ref<HTMLDivElement>()\nconst visible = ref(false)\nconst height = ref(0)\n\nlet stopTimer: (() => void) | undefined = undefined\n\nconst badgeType = computed<BadgeProps['type']>(() =>\n  props.type ? (props.type === 'error' ? 'danger' : props.type) : 'info'\n)\nconst typeClass = computed(() => {\n  const type = props.type\n  return { [ns.bm('icon', type)]: type && TypeComponentsMap[type] }\n})\nconst iconComponent = computed(\n  () => props.icon || TypeComponentsMap[props.type] || ''\n)\n\nconst lastOffset = computed(() => getLastOffset(props.id))\nconst offset = computed(\n  () => getOffsetOrSpace(props.id, props.offset) + lastOffset.value\n)\nconst bottom = computed((): number => height.value + offset.value)\nconst customStyle = computed<CSSProperties>(() => ({\n  top: `${offset.value}px`,\n  zIndex: currentZIndex.value,\n}))\n\nfunction startTimer() {\n  if (props.duration === 0) return\n  ;({ stop: stopTimer } = useTimeoutFn(() => {\n    close()\n  }, props.duration))\n}\n\nfunction clearTimer() {\n  stopTimer?.()\n}\n\nfunction close() {\n  visible.value = false\n}\n\nfunction keydown({ code }: KeyboardEvent) {\n  if (code === EVENT_CODE.esc) {\n    // press esc to close the message\n    close()\n  }\n}\n\nonMounted(() => {\n  startTimer()\n  nextZIndex()\n  visible.value = true\n})\n\nwatch(\n  () => props.repeatNum,\n  () => {\n    clearTimer()\n    startTimer()\n  }\n)\n\nuseEventListener(document, 'keydown', keydown)\n\nuseResizeObserver(messageRef, () => {\n  height.value = messageRef.value!.getBoundingClientRect().height\n})\n\ndefineExpose({\n  visible,\n  bottom,\n  close,\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}