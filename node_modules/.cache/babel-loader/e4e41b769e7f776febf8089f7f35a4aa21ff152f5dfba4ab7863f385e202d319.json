{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar dayjs = require('dayjs');\nvar lodashUnified = require('lodash-unified');\nrequire('../../../../hooks/index.js');\nrequire('../../../../utils/index.js');\nvar utils = require('../utils.js');\nvar index = require('../../../../hooks/use-locale/index.js');\nvar arrays = require('../../../../utils/arrays.js');\nvar index$1 = require('../../../../hooks/use-namespace/index.js');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);\nconst isNormalDay = (type = \"\") => {\n  return [\"normal\", \"today\"].includes(type);\n};\nconst useBasicDateTable = (props, emit) => {\n  const {\n    lang\n  } = index.useLocale();\n  const tbodyRef = vue.ref();\n  const currentCellRef = vue.ref();\n  const lastRow = vue.ref();\n  const lastColumn = vue.ref();\n  const tableRows = vue.ref([[], [], [], [], [], []]);\n  let focusWithClick = false;\n  const firstDayOfWeek = props.date.$locale().weekStart || 7;\n  const WEEKS_CONSTANT = props.date.locale(\"en\").localeData().weekdaysShort().map(_ => _.toLowerCase());\n  const offsetDay = vue.computed(() => {\n    return firstDayOfWeek > 3 ? 7 - firstDayOfWeek : -firstDayOfWeek;\n  });\n  const startDate = vue.computed(() => {\n    const startDayOfMonth = props.date.startOf(\"month\");\n    return startDayOfMonth.subtract(startDayOfMonth.day() || 7, \"day\");\n  });\n  const WEEKS = vue.computed(() => {\n    return WEEKS_CONSTANT.concat(WEEKS_CONSTANT).slice(firstDayOfWeek, firstDayOfWeek + 7);\n  });\n  const hasCurrent = vue.computed(() => {\n    return lodashUnified.flatten(vue.unref(rows)).some(row => {\n      return row.isCurrent;\n    });\n  });\n  const days = vue.computed(() => {\n    const startOfMonth = props.date.startOf(\"month\");\n    const startOfMonthDay = startOfMonth.day() || 7;\n    const dateCountOfMonth = startOfMonth.daysInMonth();\n    const dateCountOfLastMonth = startOfMonth.subtract(1, \"month\").daysInMonth();\n    return {\n      startOfMonthDay,\n      dateCountOfMonth,\n      dateCountOfLastMonth\n    };\n  });\n  const selectedDate = vue.computed(() => {\n    return props.selectionMode === \"dates\" ? arrays.castArray(props.parsedValue) : [];\n  });\n  const setDateText = (cell, {\n    count,\n    rowIndex,\n    columnIndex\n  }) => {\n    const {\n      startOfMonthDay,\n      dateCountOfMonth,\n      dateCountOfLastMonth\n    } = vue.unref(days);\n    const offset = vue.unref(offsetDay);\n    if (rowIndex >= 0 && rowIndex <= 1) {\n      const numberOfDaysFromPreviousMonth = startOfMonthDay + offset < 0 ? 7 + startOfMonthDay + offset : startOfMonthDay + offset;\n      if (columnIndex + rowIndex * 7 >= numberOfDaysFromPreviousMonth) {\n        cell.text = count;\n        return true;\n      } else {\n        cell.text = dateCountOfLastMonth - (numberOfDaysFromPreviousMonth - columnIndex % 7) + 1 + rowIndex * 7;\n        cell.type = \"prev-month\";\n      }\n    } else {\n      if (count <= dateCountOfMonth) {\n        cell.text = count;\n      } else {\n        cell.text = count - dateCountOfMonth;\n        cell.type = \"next-month\";\n      }\n      return true;\n    }\n    return false;\n  };\n  const setCellMetadata = (cell, {\n    columnIndex,\n    rowIndex\n  }, count) => {\n    const {\n      disabledDate,\n      cellClassName\n    } = props;\n    const _selectedDate = vue.unref(selectedDate);\n    const shouldIncrement = setDateText(cell, {\n      count,\n      rowIndex,\n      columnIndex\n    });\n    const cellDate = cell.dayjs.toDate();\n    cell.selected = _selectedDate.find(d => d.valueOf() === cell.dayjs.valueOf());\n    cell.isSelected = !!cell.selected;\n    cell.isCurrent = isCurrent(cell);\n    cell.disabled = disabledDate == null ? void 0 : disabledDate(cellDate);\n    cell.customClass = cellClassName == null ? void 0 : cellClassName(cellDate);\n    return shouldIncrement;\n  };\n  const setRowMetadata = row => {\n    if (props.selectionMode === \"week\") {\n      const [start, end] = props.showWeekNumber ? [1, 7] : [0, 6];\n      const isActive = isWeekActive(row[start + 1]);\n      row[start].inRange = isActive;\n      row[start].start = isActive;\n      row[end].inRange = isActive;\n      row[end].end = isActive;\n    }\n  };\n  const rows = vue.computed(() => {\n    const {\n      minDate,\n      maxDate,\n      rangeState,\n      showWeekNumber\n    } = props;\n    const offset = vue.unref(offsetDay);\n    const rows_ = vue.unref(tableRows);\n    const dateUnit = \"day\";\n    let count = 1;\n    if (showWeekNumber) {\n      for (let rowIndex = 0; rowIndex < 6; rowIndex++) {\n        if (!rows_[rowIndex][0]) {\n          rows_[rowIndex][0] = {\n            type: \"week\",\n            text: vue.unref(startDate).add(rowIndex * 7 + 1, dateUnit).week()\n          };\n        }\n      }\n    }\n    utils.buildPickerTable({\n      row: 6,\n      column: 7\n    }, rows_, {\n      startDate: minDate,\n      columnIndexOffset: showWeekNumber ? 1 : 0,\n      nextEndDate: rangeState.endDate || maxDate || rangeState.selecting && minDate || null,\n      now: dayjs__default[\"default\"]().locale(vue.unref(lang)).startOf(dateUnit),\n      unit: dateUnit,\n      relativeDateGetter: idx => vue.unref(startDate).add(idx - offset, dateUnit),\n      setCellMetadata: (...args) => {\n        if (setCellMetadata(...args, count)) {\n          count += 1;\n        }\n      },\n      setRowMetadata\n    });\n    return rows_;\n  });\n  vue.watch(() => props.date, async () => {\n    var _a;\n    if ((_a = vue.unref(tbodyRef)) == null ? void 0 : _a.contains(document.activeElement)) {\n      await vue.nextTick();\n      await focus();\n    }\n  });\n  const focus = async () => {\n    var _a;\n    return (_a = vue.unref(currentCellRef)) == null ? void 0 : _a.focus();\n  };\n  const isCurrent = cell => {\n    return props.selectionMode === \"date\" && isNormalDay(cell.type) && cellMatchesDate(cell, props.parsedValue);\n  };\n  const cellMatchesDate = (cell, date) => {\n    if (!date) return false;\n    return dayjs__default[\"default\"](date).locale(vue.unref(lang)).isSame(props.date.date(Number(cell.text)), \"day\");\n  };\n  const getDateOfCell = (row, column) => {\n    const offsetFromStart = row * 7 + (column - (props.showWeekNumber ? 1 : 0)) - vue.unref(offsetDay);\n    return vue.unref(startDate).add(offsetFromStart, \"day\");\n  };\n  const handleMouseMove = event => {\n    var _a;\n    if (!props.rangeState.selecting) return;\n    let target = event.target;\n    if (target.tagName === \"SPAN\") {\n      target = (_a = target.parentNode) == null ? void 0 : _a.parentNode;\n    }\n    if (target.tagName === \"DIV\") {\n      target = target.parentNode;\n    }\n    if (target.tagName !== \"TD\") return;\n    const row = target.parentNode.rowIndex - 1;\n    const column = target.cellIndex;\n    if (vue.unref(rows)[row][column].disabled) return;\n    if (row !== vue.unref(lastRow) || column !== vue.unref(lastColumn)) {\n      lastRow.value = row;\n      lastColumn.value = column;\n      emit(\"changerange\", {\n        selecting: true,\n        endDate: getDateOfCell(row, column)\n      });\n    }\n  };\n  const isSelectedCell = cell => {\n    return !vue.unref(hasCurrent) && (cell == null ? void 0 : cell.text) === 1 && cell.type === \"normal\" || cell.isCurrent;\n  };\n  const handleFocus = event => {\n    if (focusWithClick || vue.unref(hasCurrent) || props.selectionMode !== \"date\") return;\n    handlePickDate(event, true);\n  };\n  const handleMouseDown = event => {\n    const target = event.target.closest(\"td\");\n    if (!target) return;\n    focusWithClick = true;\n  };\n  const handleMouseUp = event => {\n    const target = event.target.closest(\"td\");\n    if (!target) return;\n    focusWithClick = false;\n  };\n  const handleRangePick = newDate => {\n    if (!props.rangeState.selecting || !props.minDate) {\n      emit(\"pick\", {\n        minDate: newDate,\n        maxDate: null\n      });\n      emit(\"select\", true);\n    } else {\n      if (newDate >= props.minDate) {\n        emit(\"pick\", {\n          minDate: props.minDate,\n          maxDate: newDate\n        });\n      } else {\n        emit(\"pick\", {\n          minDate: newDate,\n          maxDate: props.minDate\n        });\n      }\n      emit(\"select\", false);\n    }\n  };\n  const handleWeekPick = newDate => {\n    const weekNumber = newDate.week();\n    const value = `${newDate.year()}w${weekNumber}`;\n    emit(\"pick\", {\n      year: newDate.year(),\n      week: weekNumber,\n      value,\n      date: newDate.startOf(\"week\")\n    });\n  };\n  const handleDatesPick = (newDate, selected) => {\n    const newValue = selected ? arrays.castArray(props.parsedValue).filter(d => (d == null ? void 0 : d.valueOf()) !== newDate.valueOf()) : arrays.castArray(props.parsedValue).concat([newDate]);\n    emit(\"pick\", newValue);\n  };\n  const handlePickDate = (event, isKeyboardMovement = false) => {\n    const target = event.target.closest(\"td\");\n    if (!target) return;\n    const row = target.parentNode.rowIndex - 1;\n    const column = target.cellIndex;\n    const cell = vue.unref(rows)[row][column];\n    if (cell.disabled || cell.type === \"week\") return;\n    const newDate = getDateOfCell(row, column);\n    switch (props.selectionMode) {\n      case \"range\":\n        {\n          handleRangePick(newDate);\n          break;\n        }\n      case \"date\":\n        {\n          emit(\"pick\", newDate, isKeyboardMovement);\n          break;\n        }\n      case \"week\":\n        {\n          handleWeekPick(newDate);\n          break;\n        }\n      case \"dates\":\n        {\n          handleDatesPick(newDate, !!cell.selected);\n          break;\n        }\n      default:\n        {\n          break;\n        }\n    }\n  };\n  const isWeekActive = cell => {\n    if (props.selectionMode !== \"week\") return false;\n    let newDate = props.date.startOf(\"day\");\n    if (cell.type === \"prev-month\") {\n      newDate = newDate.subtract(1, \"month\");\n    }\n    if (cell.type === \"next-month\") {\n      newDate = newDate.add(1, \"month\");\n    }\n    newDate = newDate.date(Number.parseInt(cell.text, 10));\n    if (props.parsedValue && !Array.isArray(props.parsedValue)) {\n      const dayOffset = (props.parsedValue.day() - firstDayOfWeek + 7) % 7 - 1;\n      const weekDate = props.parsedValue.subtract(dayOffset, \"day\");\n      return weekDate.isSame(newDate, \"day\");\n    }\n    return false;\n  };\n  return {\n    WEEKS,\n    rows,\n    tbodyRef,\n    currentCellRef,\n    focus,\n    isCurrent,\n    isWeekActive,\n    isSelectedCell,\n    handlePickDate,\n    handleMouseUp,\n    handleMouseDown,\n    handleMouseMove,\n    handleFocus\n  };\n};\nconst useBasicDateTableDOM = (props, {\n  isCurrent,\n  isWeekActive\n}) => {\n  const ns = index$1.useNamespace(\"date-table\");\n  const {\n    t\n  } = index.useLocale();\n  const tableKls = vue.computed(() => [ns.b(), {\n    \"is-week-mode\": props.selectionMode === \"week\"\n  }]);\n  const tableLabel = vue.computed(() => t(\"el.datepicker.dateTablePrompt\"));\n  const weekLabel = vue.computed(() => t(\"el.datepicker.week\"));\n  const getCellClasses = cell => {\n    const classes = [];\n    if (isNormalDay(cell.type) && !cell.disabled) {\n      classes.push(\"available\");\n      if (cell.type === \"today\") {\n        classes.push(\"today\");\n      }\n    } else {\n      classes.push(cell.type);\n    }\n    if (isCurrent(cell)) {\n      classes.push(\"current\");\n    }\n    if (cell.inRange && (isNormalDay(cell.type) || props.selectionMode === \"week\")) {\n      classes.push(\"in-range\");\n      if (cell.start) {\n        classes.push(\"start-date\");\n      }\n      if (cell.end) {\n        classes.push(\"end-date\");\n      }\n    }\n    if (cell.disabled) {\n      classes.push(\"disabled\");\n    }\n    if (cell.selected) {\n      classes.push(\"selected\");\n    }\n    if (cell.customClass) {\n      classes.push(cell.customClass);\n    }\n    return classes.join(\" \");\n  };\n  const getRowKls = cell => [ns.e(\"row\"), {\n    current: isWeekActive(cell)\n  }];\n  return {\n    tableKls,\n    tableLabel,\n    weekLabel,\n    getCellClasses,\n    getRowKls,\n    t\n  };\n};\nexports.useBasicDateTable = useBasicDateTable;\nexports.useBasicDateTableDOM = useBasicDateTableDOM;","map":{"version":3,"names":["isNormalDay","type","includes","useBasicDateTable","props","emit","lang","index","useLocale","tbodyRef","vue","ref","currentCellRef","lastRow","lastColumn","tableRows","focusWithClick","firstDayOfWeek","date","$locale","weekStart","WEEKS_CONSTANT","locale","localeData","weekdaysShort","map","_","toLowerCase","offsetDay","computed","startDate","startDayOfMonth","startOf","subtract","day","WEEKS","concat","slice","hasCurrent","lodashUnified","flatten","unref","rows","some","row","isCurrent","days","startOfMonth","startOfMonthDay","dateCountOfMonth","daysInMonth","dateCountOfLastMonth","selectedDate","selectionMode","arrays","castArray","parsedValue","setDateText","cell","count","rowIndex","columnIndex","offset","numberOfDaysFromPreviousMonth","text","setCellMetadata","disabledDate","cellClassName","_selectedDate","shouldIncrement","cellDate","dayjs","toDate","selected","find","d","valueOf","isSelected","disabled","customClass","setRowMetadata","start","end","showWeekNumber","isActive","isWeekActive","inRange","minDate","maxDate","rangeState","rows_","dateUnit","add","week","utils","buildPickerTable","column","columnIndexOffset","nextEndDate","endDate","selecting","now","dayjs__default","unit","relativeDateGetter","idx","args","watch","_a","contains","document","activeElement","nextTick","focus","cellMatchesDate","isSame","Number","getDateOfCell","offsetFromStart","handleMouseMove","event","target","tagName","parentNode","cellIndex","value","isSelectedCell","handleFocus","handlePickDate","handleMouseDown","closest","handleMouseUp","handleRangePick","newDate","handleWeekPick","weekNumber","year","handleDatesPick","newValue","filter","isKeyboardMovement","parseInt","Array","isArray","dayOffset","weekDate","useBasicDateTableDOM","ns","index$1","useNamespace","t","tableKls","b","tableLabel","weekLabel","getCellClasses","classes","push","join","getRowKls","e","current"],"sources":["../../../../../../../packages/components/date-picker/src/composables/use-basic-date-table.ts"],"sourcesContent":["import { computed, nextTick, ref, unref, watch } from 'vue'\nimport dayjs from 'dayjs'\nimport { flatten } from 'lodash-unified'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { castArray } from '@element-plus/utils'\nimport { buildPickerTable } from '../utils'\n\nimport type { SetupContext } from 'vue'\nimport type { Dayjs } from 'dayjs'\nimport type { DateCell } from '../date-picker.type'\nimport type {\n  BasicDateTableEmits,\n  BasicDateTableProps,\n} from '../props/basic-date-table'\n\nconst isNormalDay = (type = '') => {\n  return ['normal', 'today'].includes(type)\n}\n\nexport const useBasicDateTable = (\n  props: BasicDateTableProps,\n  emit: SetupContext<BasicDateTableEmits>['emit']\n) => {\n  const { lang } = useLocale()\n  const tbodyRef = ref<HTMLElement>()\n  const currentCellRef = ref<HTMLElement>()\n  // data\n  const lastRow = ref<number>()\n  const lastColumn = ref<number>()\n  const tableRows = ref<DateCell[][]>([[], [], [], [], [], []])\n\n  let focusWithClick = false\n\n  // todo better way to get Day.js locale object\n  const firstDayOfWeek = (props.date as any).$locale().weekStart || 7\n  const WEEKS_CONSTANT = props.date\n    .locale('en')\n    .localeData()\n    .weekdaysShort()\n    .map((_) => _.toLowerCase())\n\n  const offsetDay = computed(() => {\n    // Sunday 7(0), cal the left and right offset days, 3217654, such as Monday is -1, the is to adjust the position of the first two rows of dates\n    return firstDayOfWeek > 3 ? 7 - firstDayOfWeek : -firstDayOfWeek\n  })\n\n  const startDate = computed(() => {\n    const startDayOfMonth = props.date.startOf('month')\n    return startDayOfMonth.subtract(startDayOfMonth.day() || 7, 'day')\n  })\n\n  const WEEKS = computed(() => {\n    return WEEKS_CONSTANT.concat(WEEKS_CONSTANT).slice(\n      firstDayOfWeek,\n      firstDayOfWeek + 7\n    )\n  })\n\n  const hasCurrent = computed<boolean>(() => {\n    return flatten(unref(rows)).some((row) => {\n      return row.isCurrent\n    })\n  })\n\n  const days = computed(() => {\n    const startOfMonth = props.date.startOf('month')\n    const startOfMonthDay = startOfMonth.day() || 7 // day of first day\n    const dateCountOfMonth = startOfMonth.daysInMonth()\n\n    const dateCountOfLastMonth = startOfMonth.subtract(1, 'month').daysInMonth()\n\n    return {\n      startOfMonthDay,\n      dateCountOfMonth,\n      dateCountOfLastMonth,\n    }\n  })\n\n  const selectedDate = computed(() => {\n    return props.selectionMode === 'dates'\n      ? (castArray(props.parsedValue) as Dayjs[])\n      : ([] as Dayjs[])\n  })\n\n  // Return value indicates should the counter be incremented\n  type CellCoordinate = { columnIndex: number; rowIndex: number }\n  type CellMeta = CellCoordinate & {\n    count: number\n  }\n  const setDateText = (\n    cell: DateCell,\n    { count, rowIndex, columnIndex }: CellMeta\n  ): boolean => {\n    const { startOfMonthDay, dateCountOfMonth, dateCountOfLastMonth } =\n      unref(days)\n    const offset = unref(offsetDay)\n    if (rowIndex >= 0 && rowIndex <= 1) {\n      const numberOfDaysFromPreviousMonth =\n        startOfMonthDay + offset < 0\n          ? 7 + startOfMonthDay + offset\n          : startOfMonthDay + offset\n\n      if (columnIndex + rowIndex * 7 >= numberOfDaysFromPreviousMonth) {\n        cell.text = count\n        return true\n      } else {\n        cell.text =\n          dateCountOfLastMonth -\n          (numberOfDaysFromPreviousMonth - (columnIndex % 7)) +\n          1 +\n          rowIndex * 7\n        cell.type = 'prev-month'\n      }\n    } else {\n      if (count <= dateCountOfMonth) {\n        cell.text = count\n      } else {\n        cell.text = count - dateCountOfMonth\n        cell.type = 'next-month'\n      }\n      return true\n    }\n    return false\n  }\n\n  const setCellMetadata = (\n    cell: DateCell,\n    { columnIndex, rowIndex }: CellCoordinate,\n    count: number\n  ) => {\n    const { disabledDate, cellClassName } = props\n    const _selectedDate = unref(selectedDate)\n    const shouldIncrement = setDateText(cell, { count, rowIndex, columnIndex })\n\n    const cellDate = cell.dayjs!.toDate()\n    cell.selected = _selectedDate.find(\n      (d) => d.valueOf() === cell.dayjs!.valueOf()\n    )\n    cell.isSelected = !!cell.selected\n    cell.isCurrent = isCurrent(cell)\n    cell.disabled = disabledDate?.(cellDate)\n    cell.customClass = cellClassName?.(cellDate)\n    return shouldIncrement\n  }\n\n  const setRowMetadata = (row: DateCell[]) => {\n    if (props.selectionMode === 'week') {\n      const [start, end] = props.showWeekNumber ? [1, 7] : [0, 6]\n      const isActive = isWeekActive(row[start + 1])\n      row[start].inRange = isActive\n      row[start].start = isActive\n      row[end].inRange = isActive\n      row[end].end = isActive\n    }\n  }\n\n  const rows = computed(() => {\n    const { minDate, maxDate, rangeState, showWeekNumber } = props\n\n    const offset = unref(offsetDay)\n    const rows_ = unref(tableRows)\n    const dateUnit = 'day'\n    let count = 1\n\n    if (showWeekNumber) {\n      for (let rowIndex = 0; rowIndex < 6; rowIndex++) {\n        if (!rows_[rowIndex][0]) {\n          rows_[rowIndex][0] = {\n            type: 'week',\n            text: unref(startDate)\n              .add(rowIndex * 7 + 1, dateUnit)\n              .week(),\n          }\n        }\n      }\n    }\n\n    buildPickerTable({ row: 6, column: 7 }, rows_, {\n      startDate: minDate,\n      columnIndexOffset: showWeekNumber ? 1 : 0,\n      nextEndDate:\n        rangeState.endDate ||\n        maxDate ||\n        (rangeState.selecting && minDate) ||\n        null,\n      now: dayjs().locale(unref(lang)).startOf(dateUnit),\n      unit: dateUnit,\n      relativeDateGetter: (idx: number) =>\n        unref(startDate).add(idx - offset, dateUnit),\n      setCellMetadata: (...args) => {\n        if (setCellMetadata(...args, count)) {\n          count += 1\n        }\n      },\n\n      setRowMetadata,\n    })\n\n    return rows_\n  })\n\n  watch(\n    () => props.date,\n    async () => {\n      if (unref(tbodyRef)?.contains(document.activeElement)) {\n        await nextTick()\n        await focus()\n        // currentCellRef.value?.focus()\n      }\n    }\n  )\n\n  const focus = async () => unref(currentCellRef)?.focus()\n\n  const isCurrent = (cell: DateCell): boolean => {\n    return (\n      props.selectionMode === 'date' &&\n      isNormalDay(cell.type) &&\n      cellMatchesDate(cell, props.parsedValue as Dayjs)\n    )\n  }\n\n  const cellMatchesDate = (cell: DateCell, date: Dayjs) => {\n    if (!date) return false\n    return dayjs(date)\n      .locale(unref(lang))\n      .isSame(props.date.date(Number(cell.text)), 'day')\n  }\n\n  const getDateOfCell = (row: number, column: number) => {\n    const offsetFromStart =\n      row * 7 + (column - (props.showWeekNumber ? 1 : 0)) - unref(offsetDay)\n    return unref(startDate).add(offsetFromStart, 'day')\n  }\n\n  const handleMouseMove = (event: MouseEvent) => {\n    if (!props.rangeState.selecting) return\n\n    let target = event.target as HTMLElement\n    if (target.tagName === 'SPAN') {\n      target = target.parentNode?.parentNode as HTMLElement\n    }\n    if (target.tagName === 'DIV') {\n      target = target.parentNode as HTMLElement\n    }\n    if (target.tagName !== 'TD') return\n\n    const row = (target.parentNode as HTMLTableRowElement).rowIndex - 1\n    const column = (target as HTMLTableCellElement).cellIndex\n\n    // can not select disabled date\n    if (unref(rows)[row][column].disabled) return\n\n    // only update rangeState when mouse moves to a new cell\n    // this avoids frequent Date object creation and improves performance\n    if (row !== unref(lastRow) || column !== unref(lastColumn)) {\n      lastRow.value = row\n      lastColumn.value = column\n      emit('changerange', {\n        selecting: true,\n        endDate: getDateOfCell(row, column),\n      })\n    }\n  }\n\n  const isSelectedCell = (cell: DateCell) => {\n    return (\n      (!unref(hasCurrent) && cell?.text === 1 && cell.type === 'normal') ||\n      cell.isCurrent\n    )\n  }\n\n  const handleFocus = (event: FocusEvent) => {\n    if (focusWithClick || unref(hasCurrent) || props.selectionMode !== 'date')\n      return\n    handlePickDate(event, true)\n  }\n\n  const handleMouseDown = (event: MouseEvent) => {\n    const target = (event.target as HTMLElement).closest('td')\n    if (!target) return\n    focusWithClick = true\n  }\n\n  const handleMouseUp = (event: MouseEvent) => {\n    const target = (event.target as HTMLElement).closest('td')\n    if (!target) return\n    focusWithClick = false\n  }\n\n  const handleRangePick = (newDate: Dayjs) => {\n    if (!props.rangeState.selecting || !props.minDate) {\n      emit('pick', { minDate: newDate, maxDate: null })\n      emit('select', true)\n    } else {\n      if (newDate >= props.minDate) {\n        emit('pick', { minDate: props.minDate, maxDate: newDate })\n      } else {\n        emit('pick', { minDate: newDate, maxDate: props.minDate })\n      }\n      emit('select', false)\n    }\n  }\n\n  const handleWeekPick = (newDate: Dayjs) => {\n    const weekNumber = newDate.week()\n    const value = `${newDate.year()}w${weekNumber}`\n    emit('pick', {\n      year: newDate.year(),\n      week: weekNumber,\n      value,\n      date: newDate.startOf('week'),\n    })\n  }\n\n  const handleDatesPick = (newDate: Dayjs, selected: boolean) => {\n    const newValue = selected\n      ? castArray(props.parsedValue).filter(\n          (d) => d?.valueOf() !== newDate.valueOf()\n        )\n      : castArray(props.parsedValue).concat([newDate])\n    emit('pick', newValue)\n  }\n\n  const handlePickDate = (\n    event: FocusEvent | MouseEvent,\n    isKeyboardMovement = false\n  ) => {\n    const target = (event.target as HTMLElement).closest('td')\n\n    if (!target) return\n\n    const row = (target.parentNode as HTMLTableRowElement).rowIndex - 1\n    const column = (target as HTMLTableCellElement).cellIndex\n    const cell = unref(rows)[row][column]\n\n    if (cell.disabled || cell.type === 'week') return\n\n    const newDate = getDateOfCell(row, column)\n\n    switch (props.selectionMode) {\n      case 'range': {\n        handleRangePick(newDate)\n        break\n      }\n      case 'date': {\n        emit('pick', newDate, isKeyboardMovement)\n        break\n      }\n      case 'week': {\n        handleWeekPick(newDate)\n        break\n      }\n      case 'dates': {\n        handleDatesPick(newDate, !!cell.selected)\n        break\n      }\n      default: {\n        break\n      }\n    }\n  }\n\n  const isWeekActive = (cell: DateCell) => {\n    if (props.selectionMode !== 'week') return false\n    let newDate = props.date.startOf('day')\n\n    if (cell.type === 'prev-month') {\n      newDate = newDate.subtract(1, 'month')\n    }\n\n    if (cell.type === 'next-month') {\n      newDate = newDate.add(1, 'month')\n    }\n\n    newDate = newDate.date(Number.parseInt(cell.text as any, 10))\n\n    if (props.parsedValue && !Array.isArray(props.parsedValue)) {\n      const dayOffset = ((props.parsedValue.day() - firstDayOfWeek + 7) % 7) - 1\n      const weekDate = props.parsedValue.subtract(dayOffset, 'day')\n      return weekDate.isSame(newDate, 'day')\n    }\n    return false\n  }\n\n  return {\n    WEEKS,\n    rows,\n    tbodyRef,\n    currentCellRef,\n\n    // cellMatchesDate,\n    // getDateOfCell,\n    focus,\n    isCurrent,\n    isWeekActive,\n    isSelectedCell,\n\n    handlePickDate,\n    handleMouseUp,\n    handleMouseDown,\n    handleMouseMove,\n    handleFocus,\n  }\n}\n\nexport const useBasicDateTableDOM = (\n  props: BasicDateTableProps,\n  {\n    isCurrent,\n    isWeekActive,\n  }: Pick<ReturnType<typeof useBasicDateTable>, 'isCurrent' | 'isWeekActive'>\n) => {\n  const ns = useNamespace('date-table')\n  const { t } = useLocale()\n\n  const tableKls = computed(() => [\n    ns.b(),\n    { 'is-week-mode': props.selectionMode === 'week' },\n  ])\n\n  const tableLabel = computed(() => t('el.datepicker.dateTablePrompt'))\n  const weekLabel = computed(() => t('el.datepicker.week'))\n\n  const getCellClasses = (cell: DateCell) => {\n    const classes: string[] = []\n    if (isNormalDay(cell.type) && !cell.disabled) {\n      classes.push('available')\n      if (cell.type === 'today') {\n        classes.push('today')\n      }\n    } else {\n      classes.push(cell.type!)\n    }\n\n    if (isCurrent(cell)) {\n      classes.push('current')\n    }\n\n    if (\n      cell.inRange &&\n      (isNormalDay(cell.type) || props.selectionMode === 'week')\n    ) {\n      classes.push('in-range')\n\n      if (cell.start) {\n        classes.push('start-date')\n      }\n\n      if (cell.end) {\n        classes.push('end-date')\n      }\n    }\n\n    if (cell.disabled) {\n      classes.push('disabled')\n    }\n\n    if (cell.selected) {\n      classes.push('selected')\n    }\n\n    if (cell.customClass) {\n      classes.push(cell.customClass)\n    }\n\n    return classes.join(' ')\n  }\n\n  const getRowKls = (cell: DateCell) => [\n    ns.e('row'),\n    { current: isWeekActive(cell) },\n  ]\n\n  return {\n    tableKls,\n    tableLabel,\n    weekLabel,\n\n    getCellClasses,\n    getRowKls,\n    t,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}