{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../../hooks/index.js');\nvar token = require('./token.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nconst _sfc_main = vue.defineComponent({\n  name: \"ElOptionGroup\",\n  componentName: \"ElOptionGroup\",\n  props: {\n    label: String,\n    disabled: Boolean\n  },\n  setup(props) {\n    const ns = index.useNamespace(\"select\");\n    const visible = vue.ref(true);\n    const instance = vue.getCurrentInstance();\n    const children = vue.ref([]);\n    vue.provide(token.selectGroupKey, vue.reactive({\n      ...vue.toRefs(props)\n    }));\n    const select = vue.inject(token.selectKey);\n    vue.onMounted(() => {\n      children.value = flattedChildren(instance.subTree);\n    });\n    const flattedChildren = node => {\n      const children2 = [];\n      if (Array.isArray(node.children)) {\n        node.children.forEach(child => {\n          var _a;\n          if (child.type && child.type.name === \"ElOption\" && child.component && child.component.proxy) {\n            children2.push(child.component.proxy);\n          } else if ((_a = child.children) == null ? void 0 : _a.length) {\n            children2.push(...flattedChildren(child));\n          }\n        });\n      }\n      return children2;\n    };\n    const {\n      groupQueryChange\n    } = vue.toRaw(select);\n    vue.watch(groupQueryChange, () => {\n      visible.value = children.value.some(option => option.visible === true);\n    }, {\n      flush: \"post\"\n    });\n    return {\n      visible,\n      ns\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return vue.withDirectives((vue.openBlock(), vue.createElementBlock(\"ul\", {\n    class: vue.normalizeClass(_ctx.ns.be(\"group\", \"wrap\"))\n  }, [vue.createElementVNode(\"li\", {\n    class: vue.normalizeClass(_ctx.ns.be(\"group\", \"title\"))\n  }, vue.toDisplayString(_ctx.label), 3), vue.createElementVNode(\"li\", null, [vue.createElementVNode(\"ul\", {\n    class: vue.normalizeClass(_ctx.ns.b(\"group\"))\n  }, [vue.renderSlot(_ctx.$slots, \"default\")], 2)])], 2)), [[vue.vShow, _ctx.visible]]);\n}\nvar OptionGroup = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/select/src/option-group.vue\"]]);\nexports[\"default\"] = OptionGroup;","map":{"version":3,"names":["_sfc_main","vue","defineComponent","name","componentName","props","label","String","disabled","Boolean","setup","ns","index","useNamespace","visible","ref","instance","getCurrentInstance","children","provide","token","selectGroupKey","reactive","toRefs","select","inject","selectKey","onMounted","value","flattedChildren","subTree","node","children2","Array","isArray","forEach","child","_a","type","component","proxy","push","length","groupQueryChange","toRaw","watch","some","option","flush","$setup","$data","$options","withDirectives","openBlock","createElementBlock","class","normalizeClass","_ctx","be","createElementVNode","toDisplayString","b","renderSlot","$slots","vShow"],"sources":["../../../../../../packages/components/select/src/option-group.vue"],"sourcesContent":["<template>\n  <ul v-show=\"visible\" :class=\"ns.be('group', 'wrap')\">\n    <li :class=\"ns.be('group', 'title')\">{{ label }}</li>\n    <li>\n      <ul :class=\"ns.b('group')\">\n        <slot />\n      </ul>\n    </li>\n  </ul>\n</template>\n\n<script lang=\"ts\">\n// @ts-nocheck\nimport {\n  defineComponent,\n  getCurrentInstance,\n  inject,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  toRaw,\n  toRefs,\n  watch,\n} from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { selectGroupKey, selectKey } from './token'\n\nexport default defineComponent({\n  name: 'ElOptionGroup',\n  componentName: 'ElOptionGroup',\n\n  props: {\n    /**\n     * @description name of the group\n     */\n    label: String,\n    /**\n     * @description whether to disable all options in this group\n     */\n    disabled: Boolean,\n  },\n  setup(props) {\n    const ns = useNamespace('select')\n    const visible = ref(true)\n    const instance = getCurrentInstance()\n    const children = ref([])\n\n    provide(\n      selectGroupKey,\n      reactive({\n        ...toRefs(props),\n      })\n    )\n\n    const select = inject(selectKey)\n\n    onMounted(() => {\n      children.value = flattedChildren(instance.subTree)\n    })\n\n    // get all instances of options\n    const flattedChildren = (node) => {\n      const children = []\n      if (Array.isArray(node.children)) {\n        node.children.forEach((child) => {\n          if (\n            child.type &&\n            child.type.name === 'ElOption' &&\n            child.component &&\n            child.component.proxy\n          ) {\n            children.push(child.component.proxy)\n          } else if (child.children?.length) {\n            children.push(...flattedChildren(child))\n          }\n        })\n      }\n      return children\n    }\n\n    const { groupQueryChange } = toRaw(select)\n    watch(\n      groupQueryChange,\n      () => {\n        visible.value = children.value.some((option) => option.visible === true)\n      },\n      { flush: 'post' }\n    )\n\n    return {\n      visible,\n      ns,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;;;;;;AA4BA,MAAKA,SAAA,GAAaC,GAAA,CAAAC,eAAa;EAC7BC,IAAM;EACNC,aAAe;EAEfC,KAAO;IAILC,KAAO,EAAAC,MAAA;IAIPC,QAAU,EAAAC;EAAA,CACZ;EACAC,MAAML,KAAO;IACL,MAAAM,EAAA,GAAKC,KAAA,CAAAC,YAAA,CAAa,QAAQ;IAC1B,MAAAC,OAAA,GAAUb,GAAA,CAAAc,GAAA,CAAI,IAAI;IACxB,MAAMC,QAAA,GAAWf,GAAA,CAAAgB,kBAAmB;IAC9B,MAAAC,QAAA,GAAWjB,GAAA,CAAAc,GAAI,GAAE;IAEvBd,GAAA,CAAAkB,OAAA,CACEC,KAAA,CAAAC,cAAA,EACApB,GAAA,CAAAqB,QAAS;MACP,GAAGrB,GAAA,CAAAsB,MAAA,CAAOlB,KAAK;IAAA,CAChB,CACH;IAEM,MAAAmB,MAAA,GAASvB,GAAA,CAAAwB,MAAA,CAAOL,KAAA,CAAAM,SAAS;IAE/BzB,GAAA,CAAA0B,SAAA,CAAU,MAAM;MACLT,QAAA,CAAAU,KAAA,GAAQC,eAAgB,CAAAb,QAAA,CAASc,OAAO;IAAA,CAClD;IAGK,MAAAD,eAAA,GAAmBE,IAAS;MAChC,MAAMC,SAAA,GAAW,EAAC;MAClB,IAAIC,KAAM,CAAAC,OAAA,CAAQH,IAAK,CAAAb,QAAQ,CAAG;QAC3Ba,IAAA,CAAAb,QAAA,CAASiB,OAAQ,CAACC,KAAU;UAE7B,IAAAC,EAAA;UAKS,IAAAD,KAAA,CAAAE,IAAA,IAAWF,KAAA,CAAAE,IAAA,CAAAnC,IAAU,KAAK,cAAAiC,KAAA,CAAAG,SAAA,IAAAH,KAAA,CAAAG,SAAA,CAAAC,KAAA;YACrCR,SAAW,CAAMS,IAAA,CAAAL,KAAA,CAAAG,SAAkB,CAAAC,KAAA;UACjC,YAASH,EAAK,GAAAD,KAAmB,CAAAlB,QAAA,YAAM,SAAAmB,EAAA,CAAAK,MAAA;YACzCV,SAAA,CAAAS,IAAA,IAAAZ,eAAA,CAAAO,KAAA;UAAA;QACD,CACH;MACA;MACF,OAAAJ,SAAA;IAEA,CAAM;IACN,MACE;MAAAW;IACA,CAAM,GAAA1C,GAAA,CAAA2C,KAAA,CAAApB,MAAA;IACIvB,GAAA,CAAA4C,KAAA,CAAAF,gBAAA,QAAuB;MAEjC7B,OAAS,CAAAc,KAAA,GAAAV,QACX,CAAAU,KAAA,CAAAkB,IAAA,CAAAC,MAAA,IAAAA,MAAA,CAAAjC,OAAA;IAEA,CAAO;MAAAkC,KAAA;IAAA;IACL;MACAlC,OAAA;MACFH;IAAA,CACF;EACF;;yCAvFO,EAAAsC,MAAA,EAAAC,KAAA,EAAAC,QAAA;EAPiB,OAAAlD,GAAA,CAAAmD,cAAO,EAAAnD,GAAA,CAAAoD,SAAK,IAAApD,GAAA,CAAAqD,kBAAA;IAAAC,KAAA,EAAAtD,GAAA,CAAAuD,cAAA,CAAAC,IAAA,CAAA9C,EAAA,CAAA+C,EAAA;KACqB,CAAhDzD,GAAA,CAAA0D,kBAAO;IAAKJ,KAAA,EAAAtD,GAAA,CAAAuD,cAA4B,CAAAC,IAAA,CAAA9C,EAAA,CAAA+C,EAAA;EAAA,CAKxC,EAAAzD,GAAA,CAAA2D,eAAA,CAAAH,IAAA,CAAAnD,KAAA,OAAAL,GAAA,CAAA0D,kBADE,cAFA1D,GAAA,CAAA0D,kBAAO;IAAIJ,KAAA,EAAAtD,GAAA,CAAAuD,cAAA,CAAAC,IAAA,CAAA9C,EAAA,CAAAkD,CAAA;KACN,CAAA5D,GAAA,CAAA6D,UAAA,CAAAL,IAAA,CAAAM,MAAA,a,eAJK,CAAA9D,GAAA,CAAA+D,KAAA,EAAAP,IAAA,CAAA3C,OAAA,E"},"metadata":{},"sourceType":"script","externalDependencies":[]}