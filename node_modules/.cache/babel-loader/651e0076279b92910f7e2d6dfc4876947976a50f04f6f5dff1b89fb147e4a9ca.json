{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar core = require('@popperjs/core');\nrequire('../../../utils/index.js');\nrequire('../../../constants/index.js');\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar event = require('../../../constants/event.js');\nvar types = require('../../../utils/types.js');\nconst sliderButtonProps = runtime.buildProps({\n  modelValue: {\n    type: Number,\n    default: 0\n  },\n  vertical: Boolean,\n  tooltipClass: String,\n  placement: {\n    type: String,\n    values: core.placements,\n    default: \"top\"\n  }\n});\nconst sliderButtonEmits = {\n  [event.UPDATE_MODEL_EVENT]: value => types.isNumber(value)\n};\nexports.sliderButtonEmits = sliderButtonEmits;\nexports.sliderButtonProps = sliderButtonProps;","map":{"version":3,"names":["sliderButtonProps","runtime","buildProps","modelValue","type","Number","default","vertical","Boolean","tooltipClass","String","placement","values","core","placements","sliderButtonEmits","event","UPDATE_MODEL_EVENT","value","types","isNumber"],"sources":["../../../../../../packages/components/slider/src/button.ts"],"sourcesContent":["import { placements } from '@popperjs/core'\nimport { buildProps, isNumber } from '@element-plus/utils'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport type { ExtractPropTypes, Ref } from 'vue'\nimport type Button from './button.vue'\n\nexport const sliderButtonProps = buildProps({\n  modelValue: {\n    type: Number,\n    default: 0,\n  },\n  vertical: Boolean,\n  tooltipClass: String,\n  placement: {\n    type: String,\n    values: placements,\n    default: 'top',\n  },\n} as const)\nexport type SliderButtonProps = ExtractPropTypes<typeof sliderButtonProps>\n\nexport const sliderButtonEmits = {\n  [UPDATE_MODEL_EVENT]: (value: number) => isNumber(value),\n}\nexport type SliderButtonEmits = typeof sliderButtonEmits\n\nexport type SliderButtonInstance = InstanceType<typeof Button>\n\nexport type ButtonRefs = Record<\n  'firstButton' | 'secondButton',\n  Ref<SliderButtonInstance | undefined>\n>\n\nexport interface SliderButtonInitData {\n  hovering: boolean\n  dragging: boolean\n  isClick: boolean\n  startX: number\n  currentX: number\n  startY: number\n  currentY: number\n  startPosition: number\n  newPosition: number\n  oldValue: number\n}\n"],"mappings":";;;;;;;;;;;AAGY,MAACA,iBAAiB,GAAGC,OAAA,CAAAC,UAAU,CAAC;EAC1CC,UAAU,EAAE;IACVC,IAAI,EAAEC,MAAM;IACZC,OAAO,EAAE;EACb,CAAG;EACDC,QAAQ,EAAEC,OAAO;EACjBC,YAAY,EAAEC,MAAM;EACpBC,SAAS,EAAE;IACTP,IAAI,EAAEM,MAAM;IACZE,MAAM,EAAEC,IAAA,CAAAC,UAAU;IAClBR,OAAO,EAAE;EACb;AACA,CAAC;AACW,MAACS,iBAAiB,GAAG;EAC/B,CAACC,KAAA,CAAAC,kBAAkB,GAAIC,KAAK,IAAKC,KAAA,CAAAC,QAAQ,CAACF,KAAK;AACjD"},"metadata":{},"sourceType":"script","externalDependencies":[]}