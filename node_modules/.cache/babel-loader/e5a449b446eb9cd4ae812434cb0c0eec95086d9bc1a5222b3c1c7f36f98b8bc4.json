{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar core = require('@vueuse/core');\nrequire('../../../utils/index.js');\nrequire('../../../constants/index.js');\nvar index = require('../../icon/index.js');\nrequire('../../config-provider/index.js');\nvar notification = require('./notification.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar useGlobalConfig = require('../../config-provider/src/hooks/use-global-config.js');\nvar icon = require('../../../utils/vue/icon.js');\nvar aria = require('../../../constants/aria.js');\nconst _hoisted_1 = [\"id\"];\nconst _hoisted_2 = [\"textContent\"];\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = [\"innerHTML\"];\nconst __default__ = vue.defineComponent({\n  name: \"ElNotification\"\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: notification.notificationProps,\n  emits: notification.notificationEmits,\n  setup(__props, {\n    expose\n  }) {\n    const props = __props;\n    const {\n      ns,\n      zIndex\n    } = useGlobalConfig.useGlobalComponentSettings(\"notification\");\n    const {\n      nextZIndex,\n      currentZIndex\n    } = zIndex;\n    const {\n      Close\n    } = icon.CloseComponents;\n    const visible = vue.ref(false);\n    let timer = void 0;\n    const typeClass = vue.computed(() => {\n      const type = props.type;\n      return type && icon.TypeComponentsMap[props.type] ? ns.m(type) : \"\";\n    });\n    const iconComponent = vue.computed(() => {\n      if (!props.type) return props.icon;\n      return icon.TypeComponentsMap[props.type] || props.icon;\n    });\n    const horizontalClass = vue.computed(() => props.position.endsWith(\"right\") ? \"right\" : \"left\");\n    const verticalProperty = vue.computed(() => props.position.startsWith(\"top\") ? \"top\" : \"bottom\");\n    const positionStyle = vue.computed(() => {\n      var _a;\n      return {\n        [verticalProperty.value]: `${props.offset}px`,\n        zIndex: (_a = props.zIndex) != null ? _a : currentZIndex.value\n      };\n    });\n    function startTimer() {\n      if (props.duration > 0) {\n        ;\n        ({\n          stop: timer\n        } = core.useTimeoutFn(() => {\n          if (visible.value) close();\n        }, props.duration));\n      }\n    }\n    function clearTimer() {\n      timer == null ? void 0 : timer();\n    }\n    function close() {\n      visible.value = false;\n    }\n    function onKeydown({\n      code\n    }) {\n      if (code === aria.EVENT_CODE.delete || code === aria.EVENT_CODE.backspace) {\n        clearTimer();\n      } else if (code === aria.EVENT_CODE.esc) {\n        if (visible.value) {\n          close();\n        }\n      } else {\n        startTimer();\n      }\n    }\n    vue.onMounted(() => {\n      startTimer();\n      nextZIndex();\n      visible.value = true;\n    });\n    core.useEventListener(document, \"keydown\", onKeydown);\n    expose({\n      visible,\n      close\n    });\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createBlock(vue.Transition, {\n        name: vue.unref(ns).b(\"fade\"),\n        onBeforeLeave: _ctx.onClose,\n        onAfterLeave: _cache[1] || (_cache[1] = $event => _ctx.$emit(\"destroy\")),\n        persisted: \"\"\n      }, {\n        default: vue.withCtx(() => [vue.withDirectives(vue.createElementVNode(\"div\", {\n          id: _ctx.id,\n          class: vue.normalizeClass([vue.unref(ns).b(), _ctx.customClass, vue.unref(horizontalClass)]),\n          style: vue.normalizeStyle(vue.unref(positionStyle)),\n          role: \"alert\",\n          onMouseenter: clearTimer,\n          onMouseleave: startTimer,\n          onClick: _cache[0] || (_cache[0] = (...args) => _ctx.onClick && _ctx.onClick(...args))\n        }, [vue.unref(iconComponent) ? (vue.openBlock(), vue.createBlock(vue.unref(index.ElIcon), {\n          key: 0,\n          class: vue.normalizeClass([vue.unref(ns).e(\"icon\"), vue.unref(typeClass)])\n        }, {\n          default: vue.withCtx(() => [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(vue.unref(iconComponent))))]),\n          _: 1\n        }, 8, [\"class\"])) : vue.createCommentVNode(\"v-if\", true), vue.createElementVNode(\"div\", {\n          class: vue.normalizeClass(vue.unref(ns).e(\"group\"))\n        }, [vue.createElementVNode(\"h2\", {\n          class: vue.normalizeClass(vue.unref(ns).e(\"title\")),\n          textContent: vue.toDisplayString(_ctx.title)\n        }, null, 10, _hoisted_2), vue.withDirectives(vue.createElementVNode(\"div\", {\n          class: vue.normalizeClass(vue.unref(ns).e(\"content\")),\n          style: vue.normalizeStyle(!!_ctx.title ? void 0 : {\n            margin: 0\n          })\n        }, [vue.renderSlot(_ctx.$slots, \"default\", {}, () => [!_ctx.dangerouslyUseHTMLString ? (vue.openBlock(), vue.createElementBlock(\"p\", _hoisted_3, vue.toDisplayString(_ctx.message), 1)) : (vue.openBlock(), vue.createElementBlock(vue.Fragment, {\n          key: 1\n        }, [vue.createCommentVNode(\" Caution here, message could've been compromised, never use user's input as message \"), vue.createElementVNode(\"p\", {\n          innerHTML: _ctx.message\n        }, null, 8, _hoisted_4)], 2112))])], 6), [[vue.vShow, _ctx.message]]), _ctx.showClose ? (vue.openBlock(), vue.createBlock(vue.unref(index.ElIcon), {\n          key: 0,\n          class: vue.normalizeClass(vue.unref(ns).e(\"closeBtn\")),\n          onClick: vue.withModifiers(close, [\"stop\"])\n        }, {\n          default: vue.withCtx(() => [vue.createVNode(vue.unref(Close))]),\n          _: 1\n        }, 8, [\"class\", \"onClick\"])) : vue.createCommentVNode(\"v-if\", true)], 2)], 46, _hoisted_1), [[vue.vShow, visible.value]])]),\n        _: 3\n      }, 8, [\"name\", \"onBeforeLeave\"]);\n    };\n  }\n});\nvar NotificationConstructor = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/notification/src/notification.vue\"]]);\nexports[\"default\"] = NotificationConstructor;","map":{"version":3,"names":["name","ns","zIndex","useGlobalConfig","useGlobalComponentSettings","nextZIndex","currentZIndex","Close","icon","CloseComponents","visible","vue","ref","timer","typeClass","computed","type","props","TypeComponentsMap","m","iconComponent","horizontalClass","position","endsWith","verticalProperty","startsWith","positionStyle","_a","value","offset","startTimer","duration","stop","core","useTimeoutFn","close","clearTimer","onKeydown","code","aria","EVENT_CODE","delete","backspace","esc","onMounted","useEventListener","document","expose"],"sources":["../../../../../../packages/components/notification/src/notification.vue"],"sourcesContent":["<template>\n  <transition\n    :name=\"ns.b('fade')\"\n    @before-leave=\"onClose\"\n    @after-leave=\"$emit('destroy')\"\n  >\n    <div\n      v-show=\"visible\"\n      :id=\"id\"\n      :class=\"[ns.b(), customClass, horizontalClass]\"\n      :style=\"positionStyle\"\n      role=\"alert\"\n      @mouseenter=\"clearTimer\"\n      @mouseleave=\"startTimer\"\n      @click=\"onClick\"\n    >\n      <el-icon v-if=\"iconComponent\" :class=\"[ns.e('icon'), typeClass]\">\n        <component :is=\"iconComponent\" />\n      </el-icon>\n      <div :class=\"ns.e('group')\">\n        <h2 :class=\"ns.e('title')\" v-text=\"title\" />\n        <div\n          v-show=\"message\"\n          :class=\"ns.e('content')\"\n          :style=\"!!title ? undefined : { margin: 0 }\"\n        >\n          <slot>\n            <p v-if=\"!dangerouslyUseHTMLString\">{{ message }}</p>\n            <!-- Caution here, message could've been compromised, never use user's input as message -->\n            <p v-else v-html=\"message\" />\n          </slot>\n        </div>\n        <el-icon v-if=\"showClose\" :class=\"ns.e('closeBtn')\" @click.stop=\"close\">\n          <Close />\n        </el-icon>\n      </div>\n    </div>\n  </transition>\n</template>\n<script lang=\"ts\" setup>\nimport { computed, onMounted, ref } from 'vue'\nimport { useEventListener, useTimeoutFn } from '@vueuse/core'\nimport { CloseComponents, TypeComponentsMap } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { useGlobalComponentSettings } from '@element-plus/components/config-provider'\nimport { notificationEmits, notificationProps } from './notification'\n\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElNotification',\n})\n\nconst props = defineProps(notificationProps)\ndefineEmits(notificationEmits)\n\nconst { ns, zIndex } = useGlobalComponentSettings('notification')\nconst { nextZIndex, currentZIndex } = zIndex\n\nconst { Close } = CloseComponents\n\nconst visible = ref(false)\nlet timer: (() => void) | undefined = undefined\n\nconst typeClass = computed(() => {\n  const type = props.type\n  return type && TypeComponentsMap[props.type] ? ns.m(type) : ''\n})\n\nconst iconComponent = computed(() => {\n  if (!props.type) return props.icon\n  return TypeComponentsMap[props.type] || props.icon\n})\n\nconst horizontalClass = computed(() =>\n  props.position.endsWith('right') ? 'right' : 'left'\n)\n\nconst verticalProperty = computed(() =>\n  props.position.startsWith('top') ? 'top' : 'bottom'\n)\n\nconst positionStyle = computed<CSSProperties>(() => {\n  return {\n    [verticalProperty.value]: `${props.offset}px`,\n    zIndex: props.zIndex ?? currentZIndex.value,\n  }\n})\n\nfunction startTimer() {\n  if (props.duration > 0) {\n    ;({ stop: timer } = useTimeoutFn(() => {\n      if (visible.value) close()\n    }, props.duration))\n  }\n}\n\nfunction clearTimer() {\n  timer?.()\n}\n\nfunction close() {\n  visible.value = false\n}\n\nfunction onKeydown({ code }: KeyboardEvent) {\n  if (code === EVENT_CODE.delete || code === EVENT_CODE.backspace) {\n    clearTimer() // press delete/backspace clear timer\n  } else if (code === EVENT_CODE.esc) {\n    // press esc to close the notification\n    if (visible.value) {\n      close()\n    }\n  } else {\n    startTimer() // resume timer\n  }\n}\n\n// lifecycle\nonMounted(() => {\n  startTimer()\n  nextZIndex()\n  visible.value = true\n})\n\nuseEventListener(document, 'keydown', onKeydown)\n\ndefineExpose({\n  visible,\n  /** @description close notification */\n  close,\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;uCAkDc;EACZA,IAAM;AACR;;;;;;;;;IAKA,MAAM;MAAEC,EAAA;MAAIC;IAAW,IAAAC,eAAA,CAAAC,0BAAA,CAA2B,cAAc;IAC1D;MAAEC,UAAA;MAAYC;IAAkB,IAAAJ,MAAA;IAEtC,MAAM;MAAEK;IAAU,IAAAC,IAAA,CAAAC,eAAA;IAEZ,MAAAC,OAAA,GAAUC,GAAA,CAAAC,GAAA,CAAI,KAAK;IACzB,IAAIC,KAAkC;IAEhC,MAAAC,SAAA,GAAYH,GAAA,CAAAI,QAAA,CAAS,MAAM;MAC/B,MAAMC,IAAA,GAAOC,KAAM,CAAAD,IAAA;MACnB,OAAOA,IAAA,IAAQR,IAAA,CAAAU,iBAAkB,CAAAD,KAAA,CAAMD,IAAA,IAAQf,EAAG,CAAAkB,CAAA,CAAEH,IAAI,CAAI;IAAA,CAC7D;IAEK,MAAAI,aAAA,GAAgBT,GAAA,CAAAI,QAAA,CAAS,MAAM;MACnC,IAAI,CAACE,KAAM,CAAAD,IAAA,EAAM,OAAOC,KAAM,CAAAT,IAAA;MACvB,OAAAA,IAAA,CAAAU,iBAAA,CAAkBD,KAAM,CAAAD,IAAA,KAASC,KAAM,CAAAT,IAAA;IAAA,CAC/C;IAEK,MAAAa,eAAA,GAAkBV,GAAA,CAAAI,QAAA,CAAS,MAC/BE,KAAA,CAAMK,QAAA,CAASC,QAAS,QAAO,CAAI,aAAU,MAC/C;IAEM,MAAAC,gBAAA,GAAmBb,GAAA,CAAAI,QAAA,CAAS,MAChCE,KAAA,CAAMK,QAAA,CAASG,UAAW,MAAK,CAAI,WAAQ,QAC7C;IAEM,MAAAC,aAAA,GAAgBf,GAAA,CAAAI,QAAA,CAAwB,MAAM;MAC3C,IAAAY,EAAA;MAAA,OACJ;QACD,CAAAH,gBAAc,CAAAI,KAAA,GAAwB,GAAAX,KAAA,CAAAY,MAAA;QACxC3B,MAAA,GAAAyB,EAAA,GAAAV,KAAA,CAAAf,MAAA,YAAAyB,EAAA,GAAArB,aAAA,CAAAsB;MAAA,CACD;IAED,CAAsB;IAChB,SAAAE,WAAA;MACF,IAAAb,KAAA,CAAAc,QAAA;QAAE;QACA;UAAAC,IAAY,EAAAnB;QAAA,IAAAoB,IAAA,CAAAC,YAAA;UAAa,IAAAxB,OAAA,CAAAkB,KAAA,EAAAO,KAClB,EAAQ;QAAA,CACnB,EAAAlB,KAAA,CAAAc,QAAA;MAAA;IAGF;IACU,SAAAK,WAAA;MACVvB,KAAA,oBAAAA,KAAA;IAEA;IACE,SAAAsB,KAAgBA,CAAA;MAClBzB,OAAA,CAAAkB,KAAA;IAEA;IACE,SAAaS,UAAA;MAAAC;IAAA,CAAqB;MACrB,IAAAA,IAAA,KAAAC,IAAA,CAAAC,UAAA,CAAAC,MAAA,IAAAH,IAAA,KAAAC,IAAA,CAAAC,UAAA,CAAAE,SAAA;QACbN,UAAoB;MAElB,WAAAE,IAAmB,KAAAC,IAAA,CAAAC,UAAA,CAAAG,GAAA;QACX,IAAAjC,OAAA,CAAAkB,KAAA;UACRO,KAAA;QAAA;MAEA,CAAW;QACbL,UAAA;MAAA;IAIF;IACanB,GAAA,CAAAiC,SAAA;MACAd,UAAA;MACXzB,UAAgB;MACjBK,OAAA,CAAAkB,KAAA;IAED,CAAiB;IAEJK,IAAA,CAAAY,gBAAA,CAAAC,QAAA,aAAAT,SAAA;IACXU,MAAA;MAEArC,OAAA;MACDyB"},"metadata":{},"sourceType":"script","externalDependencies":[]}