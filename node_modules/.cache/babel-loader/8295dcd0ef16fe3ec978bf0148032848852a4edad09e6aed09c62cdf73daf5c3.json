{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar constants = require('./constants.js');\nvar arrow = require('./arrow.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nconst __default__ = vue.defineComponent({\n  name: \"ElTooltipV2Arrow\"\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: {\n    ...arrow.tooltipV2ArrowProps,\n    ...arrow.tooltipV2ArrowSpecialProps\n  },\n  setup(__props) {\n    const props = __props;\n    const {\n      ns\n    } = vue.inject(constants.tooltipV2RootKey);\n    const {\n      arrowRef\n    } = vue.inject(constants.tooltipV2ContentKey);\n    const arrowStyle = vue.computed(() => {\n      const {\n        style,\n        width,\n        height\n      } = props;\n      const namespace = ns.namespace.value;\n      return {\n        [`--${namespace}-tooltip-v2-arrow-width`]: `${width}px`,\n        [`--${namespace}-tooltip-v2-arrow-height`]: `${height}px`,\n        [`--${namespace}-tooltip-v2-arrow-border-width`]: `${width / 2}px`,\n        [`--${namespace}-tooltip-v2-arrow-cover-width`]: width / 2 - 1,\n        ...(style || {})\n      };\n    });\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createElementBlock(\"span\", {\n        ref_key: \"arrowRef\",\n        ref: arrowRef,\n        style: vue.normalizeStyle(vue.unref(arrowStyle)),\n        class: vue.normalizeClass(vue.unref(ns).e(\"arrow\"))\n      }, null, 6);\n    };\n  }\n});\nvar TooltipV2Arrow = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tooltip-v2/src/arrow.vue\"]]);\nexports[\"default\"] = TooltipV2Arrow;","map":{"version":3,"names":["name","ns","vue","inject","constants","tooltipV2RootKey","arrowRef","tooltipV2ContentKey","arrowStyle","computed","style","width","height","props","namespace","value"],"sources":["../../../../../../packages/components/tooltip-v2/src/arrow.vue"],"sourcesContent":["<template>\n  <span ref=\"arrowRef\" :style=\"arrowStyle\" :class=\"ns.e('arrow')\" />\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, inject } from 'vue'\nimport { tooltipV2ContentKey, tooltipV2RootKey } from './constants'\nimport { tooltipV2ArrowProps, tooltipV2ArrowSpecialProps } from './arrow'\n\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElTooltipV2Arrow',\n})\n\nconst props = defineProps({\n  ...tooltipV2ArrowProps,\n  ...tooltipV2ArrowSpecialProps,\n})\n\nconst { ns } = inject(tooltipV2RootKey)!\nconst { arrowRef } = inject(tooltipV2ContentKey)!\n\nconst arrowStyle = computed<CSSProperties>(() => {\n  const { style, width, height } = props\n  const namespace = ns.namespace.value\n\n  return {\n    [`--${namespace}-tooltip-v2-arrow-width`]: `${width}px`,\n    [`--${namespace}-tooltip-v2-arrow-height`]: `${height}px`,\n    [`--${namespace}-tooltip-v2-arrow-border-width`]: `${width / 2}px`,\n    [`--${namespace}-tooltip-v2-arrow-cover-width`]: width / 2 - 1,\n    ...(style || {}),\n  }\n})\n</script>\n"],"mappings":";;;;;;;;;uCAWc;EACZA,IAAM;AACR;;;;;;;;;IAOM;MAAEC;IAAO,IAAAC,GAAA,CAAAC,MAAA,CAAOC,SAAA,CAAAC,gBAAgB;IAChC;MAAEC;IAAa,IAAAJ,GAAA,CAAAC,MAAA,CAAOC,SAAA,CAAAG,mBAAmB;IAEzC,MAAAC,UAAA,GAAaN,GAAA,CAAAO,QAAA,CAAwB,MAAM;MACzC;QAAEC,KAAO;QAAAC,KAAA;QAAOC;MAAW,IAAAC,KAAA;MAC3B,MAAAC,SAAA,GAAYb,EAAA,CAAGa,SAAU,CAAAC,KAAA;MAExB;QACL,CAAM,KAAAD,SAAA,4BAAwC,GAAAH,KAAA;QAC9C,CAAM,KAAAG,SAAA,6BAAyC,GAAAF,MAAA;QAC/C,CAAC,KAAKE,SAA4C,sCAAGH,KAAQ;QAC7D,CAAC,KAAKG,SAA2C,kCAAAH,KAAA,GAAQ,CAAI;QAC7D,IAAID,KAAA,IAAS,EAAC;MAAA,CAChB;IAAA,CACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}