{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nrequire('../../../../utils/index.js');\nrequire('../../../../hooks/index.js');\nvar iconsVue = require('@element-plus/icons-vue');\nvar shared = require('../props/shared.js');\nvar runtime = require('../../../../utils/vue/props/runtime.js');\nvar index = require('../../../../hooks/use-size/index.js');\nconst timePickerDefaultProps = runtime.buildProps({\n  id: {\n    type: runtime.definePropType([Array, String])\n  },\n  name: {\n    type: runtime.definePropType([Array, String]),\n    default: \"\"\n  },\n  popperClass: {\n    type: String,\n    default: \"\"\n  },\n  format: String,\n  valueFormat: String,\n  dateFormat: String,\n  timeFormat: String,\n  type: {\n    type: String,\n    default: \"\"\n  },\n  clearable: {\n    type: Boolean,\n    default: true\n  },\n  clearIcon: {\n    type: runtime.definePropType([String, Object]),\n    default: iconsVue.CircleClose\n  },\n  editable: {\n    type: Boolean,\n    default: true\n  },\n  prefixIcon: {\n    type: runtime.definePropType([String, Object]),\n    default: \"\"\n  },\n  size: index.useSizeProp,\n  readonly: Boolean,\n  disabled: Boolean,\n  placeholder: {\n    type: String,\n    default: \"\"\n  },\n  popperOptions: {\n    type: runtime.definePropType(Object),\n    default: () => ({})\n  },\n  modelValue: {\n    type: runtime.definePropType([Date, Array, String, Number]),\n    default: \"\"\n  },\n  rangeSeparator: {\n    type: String,\n    default: \"-\"\n  },\n  startPlaceholder: String,\n  endPlaceholder: String,\n  defaultValue: {\n    type: runtime.definePropType([Date, Array])\n  },\n  defaultTime: {\n    type: runtime.definePropType([Date, Array])\n  },\n  isRange: Boolean,\n  ...shared.disabledTimeListsProps,\n  disabledDate: {\n    type: Function\n  },\n  cellClassName: {\n    type: Function\n  },\n  shortcuts: {\n    type: Array,\n    default: () => []\n  },\n  arrowControl: Boolean,\n  label: {\n    type: String,\n    default: void 0\n  },\n  tabindex: {\n    type: runtime.definePropType([String, Number]),\n    default: 0\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true\n  },\n  unlinkPanels: Boolean\n});\nexports.timePickerDefaultProps = timePickerDefaultProps;","map":{"version":3,"names":["timePickerDefaultProps","runtime","buildProps","id","type","definePropType","Array","String","name","default","popperClass","format","valueFormat","dateFormat","timeFormat","clearable","Boolean","clearIcon","Object","iconsVue","CircleClose","editable","prefixIcon","size","index","useSizeProp","readonly","disabled","placeholder","popperOptions","modelValue","Date","Number","rangeSeparator","startPlaceholder","endPlaceholder","defaultValue","defaultTime","isRange","shared","disabledTimeListsProps","disabledDate","Function","cellClassName","shortcuts","arrowControl","label","tabindex","validateEvent","unlinkPanels"],"sources":["../../../../../../../packages/components/time-picker/src/common/props.ts"],"sourcesContent":["import { buildProps, definePropType } from '@element-plus/utils'\nimport { useSizeProp } from '@element-plus/hooks'\nimport { CircleClose } from '@element-plus/icons-vue'\nimport { disabledTimeListsProps } from '../props/shared'\n\nimport type { Component, ExtractPropTypes } from 'vue'\nimport type { Options } from '@popperjs/core'\nimport type { Dayjs } from 'dayjs'\n\nexport type SingleOrRange<T> = T | [T, T]\nexport type DateModelType = number | string | Date\nexport type ModelValueType = SingleOrRange<DateModelType>\nexport type DayOrDays = SingleOrRange<Dayjs>\nexport type DateOrDates = SingleOrRange<Date>\nexport type UserInput = SingleOrRange<string | null>\nexport type GetDisabledHours = (role: string, comparingDate?: Dayjs) => number[]\nexport type GetDisabledMinutes = (\n  hour: number,\n  role: string,\n  comparingDate?: Dayjs\n) => number[]\nexport type GetDisabledSeconds = (\n  hour: number,\n  minute: number,\n  role: string,\n  comparingDate?: Dayjs\n) => number[]\n\nexport const timePickerDefaultProps = buildProps({\n  /**\n   * @description same as `id` in native input\n   */\n  id: {\n    type: definePropType<SingleOrRange<string>>([Array, String]),\n  },\n  /**\n   * @description same as `name` in native input\n   */\n  name: {\n    type: definePropType<SingleOrRange<string>>([Array, String]),\n    default: '',\n  },\n  /**\n   * @description custom class name for TimePicker's dropdown\n   */\n  popperClass: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description format of the displayed value in the input box\n   */\n  format: String,\n  /**\n   * @description optional, format of binding value. If not specified, the binding value will be a Date object\n   */\n  valueFormat: String,\n  /**\n   * @description optional, format of the date displayed value in TimePicker's dropdown\n   */\n  dateFormat: String,\n  /**\n   * @description optional, format of the time displayed value in TimePicker's dropdown\n   */\n  timeFormat: String,\n  /**\n   * @description type of the picker\n   */\n  type: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description whether to show clear button\n   */\n  clearable: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description Custom clear icon component\n   */\n  clearIcon: {\n    type: definePropType<string | Component>([String, Object]),\n    default: CircleClose,\n  },\n  /**\n   * @description whether the input is editable\n   */\n  editable: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description Custom prefix icon component\n   */\n  prefixIcon: {\n    type: definePropType<string | Component>([String, Object]),\n    default: '',\n  },\n  /**\n   * @description size of Input\n   */\n  size: useSizeProp,\n  /**\n   * @description whether TimePicker is read only\n   */\n  readonly: Boolean,\n  /**\n   * @description whether TimePicker is disabled\n   */\n  disabled: Boolean,\n  /**\n   * @description placeholder in non-range mode\n   */\n  placeholder: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description [popper.js](https://popper.js.org/docs/v2/) parameters\n   */\n  popperOptions: {\n    type: definePropType<Partial<Options>>(Object),\n    default: () => ({}),\n  },\n  /**\n   * @description binding value, if it is an array, the length should be 2\n   */\n  modelValue: {\n    type: definePropType<ModelValueType>([Date, Array, String, Number]),\n    default: '',\n  },\n  /**\n   * @description range separator\n   */\n  rangeSeparator: {\n    type: String,\n    default: '-',\n  },\n  /**\n   * @description placeholder for the start date in range mode\n   */\n  startPlaceholder: String,\n  /**\n   * @description placeholder for the end date in range mode\n   */\n  endPlaceholder: String,\n  /**\n   * @description optional, default date of the calendar\n   */\n  defaultValue: {\n    type: definePropType<SingleOrRange<Date>>([Date, Array]),\n  },\n  /**\n   * @description optional, the time value to use when selecting date range\n   */\n  defaultTime: {\n    type: definePropType<SingleOrRange<Date>>([Date, Array]),\n  },\n  /**\n   * @description whether to pick a time range\n   */\n  isRange: Boolean,\n  ...disabledTimeListsProps,\n  /**\n   * @description a function determining if a date is disabled with that date as its parameter. Should return a Boolean\n   */\n  disabledDate: {\n    type: Function,\n  },\n  /**\n   * @description set custom className\n   */\n  cellClassName: {\n    type: Function,\n  },\n  /**\n   * @description an object array to set shortcut options\n   */\n  shortcuts: {\n    type: Array,\n    default: () => [],\n  },\n  /**\n   * @description whether to pick time using arrow buttons\n   */\n  arrowControl: Boolean,\n  /**\n   * @description same as `aria-label` in native input\n   */\n  label: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description input tabindex\n   */\n  tabindex: {\n    type: definePropType<string | number>([String, Number]),\n    default: 0,\n  },\n  /**\n   * @description whether to trigger form validation\n   */\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description unlink two date-panels in range-picker\n   */\n  unlinkPanels: Boolean,\n} as const)\n\nexport type TimePickerDefaultProps = ExtractPropTypes<\n  typeof timePickerDefaultProps\n>\n\nexport interface PickerOptions {\n  isValidValue: (date: DayOrDays) => boolean\n  handleKeydownInput: (event: KeyboardEvent) => void\n  parseUserInput: (value: UserInput) => DayOrDays\n  formatToString: (value: DayOrDays) => UserInput\n  getRangeAvailableTime: (date: DayOrDays) => DayOrDays\n  getDefaultValue: () => DayOrDays\n  panelReady: boolean\n  handleClear: () => void\n  handleFocusPicker?: () => void\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}