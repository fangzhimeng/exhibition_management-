{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar index$1 = require('../../icon/index.js');\nrequire('../../../hooks/index.js');\nvar timelineItem = require('./timeline-item.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nconst __default__ = vue.defineComponent({\n  name: \"ElTimelineItem\"\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: timelineItem.timelineItemProps,\n  setup(__props) {\n    const props = __props;\n    const ns = index.useNamespace(\"timeline-item\");\n    const defaultNodeKls = vue.computed(() => [ns.e(\"node\"), ns.em(\"node\", props.size || \"\"), ns.em(\"node\", props.type || \"\"), ns.is(\"hollow\", props.hollow)]);\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createElementBlock(\"li\", {\n        class: vue.normalizeClass([vue.unref(ns).b(), {\n          [vue.unref(ns).e(\"center\")]: _ctx.center\n        }])\n      }, [vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(ns).e(\"tail\"))\n      }, null, 2), !_ctx.$slots.dot ? (vue.openBlock(), vue.createElementBlock(\"div\", {\n        key: 0,\n        class: vue.normalizeClass(vue.unref(defaultNodeKls)),\n        style: vue.normalizeStyle({\n          backgroundColor: _ctx.color\n        })\n      }, [_ctx.icon ? (vue.openBlock(), vue.createBlock(vue.unref(index$1.ElIcon), {\n        key: 0,\n        class: vue.normalizeClass(vue.unref(ns).e(\"icon\"))\n      }, {\n        default: vue.withCtx(() => [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.icon)))]),\n        _: 1\n      }, 8, [\"class\"])) : vue.createCommentVNode(\"v-if\", true)], 6)) : vue.createCommentVNode(\"v-if\", true), _ctx.$slots.dot ? (vue.openBlock(), vue.createElementBlock(\"div\", {\n        key: 1,\n        class: vue.normalizeClass(vue.unref(ns).e(\"dot\"))\n      }, [vue.renderSlot(_ctx.$slots, \"dot\")], 2)) : vue.createCommentVNode(\"v-if\", true), vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(ns).e(\"wrapper\"))\n      }, [!_ctx.hideTimestamp && _ctx.placement === \"top\" ? (vue.openBlock(), vue.createElementBlock(\"div\", {\n        key: 0,\n        class: vue.normalizeClass([vue.unref(ns).e(\"timestamp\"), vue.unref(ns).is(\"top\")])\n      }, vue.toDisplayString(_ctx.timestamp), 3)) : vue.createCommentVNode(\"v-if\", true), vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(ns).e(\"content\"))\n      }, [vue.renderSlot(_ctx.$slots, \"default\")], 2), !_ctx.hideTimestamp && _ctx.placement === \"bottom\" ? (vue.openBlock(), vue.createElementBlock(\"div\", {\n        key: 1,\n        class: vue.normalizeClass([vue.unref(ns).e(\"timestamp\"), vue.unref(ns).is(\"bottom\")])\n      }, vue.toDisplayString(_ctx.timestamp), 3)) : vue.createCommentVNode(\"v-if\", true)], 2)], 2);\n    };\n  }\n});\nvar TimelineItem = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/timeline/src/timeline-item.vue\"]]);\nexports[\"default\"] = TimelineItem;","map":{"version":3,"names":["name","ns","index","useNamespace","defaultNodeKls","vue","computed","e","em","props","size","type","is","hollow"],"sources":["../../../../../../packages/components/timeline/src/timeline-item.vue"],"sourcesContent":["<template>\n  <li :class=\"[ns.b(), { [ns.e('center')]: center }]\">\n    <div :class=\"ns.e('tail')\" />\n    <div\n      v-if=\"!$slots.dot\"\n      :class=\"defaultNodeKls\"\n      :style=\"{\n        backgroundColor: color,\n      }\"\n    >\n      <el-icon v-if=\"icon\" :class=\"ns.e('icon')\">\n        <component :is=\"icon\" />\n      </el-icon>\n    </div>\n    <div v-if=\"$slots.dot\" :class=\"ns.e('dot')\">\n      <slot name=\"dot\" />\n    </div>\n\n    <div :class=\"ns.e('wrapper')\">\n      <div\n        v-if=\"!hideTimestamp && placement === 'top'\"\n        :class=\"[ns.e('timestamp'), ns.is('top')]\"\n      >\n        {{ timestamp }}\n      </div>\n\n      <div :class=\"ns.e('content')\">\n        <slot />\n      </div>\n\n      <div\n        v-if=\"!hideTimestamp && placement === 'bottom'\"\n        :class=\"[ns.e('timestamp'), ns.is('bottom')]\"\n      >\n        {{ timestamp }}\n      </div>\n    </div>\n  </li>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { useNamespace } from '@element-plus/hooks'\nimport { timelineItemProps } from './timeline-item'\n\ndefineOptions({\n  name: 'ElTimelineItem',\n})\n\nconst props = defineProps(timelineItemProps)\n\nconst ns = useNamespace('timeline-item')\nconst defaultNodeKls = computed(() => [\n  ns.e('node'),\n  ns.em('node', props.size || ''),\n  ns.em('node', props.type || ''),\n  ns.is('hollow', props.hollow),\n])\n</script>\n"],"mappings":";;;;;;;;;;;uCA8Cc;EACZA,IAAM;AACR;;;;;;IAIM,MAAAC,EAAA,GAAKC,KAAA,CAAAC,YAAA,CAAa,eAAe;IACjC,MAAAC,cAAA,GAAiBC,GAAA,CAAAC,QAAA,CAAS,MAAM,CACpCL,EAAA,CAAGM,CAAA,CAAE,MAAM,GACXN,EAAG,CAAAO,EAAA,CAAG,MAAQ,EAAAC,KAAA,CAAMC,IAAA,IAAQ,EAAE,GAC9BT,EAAG,CAAAO,EAAA,CAAG,MAAQ,EAAAC,KAAA,CAAME,IAAA,IAAQ,EAAE,GAC9BV,EAAG,CAAAW,EAAA,CAAG,QAAU,EAAAH,KAAA,CAAMI,MAAM,EAC7B"},"metadata":{},"sourceType":"script","externalDependencies":[]}