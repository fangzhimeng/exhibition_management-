{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar lodashUnified = require('lodash-unified');\nrequire('../../../utils/index.js');\nrequire('../../../hooks/index.js');\nrequire('../../../constants/index.js');\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar index = require('../../../hooks/use-size/index.js');\nvar event = require('../../../constants/event.js');\nvar shared = require('@vue/shared');\nconst colorPickerProps = runtime.buildProps({\n  modelValue: String,\n  id: String,\n  showAlpha: Boolean,\n  colorFormat: String,\n  disabled: Boolean,\n  size: index.useSizeProp,\n  popperClass: {\n    type: String,\n    default: \"\"\n  },\n  label: {\n    type: String,\n    default: void 0\n  },\n  tabindex: {\n    type: [String, Number],\n    default: 0\n  },\n  predefine: {\n    type: runtime.definePropType(Array)\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true\n  }\n});\nconst colorPickerEmits = {\n  [event.UPDATE_MODEL_EVENT]: val => shared.isString(val) || lodashUnified.isNil(val),\n  [event.CHANGE_EVENT]: val => shared.isString(val) || lodashUnified.isNil(val),\n  activeChange: val => shared.isString(val) || lodashUnified.isNil(val),\n  focus: event => event instanceof FocusEvent,\n  blur: event => event instanceof FocusEvent\n};\nconst colorPickerContextKey = Symbol(\"colorPickerContextKey\");\nexports.colorPickerContextKey = colorPickerContextKey;\nexports.colorPickerEmits = colorPickerEmits;\nexports.colorPickerProps = colorPickerProps;","map":{"version":3,"names":["colorPickerProps","runtime","buildProps","modelValue","String","id","showAlpha","Boolean","colorFormat","disabled","size","index","useSizeProp","popperClass","type","default","label","tabindex","Number","predefine","definePropType","Array","validateEvent","colorPickerEmits","event","UPDATE_MODEL_EVENT","val","shared","isString","lodashUnified","isNil","CHANGE_EVENT","activeChange","focus","FocusEvent","blur","colorPickerContextKey","Symbol"],"sources":["../../../../../../packages/components/color-picker/src/color-picker.ts"],"sourcesContent":["import { isNil } from 'lodash-unified'\nimport { buildProps, definePropType, isString } from '@element-plus/utils'\nimport { useSizeProp } from '@element-plus/hooks'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\n\nimport type { ComputedRef, ExtractPropTypes, InjectionKey } from 'vue'\nimport type ColorPicker from './color-picker.vue'\n\nexport const colorPickerProps = buildProps({\n  /**\n   * @description binding value\n   */\n  modelValue: String,\n  /**\n   * @description ColorPicker id\n   */\n  id: String,\n  /**\n   * @description whether to display the alpha slider\n   */\n  showAlpha: Boolean,\n  /**\n   * @description color format of v-model\n   */\n  colorFormat: String,\n  /**\n   * @description whether to disable the ColorPicker\n   */\n  disabled: Boolean,\n  /**\n   * @description size of ColorPicker\n   */\n  size: useSizeProp,\n  /**\n   * @description custom class name for ColorPicker's dropdown\n   */\n  popperClass: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description ColorPicker aria-label\n   */\n  label: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description ColorPicker tabindex\n   */\n  tabindex: {\n    type: [String, Number],\n    default: 0,\n  },\n  /**\n   * @description predefined color options\n   */\n  predefine: {\n    type: definePropType<string[]>(Array),\n  },\n  /**\n   * @description whether to trigger form validation\n   */\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n} as const)\nexport const colorPickerEmits = {\n  [UPDATE_MODEL_EVENT]: (val: string | null) => isString(val) || isNil(val),\n  [CHANGE_EVENT]: (val: string | null) => isString(val) || isNil(val),\n  activeChange: (val: string | null) => isString(val) || isNil(val),\n  focus: (event: FocusEvent) => event instanceof FocusEvent,\n  blur: (event: FocusEvent) => event instanceof FocusEvent,\n}\n\nexport type ColorPickerProps = ExtractPropTypes<typeof colorPickerProps>\nexport type ColorPickerEmits = typeof colorPickerEmits\nexport type ColorPickerInstance = InstanceType<typeof ColorPicker>\n\nexport interface ColorPickerContext {\n  currentColor: ComputedRef<string>\n}\n\nexport const colorPickerContextKey: InjectionKey<ColorPickerContext> = Symbol(\n  'colorPickerContextKey'\n)\n"],"mappings":";;;;;;;;;;;;;AAIY,MAACA,gBAAgB,GAAGC,OAAA,CAAAC,UAAU,CAAC;EACzCC,UAAU,EAAEC,MAAM;EAClBC,EAAE,EAAED,MAAM;EACVE,SAAS,EAAEC,OAAO;EAClBC,WAAW,EAAEJ,MAAM;EACnBK,QAAQ,EAAEF,OAAO;EACjBG,IAAI,EAAEC,KAAA,CAAAC,WAAW;EACjBC,WAAW,EAAE;IACXC,IAAI,EAAEV,MAAM;IACZW,OAAO,EAAE;EACb,CAAG;EACDC,KAAK,EAAE;IACLF,IAAI,EAAEV,MAAM;IACZW,OAAO,EAAE,KAAK;EAClB,CAAG;EACDE,QAAQ,EAAE;IACRH,IAAI,EAAE,CAACV,MAAM,EAAEc,MAAM,CAAC;IACtBH,OAAO,EAAE;EACb,CAAG;EACDI,SAAS,EAAE;IACTL,IAAI,EAAEb,OAAA,CAAAmB,cAAc,CAACC,KAAK;EAC9B,CAAG;EACDC,aAAa,EAAE;IACbR,IAAI,EAAEP,OAAO;IACbQ,OAAO,EAAE;EACb;AACA,CAAC;AACW,MAACQ,gBAAgB,GAAG;EAC9B,CAACC,KAAA,CAAAC,kBAAkB,GAAIC,GAAG,IAAKC,MAAA,CAAAC,QAAQ,CAACF,GAAG,CAAC,IAAIG,aAAA,CAAAC,KAAK,CAACJ,GAAG,CAAC;EAC1D,CAACF,KAAA,CAAAO,YAAY,GAAIL,GAAG,IAAKC,MAAA,CAAAC,QAAQ,CAACF,GAAG,CAAC,IAAIG,aAAA,CAAAC,KAAK,CAACJ,GAAG,CAAC;EACpDM,YAAY,EAAGN,GAAG,IAAKC,MAAA,CAAAC,QAAQ,CAACF,GAAG,CAAC,IAAIG,aAAA,CAAAC,KAAK,CAACJ,GAAG,CAAC;EAClDO,KAAK,EAAGT,KAAK,IAAKA,KAAK,YAAYU,UAAU;EAC7CC,IAAI,EAAGX,KAAK,IAAKA,KAAK,YAAYU;AACpC;AACY,MAACE,qBAAqB,GAAGC,MAAM,CAAC,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}