{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar core = require('@vueuse/core');\nrequire('../../../utils/index.js');\nrequire('../../../hooks/index.js');\nvar util = require('./util.js');\nvar bar = require('./bar2.js');\nvar constants = require('./constants.js');\nvar scrollbar = require('./scrollbar.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar style = require('../../../utils/dom/style.js');\nvar shared = require('@vue/shared');\nvar types = require('../../../utils/types.js');\nvar error = require('../../../utils/error.js');\nconst COMPONENT_NAME = \"ElScrollbar\";\nconst __default__ = vue.defineComponent({\n  name: COMPONENT_NAME\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: scrollbar.scrollbarProps,\n  emits: scrollbar.scrollbarEmits,\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    const props = __props;\n    const ns = index.useNamespace(\"scrollbar\");\n    let stopResizeObserver = void 0;\n    let stopResizeListener = void 0;\n    const scrollbarRef = vue.ref();\n    const wrapRef = vue.ref();\n    const resizeRef = vue.ref();\n    const sizeWidth = vue.ref(\"0\");\n    const sizeHeight = vue.ref(\"0\");\n    const barRef = vue.ref();\n    const ratioY = vue.ref(1);\n    const ratioX = vue.ref(1);\n    const wrapStyle = vue.computed(() => {\n      const style$1 = {};\n      if (props.height) style$1.height = style.addUnit(props.height);\n      if (props.maxHeight) style$1.maxHeight = style.addUnit(props.maxHeight);\n      return [props.wrapStyle, style$1];\n    });\n    const wrapKls = vue.computed(() => {\n      return [props.wrapClass, ns.e(\"wrap\"), {\n        [ns.em(\"wrap\", \"hidden-default\")]: !props.native\n      }];\n    });\n    const resizeKls = vue.computed(() => {\n      return [ns.e(\"view\"), props.viewClass];\n    });\n    const handleScroll = () => {\n      var _a;\n      if (wrapRef.value) {\n        (_a = barRef.value) == null ? void 0 : _a.handleScroll(wrapRef.value);\n        emit(\"scroll\", {\n          scrollTop: wrapRef.value.scrollTop,\n          scrollLeft: wrapRef.value.scrollLeft\n        });\n      }\n    };\n    function scrollTo(arg1, arg2) {\n      if (shared.isObject(arg1)) {\n        wrapRef.value.scrollTo(arg1);\n      } else if (types.isNumber(arg1) && types.isNumber(arg2)) {\n        wrapRef.value.scrollTo(arg1, arg2);\n      }\n    }\n    const setScrollTop = value => {\n      if (!types.isNumber(value)) {\n        error.debugWarn(COMPONENT_NAME, \"value must be a number\");\n        return;\n      }\n      wrapRef.value.scrollTop = value;\n    };\n    const setScrollLeft = value => {\n      if (!types.isNumber(value)) {\n        error.debugWarn(COMPONENT_NAME, \"value must be a number\");\n        return;\n      }\n      wrapRef.value.scrollLeft = value;\n    };\n    const update = () => {\n      if (!wrapRef.value) return;\n      const offsetHeight = wrapRef.value.offsetHeight - util.GAP;\n      const offsetWidth = wrapRef.value.offsetWidth - util.GAP;\n      const originalHeight = offsetHeight ** 2 / wrapRef.value.scrollHeight;\n      const originalWidth = offsetWidth ** 2 / wrapRef.value.scrollWidth;\n      const height = Math.max(originalHeight, props.minSize);\n      const width = Math.max(originalWidth, props.minSize);\n      ratioY.value = originalHeight / (offsetHeight - originalHeight) / (height / (offsetHeight - height));\n      ratioX.value = originalWidth / (offsetWidth - originalWidth) / (width / (offsetWidth - width));\n      sizeHeight.value = height + util.GAP < offsetHeight ? `${height}px` : \"\";\n      sizeWidth.value = width + util.GAP < offsetWidth ? `${width}px` : \"\";\n    };\n    vue.watch(() => props.noresize, noresize => {\n      if (noresize) {\n        stopResizeObserver == null ? void 0 : stopResizeObserver();\n        stopResizeListener == null ? void 0 : stopResizeListener();\n      } else {\n        ;\n        ({\n          stop: stopResizeObserver\n        } = core.useResizeObserver(resizeRef, update));\n        stopResizeListener = core.useEventListener(\"resize\", update);\n      }\n    }, {\n      immediate: true\n    });\n    vue.watch(() => [props.maxHeight, props.height], () => {\n      if (!props.native) vue.nextTick(() => {\n        var _a;\n        update();\n        if (wrapRef.value) {\n          (_a = barRef.value) == null ? void 0 : _a.handleScroll(wrapRef.value);\n        }\n      });\n    });\n    vue.provide(constants.scrollbarContextKey, vue.reactive({\n      scrollbarElement: scrollbarRef,\n      wrapElement: wrapRef\n    }));\n    vue.onMounted(() => {\n      if (!props.native) vue.nextTick(() => {\n        update();\n      });\n    });\n    vue.onUpdated(() => update());\n    expose({\n      wrapRef,\n      update,\n      scrollTo,\n      setScrollTop,\n      setScrollLeft,\n      handleScroll\n    });\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createElementBlock(\"div\", {\n        ref_key: \"scrollbarRef\",\n        ref: scrollbarRef,\n        class: vue.normalizeClass(vue.unref(ns).b())\n      }, [vue.createElementVNode(\"div\", {\n        ref_key: \"wrapRef\",\n        ref: wrapRef,\n        class: vue.normalizeClass(vue.unref(wrapKls)),\n        style: vue.normalizeStyle(vue.unref(wrapStyle)),\n        onScroll: handleScroll\n      }, [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.tag), {\n        id: _ctx.id,\n        ref_key: \"resizeRef\",\n        ref: resizeRef,\n        class: vue.normalizeClass(vue.unref(resizeKls)),\n        style: vue.normalizeStyle(_ctx.viewStyle),\n        role: _ctx.role,\n        \"aria-label\": _ctx.ariaLabel,\n        \"aria-orientation\": _ctx.ariaOrientation\n      }, {\n        default: vue.withCtx(() => [vue.renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      }, 8, [\"id\", \"class\", \"style\", \"role\", \"aria-label\", \"aria-orientation\"]))], 38), !_ctx.native ? (vue.openBlock(), vue.createBlock(bar[\"default\"], {\n        key: 0,\n        ref_key: \"barRef\",\n        ref: barRef,\n        height: sizeHeight.value,\n        width: sizeWidth.value,\n        always: _ctx.always,\n        \"ratio-x\": ratioX.value,\n        \"ratio-y\": ratioY.value\n      }, null, 8, [\"height\", \"width\", \"always\", \"ratio-x\", \"ratio-y\"])) : vue.createCommentVNode(\"v-if\", true)], 2);\n    };\n  }\n});\nvar Scrollbar = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/scrollbar/src/scrollbar.vue\"]]);\nexports[\"default\"] = Scrollbar;","map":{"version":3,"names":["name","COMPONENT_NAME","ns","index","useNamespace","stopResizeObserver","stopResizeListener","scrollbarRef","vue","ref","wrapRef","resizeRef","sizeWidth","sizeHeight","barRef","ratioY","ratioX","wrapStyle","computed","style$1","props","height","style","addUnit","maxHeight","wrapKls","wrapClass","e","em","native","resizeKls","viewClass","handleScroll","_a","value","emit","scrollTop","scrollLeft","scrollTo","arg1","arg2","shared","isObject","types","isNumber","setScrollTop","error","debugWarn","setScrollLeft","update","offsetHeight","util","GAP","offsetWidth","originalHeight","scrollHeight","originalWidth","scrollWidth","Math","max","minSize","width","watch","noresize","stop","core","useResizeObserver","useEventListener","immediate","nextTick","provide","constants","scrollbarContextKey","reactive","scrollbarElement","wrapElement","onMounted","onUpdated","expose"],"sources":["../../../../../../packages/components/scrollbar/src/scrollbar.vue"],"sourcesContent":["<template>\n  <div ref=\"scrollbarRef\" :class=\"ns.b()\">\n    <div\n      ref=\"wrapRef\"\n      :class=\"wrapKls\"\n      :style=\"wrapStyle\"\n      @scroll=\"handleScroll\"\n    >\n      <component\n        :is=\"tag\"\n        :id=\"id\"\n        ref=\"resizeRef\"\n        :class=\"resizeKls\"\n        :style=\"viewStyle\"\n        :role=\"role\"\n        :aria-label=\"ariaLabel\"\n        :aria-orientation=\"ariaOrientation\"\n      >\n        <slot />\n      </component>\n    </div>\n    <template v-if=\"!native\">\n      <bar\n        ref=\"barRef\"\n        :height=\"sizeHeight\"\n        :width=\"sizeWidth\"\n        :always=\"always\"\n        :ratio-x=\"ratioX\"\n        :ratio-y=\"ratioY\"\n      />\n    </template>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  nextTick,\n  onMounted,\n  onUpdated,\n  provide,\n  reactive,\n  ref,\n  watch,\n} from 'vue'\nimport { useEventListener, useResizeObserver } from '@vueuse/core'\nimport { addUnit, debugWarn, isNumber, isObject } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { GAP } from './util'\nimport Bar from './bar.vue'\nimport { scrollbarContextKey } from './constants'\nimport { scrollbarEmits, scrollbarProps } from './scrollbar'\nimport type { BarInstance } from './bar'\nimport type { CSSProperties, StyleValue } from 'vue'\n\nconst COMPONENT_NAME = 'ElScrollbar'\n\ndefineOptions({\n  name: COMPONENT_NAME,\n})\n\nconst props = defineProps(scrollbarProps)\nconst emit = defineEmits(scrollbarEmits)\n\nconst ns = useNamespace('scrollbar')\n\nlet stopResizeObserver: (() => void) | undefined = undefined\nlet stopResizeListener: (() => void) | undefined = undefined\n\nconst scrollbarRef = ref<HTMLDivElement>()\nconst wrapRef = ref<HTMLDivElement>()\nconst resizeRef = ref<HTMLElement>()\n\nconst sizeWidth = ref('0')\nconst sizeHeight = ref('0')\nconst barRef = ref<BarInstance>()\nconst ratioY = ref(1)\nconst ratioX = ref(1)\n\nconst wrapStyle = computed<StyleValue>(() => {\n  const style: CSSProperties = {}\n  if (props.height) style.height = addUnit(props.height)\n  if (props.maxHeight) style.maxHeight = addUnit(props.maxHeight)\n  return [props.wrapStyle, style]\n})\n\nconst wrapKls = computed(() => {\n  return [\n    props.wrapClass,\n    ns.e('wrap'),\n    { [ns.em('wrap', 'hidden-default')]: !props.native },\n  ]\n})\n\nconst resizeKls = computed(() => {\n  return [ns.e('view'), props.viewClass]\n})\n\nconst handleScroll = () => {\n  if (wrapRef.value) {\n    barRef.value?.handleScroll(wrapRef.value)\n\n    emit('scroll', {\n      scrollTop: wrapRef.value.scrollTop,\n      scrollLeft: wrapRef.value.scrollLeft,\n    })\n  }\n}\n\n// TODO: refactor method overrides, due to script setup dts\n// @ts-nocheck\nfunction scrollTo(xCord: number, yCord?: number): void\nfunction scrollTo(options: ScrollToOptions): void\nfunction scrollTo(arg1: unknown, arg2?: number) {\n  if (isObject(arg1)) {\n    wrapRef.value!.scrollTo(arg1)\n  } else if (isNumber(arg1) && isNumber(arg2)) {\n    wrapRef.value!.scrollTo(arg1, arg2)\n  }\n}\n\nconst setScrollTop = (value: number) => {\n  if (!isNumber(value)) {\n    debugWarn(COMPONENT_NAME, 'value must be a number')\n    return\n  }\n  wrapRef.value!.scrollTop = value\n}\n\nconst setScrollLeft = (value: number) => {\n  if (!isNumber(value)) {\n    debugWarn(COMPONENT_NAME, 'value must be a number')\n    return\n  }\n  wrapRef.value!.scrollLeft = value\n}\n\nconst update = () => {\n  if (!wrapRef.value) return\n  const offsetHeight = wrapRef.value.offsetHeight - GAP\n  const offsetWidth = wrapRef.value.offsetWidth - GAP\n\n  const originalHeight = offsetHeight ** 2 / wrapRef.value.scrollHeight\n  const originalWidth = offsetWidth ** 2 / wrapRef.value.scrollWidth\n  const height = Math.max(originalHeight, props.minSize)\n  const width = Math.max(originalWidth, props.minSize)\n\n  ratioY.value =\n    originalHeight /\n    (offsetHeight - originalHeight) /\n    (height / (offsetHeight - height))\n  ratioX.value =\n    originalWidth /\n    (offsetWidth - originalWidth) /\n    (width / (offsetWidth - width))\n\n  sizeHeight.value = height + GAP < offsetHeight ? `${height}px` : ''\n  sizeWidth.value = width + GAP < offsetWidth ? `${width}px` : ''\n}\n\nwatch(\n  () => props.noresize,\n  (noresize) => {\n    if (noresize) {\n      stopResizeObserver?.()\n      stopResizeListener?.()\n    } else {\n      ;({ stop: stopResizeObserver } = useResizeObserver(resizeRef, update))\n      stopResizeListener = useEventListener('resize', update)\n    }\n  },\n  { immediate: true }\n)\n\nwatch(\n  () => [props.maxHeight, props.height],\n  () => {\n    if (!props.native)\n      nextTick(() => {\n        update()\n        if (wrapRef.value) {\n          barRef.value?.handleScroll(wrapRef.value)\n        }\n      })\n  }\n)\n\nprovide(\n  scrollbarContextKey,\n  reactive({\n    scrollbarElement: scrollbarRef,\n    wrapElement: wrapRef,\n  })\n)\n\nonMounted(() => {\n  if (!props.native)\n    nextTick(() => {\n      update()\n    })\n})\nonUpdated(() => update())\n\ndefineExpose({\n  /** @description scrollbar wrap ref */\n  wrapRef,\n  /** @description update scrollbar state manually */\n  update,\n  /** @description scrolls to a particular set of coordinates */\n  scrollTo,\n  /** @description set distance to scroll top */\n  setScrollTop,\n  /** @description set distance to scroll left */\n  setScrollLeft,\n  /** @description handle scroll event */\n  handleScroll,\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}