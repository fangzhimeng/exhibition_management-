{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../form/index.js');\nrequire('../../../constants/index.js');\nrequire('../../../hooks/index.js');\nrequire('../../../utils/index.js');\nvar radioGroup = require('./radio-group.js');\nvar constants = require('./constants.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar index$1 = require('../../../hooks/use-id/index.js');\nvar useFormItem = require('../../form/src/hooks/use-form-item.js');\nvar event = require('../../../constants/event.js');\nvar error = require('../../../utils/error.js');\nconst _hoisted_1 = [\"id\", \"aria-label\", \"aria-labelledby\"];\nconst __default__ = vue.defineComponent({\n  name: \"ElRadioGroup\"\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: radioGroup.radioGroupProps,\n  emits: radioGroup.radioGroupEmits,\n  setup(__props, {\n    emit\n  }) {\n    const props = __props;\n    const ns = index.useNamespace(\"radio\");\n    const radioId = index$1.useId();\n    const radioGroupRef = vue.ref();\n    const {\n      formItem\n    } = useFormItem.useFormItem();\n    const {\n      inputId: groupId,\n      isLabeledByFormItem\n    } = useFormItem.useFormItemInputId(props, {\n      formItemContext: formItem\n    });\n    const changeEvent = value => {\n      emit(event.UPDATE_MODEL_EVENT, value);\n      vue.nextTick(() => emit(\"change\", value));\n    };\n    vue.onMounted(() => {\n      const radios = radioGroupRef.value.querySelectorAll(\"[type=radio]\");\n      const firstLabel = radios[0];\n      if (!Array.from(radios).some(radio => radio.checked) && firstLabel) {\n        firstLabel.tabIndex = 0;\n      }\n    });\n    const name = vue.computed(() => {\n      return props.name || radioId.value;\n    });\n    vue.provide(constants.radioGroupKey, vue.reactive({\n      ...vue.toRefs(props),\n      changeEvent,\n      name\n    }));\n    vue.watch(() => props.modelValue, () => {\n      if (props.validateEvent) {\n        formItem == null ? void 0 : formItem.validate(\"change\").catch(err => error.debugWarn(err));\n      }\n    });\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createElementBlock(\"div\", {\n        id: vue.unref(groupId),\n        ref_key: \"radioGroupRef\",\n        ref: radioGroupRef,\n        class: vue.normalizeClass(vue.unref(ns).b(\"group\")),\n        role: \"radiogroup\",\n        \"aria-label\": !vue.unref(isLabeledByFormItem) ? _ctx.label || \"radio-group\" : void 0,\n        \"aria-labelledby\": vue.unref(isLabeledByFormItem) ? vue.unref(formItem).labelId : void 0\n      }, [vue.renderSlot(_ctx.$slots, \"default\")], 10, _hoisted_1);\n    };\n  }\n});\nvar RadioGroup = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/radio/src/radio-group.vue\"]]);\nexports[\"default\"] = RadioGroup;","map":{"version":3,"names":["name","ns","index","useNamespace","radioId","index$1","useId","radioGroupRef","vue","ref","formItem","useFormItem","inputId","groupId","isLabeledByFormItem","useFormItemInputId","props","formItemContext","changeEvent","value","emit","event","UPDATE_MODEL_EVENT","nextTick","onMounted","radios","querySelectorAll","firstLabel","Array","from","some","radio","checked","tabIndex","computed","provide","constants","radioGroupKey","reactive","toRefs","watch","modelValue","validateEvent","validate","catch","err","error","debugWarn"],"sources":["../../../../../../packages/components/radio/src/radio-group.vue"],"sourcesContent":["<template>\n  <div\n    :id=\"groupId\"\n    ref=\"radioGroupRef\"\n    :class=\"ns.b('group')\"\n    role=\"radiogroup\"\n    :aria-label=\"!isLabeledByFormItem ? label || 'radio-group' : undefined\"\n    :aria-labelledby=\"isLabeledByFormItem ? formItem!.labelId : undefined\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  nextTick,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  toRefs,\n  watch,\n} from 'vue'\nimport { useFormItem, useFormItemInputId } from '@element-plus/components/form'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { useId, useNamespace } from '@element-plus/hooks'\nimport { debugWarn } from '@element-plus/utils'\nimport { radioGroupEmits, radioGroupProps } from './radio-group'\nimport { radioGroupKey } from './constants'\n\nimport type { RadioGroupProps } from './radio-group'\n\ndefineOptions({\n  name: 'ElRadioGroup',\n})\n\nconst props = defineProps(radioGroupProps)\nconst emit = defineEmits(radioGroupEmits)\n\nconst ns = useNamespace('radio')\nconst radioId = useId()\nconst radioGroupRef = ref<HTMLDivElement>()\nconst { formItem } = useFormItem()\nconst { inputId: groupId, isLabeledByFormItem } = useFormItemInputId(props, {\n  formItemContext: formItem,\n})\n\nconst changeEvent = (value: RadioGroupProps['modelValue']) => {\n  emit(UPDATE_MODEL_EVENT, value)\n  nextTick(() => emit('change', value))\n}\n\nonMounted(() => {\n  const radios =\n    radioGroupRef.value!.querySelectorAll<HTMLInputElement>('[type=radio]')\n  const firstLabel = radios[0]\n  if (!Array.from(radios).some((radio) => radio.checked) && firstLabel) {\n    firstLabel.tabIndex = 0\n  }\n})\n\nconst name = computed(() => {\n  return props.name || radioId.value\n})\n\nprovide(\n  radioGroupKey,\n  reactive({\n    ...toRefs(props),\n    changeEvent,\n    name,\n  })\n)\n\nwatch(\n  () => props.modelValue,\n  () => {\n    if (props.validateEvent) {\n      formItem?.validate('change').catch((err) => debugWarn(err))\n    }\n  }\n)\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;;;;uCAiCc;EACZA,IAAM;AACR;;;;;;;;;IAKM,MAAAC,EAAA,GAAKC,KAAA,CAAAC,YAAA,CAAa,OAAO;IAC/B,MAAMC,OAAA,GAAUC,OAAA,CAAAC,KAAM;IACtB,MAAMC,aAAA,GAAgBC,GAAA,CAAAC,GAAoB;IACpC;MAAEC;IAAA,IAAaC,WAAA,CAAAA,WAAY;IACjC,MAAM;MAAEC,OAAA,EAASC,OAAS;MAAAC;IAAA,IAAwBH,WAAA,CAAAI,kBAAA,CAAmBC,KAAO;MAC1EC,eAAiB,EAAAP;IAAA,CAClB;IAEK,MAAAQ,WAAA,GAAeC,KAAyC;MAC5DC,IAAA,CAAKC,KAAA,CAAAC,kBAAA,EAAoBH,KAAK;MAC9BX,GAAA,CAAAe,QAAA,CAAS,MAAMH,IAAA,CAAK,QAAU,EAAAD,KAAK,CAAC;IAAA,CACtC;IAEAX,GAAA,CAAAgB,SAAA,CAAU,MAAM;MACd,MAAMC,MACJ,GAAAlB,aAAA,CAAcY,KAAO,CAAAO,gBAAA,CAAmC,cAAc;MACxE,MAAMC,UAAA,GAAaF,MAAO;MACtB,KAACG,KAAM,CAAAC,IAAA,CAAKJ,MAAM,EAAEK,IAAK,CAACC,KAAU,IAAAA,KAAA,CAAMC,OAAO,KAAKL,UAAY;QACpEA,UAAA,CAAWM,QAAW;MAAA;IACxB,CACD;IAEK,MAAAjC,IAAA,GAAOQ,GAAA,CAAA0B,QAAA,CAAS,MAAM;MACnB,OAAAlB,KAAA,CAAMhB,IAAA,IAAQI,OAAQ,CAAAe,KAAA;IAAA,CAC9B;IAEDX,GAAA,CAAA2B,OAAA,CACEC,SAAA,CAAAC,aAAA,EACA7B,GAAA,CAAA8B,QAAS;MACP,GAAG9B,GAAA,CAAA+B,MAAA,CAAOvB,KAAK;MACfE,WAAA;MACAlB;IAAA,CACD,CACH;IAGEQ,GAAA,CAAAgC,KAAA,OAAMxB,KAAM,CAAAyB,UAAA,EACZ,MAAM;MACJ,IAAIzB,KAAA,CAAM0B,aAAe;QACbhC,QAAA,WAAS,SAAUA,QAAO,CAAQiC,QAAA,SAAU,EAAAC,KAAI,CAAAC,GAAA,IAAAC,KAAA,CAAAC,SAAA,CAAAF,GAAA;MAAA;IAC5D,CAEJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}