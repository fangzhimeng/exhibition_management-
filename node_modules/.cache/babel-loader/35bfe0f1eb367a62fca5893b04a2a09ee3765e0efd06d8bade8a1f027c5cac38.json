{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../../constants/index.js');\nrequire('../../../hooks/index.js');\nvar checkTag = require('./check-tag.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar event = require('../../../constants/event.js');\nconst __default__ = vue.defineComponent({\n  name: \"ElCheckTag\"\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: checkTag.checkTagProps,\n  emits: checkTag.checkTagEmits,\n  setup(__props, {\n    emit\n  }) {\n    const props = __props;\n    const ns = index.useNamespace(\"check-tag\");\n    const containerKls = vue.computed(() => [ns.b(), ns.is(\"checked\", props.checked)]);\n    const handleChange = () => {\n      const checked = !props.checked;\n      emit(event.CHANGE_EVENT, checked);\n      emit(\"update:checked\", checked);\n    };\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createElementBlock(\"span\", {\n        class: vue.normalizeClass(vue.unref(containerKls)),\n        onClick: handleChange\n      }, [vue.renderSlot(_ctx.$slots, \"default\")], 2);\n    };\n  }\n});\nvar CheckTag = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/check-tag/src/check-tag.vue\"]]);\nexports[\"default\"] = CheckTag;","map":{"version":3,"names":["name","ns","index","useNamespace","containerKls","vue","computed","b","is","props","checked","handleChange","emit","event","CHANGE_EVENT"],"sources":["../../../../../../packages/components/check-tag/src/check-tag.vue"],"sourcesContent":["<template>\n  <span :class=\"containerKls\" @click=\"handleChange\">\n    <slot />\n  </span>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { CHANGE_EVENT } from '@element-plus/constants'\nimport { useNamespace } from '@element-plus/hooks'\nimport { checkTagEmits, checkTagProps } from './check-tag'\n\ndefineOptions({\n  name: 'ElCheckTag',\n})\nconst props = defineProps(checkTagProps)\nconst emit = defineEmits(checkTagEmits)\n\nconst ns = useNamespace('check-tag')\nconst containerKls = computed(() => [ns.b(), ns.is('checked', props.checked)])\n\nconst handleChange = () => {\n  const checked = !props.checked\n  emit(CHANGE_EVENT, checked)\n  emit('update:checked', checked)\n}\n</script>\n"],"mappings":";;;;;;;;;;;;uCAYc;EACZA,IAAM;AACR;;;;;;;;;IAIM,MAAAC,EAAA,GAAKC,KAAA,CAAAC,YAAA,CAAa,WAAW;IACnC,MAAMC,YAAe,GAAAC,GAAA,CAAAC,QAAA,CAAS,MAAM,CAACL,EAAG,CAAAM,CAAA,EAAK,EAAAN,EAAA,CAAGO,EAAG,YAAWC,KAAM,CAAAC,OAAO,CAAC,CAAC;IAE7E,MAAMC,YAAA,GAAeA,CAAA,KAAM;MACnB,MAAAD,OAAA,GAAU,CAACD,KAAM,CAAAC,OAAA;MACvBE,IAAA,CAAKC,KAAA,CAAAC,YAAA,EAAcJ,OAAO;MAC1BE,IAAA,CAAK,kBAAkBF,OAAO;IAAA,CAChC"},"metadata":{},"sourceType":"script","externalDependencies":[]}