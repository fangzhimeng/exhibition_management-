{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nrequire('../../../utils/index.js');\nrequire('../../../constants/index.js');\nvar shared = require('@vue/shared');\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar event = require('../../../constants/event.js');\nconst isValidRange = range => shared.isArray(range) && range.length === 2 && range.every(item => shared.isDate(item));\nconst calendarProps = runtime.buildProps({\n  modelValue: {\n    type: Date\n  },\n  range: {\n    type: runtime.definePropType(Array),\n    validator: isValidRange\n  }\n});\nconst calendarEmits = {\n  [event.UPDATE_MODEL_EVENT]: value => shared.isDate(value),\n  [event.INPUT_EVENT]: value => shared.isDate(value)\n};\nexports.calendarEmits = calendarEmits;\nexports.calendarProps = calendarProps;","map":{"version":3,"names":["isValidRange","range","shared","isArray","length","every","item","isDate","calendarProps","runtime","buildProps","modelValue","type","Date","definePropType","Array","validator","calendarEmits","event","UPDATE_MODEL_EVENT","value","INPUT_EVENT"],"sources":["../../../../../../packages/components/calendar/src/calendar.ts"],"sourcesContent":["import {\n  buildProps,\n  definePropType,\n  isArray,\n  isDate,\n} from '@element-plus/utils'\nimport { INPUT_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport type { ExtractPropTypes } from 'vue'\n\nexport type CalendarDateType =\n  | 'prev-month'\n  | 'next-month'\n  | 'prev-year'\n  | 'next-year'\n  | 'today'\n\nconst isValidRange = (range: unknown): range is [Date, Date] =>\n  isArray(range) && range.length === 2 && range.every((item) => isDate(item))\n\nexport const calendarProps = buildProps({\n  /**\n   * @description binding value\n   */\n  modelValue: {\n    type: Date,\n  },\n  /**\n   * @description time range, including start time and end time.\n   *   Start time must be start day of week, end time must be end day of week, the time span cannot exceed two months.\n   */\n  range: {\n    type: definePropType<[Date, Date]>(Array),\n    validator: isValidRange,\n  },\n} as const)\nexport type CalendarProps = ExtractPropTypes<typeof calendarProps>\n\nexport const calendarEmits = {\n  [UPDATE_MODEL_EVENT]: (value: Date) => isDate(value),\n  [INPUT_EVENT]: (value: Date) => isDate(value),\n}\nexport type CalendarEmits = typeof calendarEmits\n"],"mappings":";;;;;;;;;;AAOA,MAAMA,YAAY,GAAIC,KAAK,IAAKC,MAAA,CAAAC,OAAO,CAACF,KAAK,CAAC,IAAIA,KAAK,CAACG,MAAM,KAAK,CAAC,IAAIH,KAAK,CAACI,KAAK,CAAEC,IAAI,IAAKJ,MAAA,CAAAK,MAAM,CAACD,IAAI,CAAC,CAAC;AAC/F,MAACE,aAAa,GAAGC,OAAA,CAAAC,UAAU,CAAC;EACtCC,UAAU,EAAE;IACVC,IAAI,EAAEC;EACV,CAAG;EACDZ,KAAK,EAAE;IACLW,IAAI,EAAEH,OAAA,CAAAK,cAAc,CAACC,KAAK,CAAC;IAC3BC,SAAS,EAAEhB;EACf;AACA,CAAC;AACW,MAACiB,aAAa,GAAG;EAC3B,CAACC,KAAA,CAAAC,kBAAkB,GAAIC,KAAK,IAAKlB,MAAA,CAAAK,MAAM,CAACa,KAAK,CAAC;EAC9C,CAACF,KAAA,CAAAG,WAAW,GAAID,KAAK,IAAKlB,MAAA,CAAAK,MAAM,CAACa,KAAK;AACxC"},"metadata":{},"sourceType":"script","externalDependencies":[]}